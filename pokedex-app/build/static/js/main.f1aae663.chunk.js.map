{"version":3,"sources":["api/getMoveByName.js","data/dataTypeWeaknesses.js","api/getWeaknesses.js","api/getPokeInfoByID.js","components/PokemonDrawer/PokeInfoPanels/About.js","components/PokemonDrawer/PokeInfoPanels/BaseStats.js","components/PokemonDrawer/PokeInfoPanels/Description.js","components/PokemonDrawer/PokeInfoPanels/Moves.js","helpers/sortTableMoves.js","components/PokemonDrawer/PokeInfo.js","hooks/useFetchPokeInfo.js","components/PokemonDrawer/PokemonDrawer.js","components/PokemonThumbnail.js","api/settingsURL.js","api/getMiniData.js","api/api.js","components/UI/GoBackButton.js","components/UI/NavButtons.js","components/UI/Drawer.js","components/UI/ToolBarPages.js","components/Pages/Pokedex.js","hooks/useFetchPokedex.js","components/SearchPokemon/AddPokemon.js","components/Pages/SearchPokemons.js","components/Pages/Landing.js","components/SearchMoves/AddMoves.js","components/SearchMoves/MoveCard.js","components/Pages/SearchMoves.js","components/TypesCombination/Results.js","components/TypesCombination/TypeButton.js","components/TypesCombination/CombinationContainer.js","components/Pages/TypeCombination.js","components/PokemonQuiz/Quiz.js","components/PokemonQuiz/SelectLevel.js","components/Pages/PokemonQuiz.js","hooks/useFetchGetPokemonID.js","routers/AppRouter.js","components/UI/Navbar.js","components/UI/Copyright.js","components/UI/Footer.js","App.js","theme.js","index.js"],"names":["getMoveByName","moveName","a","moveURL","fetch","resp","json","accuracy","damage_class","name","priority","description","flavor_text_entries","effect_entries","effect_chance","pp","power","target","type","dataClass","filter","desc","language","version_group","flavor_text","effect","short_effect","dataTypeWeaknesses","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","getWeaknesses","types","weaknesses","length","data","reduce","combination","Object","entries","typeName","number","acc","key","value","push","concat","getPokeInfoByID","id","abilitiesData","abilities","height","moves","species","statsData","stats","weight","typesData","map","movesFilter","version_group_details","find","Promise","all","move","movesData","getSpeciesData","url","speciesData","ability","image","obj","item","stat","base_stat","totalStats","sum","eggsData","egg_groups","gender","gender_rate","genera","generation","hatch","hatch_counter","eggs","egg","gen","genus","About","male","female","spacing","width","as","color","paddingY","textTransform","fontWeight","substring","lastIndexOf","toUpperCase","size","mt","textAlign","isInline","alignItems","FaMars","w","h","FaVenus","BaseStats","renderWeaks","valueColor","title","colorScheme","max","weak","getWeaks","background","borderRadius","paddingX","marginX","getResist","Description","variant","genDesc","index","align","version","replace","Moves","useState","sortedMoves","setSortedMoves","sorted","setSorted","ascending","setAscending","useEffect","sort","movesRef","b","sortTableAscending","sortTableDescending","header","onClick","sorting","justify","cursor","TriangleDown","aria-label","TriangleUp","justifyContent","bg","rounded","PokeInfo","pokemon","isMounted","useRef","loading","state","setState","current","then","pokeData","useFetchPokeInfo","tabName","_selected","borderBottom","thickness","speed","emptyColor","PokemonDrawer","onClose","isOpen","placement","overflowY","backgroundColor","padding","direction","fontSize","ArrowBack","FaHeart","toString","padStart","alignSelf","marginBottom","maxWidth","src","zIndex","className","marginTop","paddingTop","base","sm","md","PokemonThumbnail","drawer","setDrawer","maxH","maxW","alt","maxHeight","URL_POKEMON","getMiniData","params","res","sprites","other","front_default","api","page","response","results","GoBackButton","history","useHistory","goBack","NavButtons","functionOnClick","bgColor","route","navButton","Link","boxShadow","overflow","_hover","opacity","to","undefined","marginRight","window","open","DrawerNav","textColor","FaGithub","ToolBarPages","useLocation","pathname","Hamburger","Drawer","Pokedex","setPage","pokemons","error","newPokemons","useFetchPokedex","alignContent","paddingBottom","gap","columns","div","animate","custom","initial","variants","hidden","y","visible","transition","delay","bgGradient","display","AddPokemon","setPokemons","inputValue","setInputValue","setError","setLoading","handleSubmit","e","preventDefault","nameSearch","toLowerCase","catch","onSubmit","children","Search","placeholder","isInvalid","errorBorderColor","onChange","event","propType","PropTypes","func","isRequired","SearchPokemons","limit","backgroundPosition","backgroundSize","flexGrow","slice","Landing","AddMoves","setMoves","MoveCard","SearchMoves","ResultsCombination","firstType","secondType","setCombination","border","textShadow","justifyItems","wrap","margin","TypeButton","selectedType","changeSelectedType","mr","ml","CombinationContainer","setFirstType","setSecondType","handleChangeFirstType","handleChangeSecondType","Results","TypeCombinationPage","Quiz","nextPokemon","status","setStatus","inputName","setInputName","counter","setCounter","c","draggable","style","imageRendering","p","SelectLevel","setGeneration","bgClip","min","PokemonQuiz","getRandomNumber","Math","floor","random","setRandom","useFetchGetPokemonID","idRandom","AppRouter","exact","path","TypeCombination","Navbar","ReachLink","Copyright","textcolor","position","Date","getFullYear","Footer","App","templateColumns","templateRows","backgroundImage","overflowX","marginY","extendTheme","colors","primary","secondary","shadows","outline","ReactDOM","render","StrictMode","resetCSS","theme","document","getElementById"],"mappings":"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","file":"static/js/main.f1aae663.chunk.js","sourcesContent":["export const getMoveByName = async (moveName) => {\r\n  const moveURL = `https://pokeapi.co/api/v2/move/${moveName}/`;\r\n\r\n  const resp = await fetch(moveURL);\r\n\r\n  const {\r\n    accuracy,\r\n    damage_class,\r\n    name,\r\n    priority,\r\n    flavor_text_entries: description,\r\n    effect_entries,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    target,\r\n    type,\r\n  } = await resp.json();\r\n\r\n  const dataClass = damage_class.name;\r\n\r\n  return {\r\n    accuracy,\r\n    dataClass,\r\n    name,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"x-y\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"sword\")\r\n    )[0]?.flavor_text,\r\n    effect: effect_entries[0].short_effect,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    priority,\r\n    target: target.name,\r\n    type: type.name,\r\n  };\r\n};\r\n","export const dataTypeWeaknesses = {\r\n  bug: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dark: {\r\n    bug: 2,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0.5,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dragon: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 2,\r\n    electric: 0.5,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  electric: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  fairy: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 0,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  fighting: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 2,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  fire: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 0.5,\r\n    water: 2,\r\n  },\r\n  flying: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  ghost: {\r\n    bug: 0.5,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 0,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  grass: {\r\n    bug: 2,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  ground: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 2,\r\n  },\r\n  ice: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  normal: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  poison: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 2,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  psychic: {\r\n    bug: 2,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0.5,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  rock: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 0.5,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 0.5,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 2,\r\n  },\r\n  steel: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 0.5,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 0.5,\r\n    poison: 0,\r\n    psychic: 0.5,\r\n    rock: 0.5,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  water: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 0.5,\r\n  },\r\n};\r\n","import { dataTypeWeaknesses as data } from \"../data/dataTypeWeaknesses\";\r\n\r\nexport const getWeaknesses = (types) => {\r\n  let weaknesses = {};\r\n\r\n  if (types.length === 1) {\r\n    weaknesses = data[types];\r\n  } else {\r\n    weaknesses = types.reduce((combination, type) => {\r\n      for (const [typeName, number] of Object.entries(data[type])) {\r\n        if (!combination[typeName]) {\r\n          combination[typeName] = 1;\r\n        }\r\n        combination[typeName] *= number;\r\n      }\r\n\r\n      return combination;\r\n    }, {});\r\n  }\r\n\r\n  //  Recibo\r\n  // weaknesses = {\r\n  //   bug: 1,\r\n  //   dragon: 1,\r\n  //   fire: 2,\r\n  //   water: 3,\r\n  // };\r\n\r\n  const invertido = Object.entries(weaknesses).reduce((acc, [key, value]) => {\r\n    if (acc[value]) {\r\n      acc[value].push(key);\r\n      return acc;\r\n    } else {\r\n      return { ...acc, [value]: [].concat(key) };\r\n    }\r\n  }, {});\r\n\r\n  return invertido;\r\n};\r\n","import { getMoveByName } from \"./getMoveByName\";\r\nimport { getWeaknesses } from \"./getWeaknesses\";\r\n\r\nexport const getPokeInfoByID = async (id) => {\r\n  const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n  const {\r\n    abilities: abilitiesData,\r\n    height,\r\n    moves,\r\n    name,\r\n    species,\r\n    stats: statsData,\r\n    types,\r\n    weight,\r\n  } = await resp.json();\r\n\r\n  const typesData = types.map(({ type }) => type.name);\r\n\r\n  const movesFilter = moves.filter(({ version_group_details }) =>\r\n    version_group_details.find(\r\n      ({ version_group }) => version_group.name === \"ultra-sun-ultra-moon\"\r\n    )\r\n  );\r\n\r\n  const movesData = await Promise.all(\r\n    movesFilter.map(({ move }) => getMoveByName(move.name))\r\n  );\r\n\r\n  const speciesData = await getSpeciesData(species.url);\r\n\r\n  return {\r\n    ...speciesData,\r\n    abilities: abilitiesData.map(({ ability }) => ability.name),\r\n    height: height / 10,\r\n    id,\r\n    image: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\r\n    moves: movesData,\r\n    name,\r\n    stats: statsData.reduce(\r\n      (obj, item) => ({ ...obj, [item.stat.name]: item.base_stat }),\r\n      {}\r\n    ),\r\n    totalStats: statsData.reduce((sum, value) => sum + value.base_stat, 0),\r\n    types: typesData,\r\n    weaknesses: getWeaknesses(typesData),\r\n    weight: weight / 10,\r\n  };\r\n};\r\n\r\nconst getSpeciesData = async (url) => {\r\n  const resp = await fetch(url);\r\n  const {\r\n    egg_groups: eggsData,\r\n    gender_rate: gender,\r\n    genera,\r\n    generation,\r\n    flavor_text_entries: description,\r\n    hatch_counter: hatch,\r\n  } = await resp.json();\r\n\r\n  return {\r\n    eggs: eggsData.map((egg) => egg.name),\r\n    gen: generation.name,\r\n    gender,\r\n    genera: genera.find((genus) => genus.language.name === \"en\").genus,\r\n    description: description.filter((desc) => desc.language.name === \"en\"),\r\n    hatch,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Text, Stack, Heading, Box, Icon } from \"@chakra-ui/react\";\r\nimport { FaVenus, FaMars } from \"react-icons/fa\";\r\n\r\nconst About = ({\r\n  abilities,\r\n  eggs,\r\n  gen,\r\n  genera,\r\n  gender,\r\n  hatch,\r\n  height,\r\n  weight,\r\n}) => {\r\n  const male = ((8 - gender) * 100) / 8;\r\n  const female = (gender * 100) / 8;\r\n\r\n  return (\r\n    <Stack spacing={3} width=\"100%\">\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Species\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"50%\" fontWeight=\"bold\">\r\n              {genera}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Height\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {` ${height} m`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              weight\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {`${weight} kg`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              abilities\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {abilities.map((ability) => `${ability} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              first appearance\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              Generation {gen.substring(gen.lastIndexOf(\"-\") + 1).toUpperCase()}\r\n            </Text>\r\n          </tr>\r\n\r\n          <tr>\r\n            <Heading as=\"td\" size=\"md\" mt={4} textAlign=\"start\">\r\n              Breeding\r\n            </Heading>\r\n          </tr>\r\n\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Gender\r\n            </Text>\r\n            <Stack\r\n              as=\"td\"\r\n              isInline\r\n              paddingY={1}\r\n              spacing={2}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gender < 0 ? (\r\n                <Text>Null</Text>\r\n              ) : (\r\n                <>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaMars} color=\"blue.500\" w={6} h={6} />\r\n                    <Text>{male}%</Text>\r\n                  </Stack>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaVenus} color=\"pink.500\" w={6} h={6} />\r\n                    <Text>{female}%</Text>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Stack>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Egg Groups\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {eggs.map((egg) => `${egg} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Hatch counter\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {`${(hatch + 1) * 255} steps`}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Text, Progress, Stack, Heading, Box, Badge } from \"@chakra-ui/react\";\r\n\r\nconst BaseStats = ({ stats, weaknesses, totalStats }) => {\r\n  const getWeaks = (weaknesses) => {\r\n    const weaks = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak > 1\r\n    );\r\n    return weaks;\r\n  };\r\n\r\n  const getResist = (weaknesses) => {\r\n    const resist = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak < 1\r\n    );\r\n    return resist;\r\n  };\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case \"4\":\r\n        return \"Very Weak x4\";\r\n      case \"2\":\r\n        return \"Weak x2\";\r\n      case \"0.5\":\r\n        return \"Not Effective x1/2\";\r\n      case \"0.25\":\r\n        return \"Strong Against x1/4\";\r\n      case \"0\":\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  const valueColor = (value) => {\r\n    if (value <= 50) {\r\n      return \"red\";\r\n    } else {\r\n      if (value <= 100) {\r\n        return \"yellow\";\r\n      } else {\r\n        return \"green\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={4}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          {Object.entries(stats).map(([title, value]) => (\r\n            <tr key={title}>\r\n              <Text\r\n                as=\"td\"\r\n                color=\"gray.500\"\r\n                paddingY={1}\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n              >\r\n                {title}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={1} width=\"15%\">\r\n                {value}\r\n              </Text>\r\n              <Box as=\"td\" paddingY={1} width=\"45%\">\r\n                <Progress\r\n                  colorScheme={valueColor(value)}\r\n                  size=\"xs\"\r\n                  value={value}\r\n                  max={200}\r\n                />\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Total\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"15%\">\r\n              {totalStats}\r\n            </Text>\r\n            <Box as=\"td\" paddingY={1} width=\"45%\">\r\n              <Progress\r\n                colorScheme={totalStats >= 400 ? \"green\" : \"red\"}\r\n                size=\"xs\"\r\n                value={totalStats}\r\n                max={750}\r\n              />\r\n            </Box>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Weaknesses\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getWeaks(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Resistance\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getResist(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default BaseStats;\r\n","import React from \"react\";\r\nimport { Text, Stack, Table, Tbody, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Description = ({ description }) => {\r\n  return (\r\n    <Stack>\r\n      <Table variant=\"striped\" colorScheme=\"gray\" width=\"100%\">\r\n        <Tbody>\r\n          {description.map((genDesc, index) => (\r\n            <Tr key={index}>\r\n              <Text\r\n                as=\"td\"\r\n                paddingY={4}\r\n                align=\"center\"\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n                fontWeight=\"bold\"\r\n              >\r\n                {genDesc.version.name}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={4}>\r\n                {genDesc.flavor_text.replace(/\\s+/g, \" \")}\r\n              </Text>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Badge, Box, Stack, Table, Tbody, Text, Tr } from \"@chakra-ui/react\";\r\nimport {\r\n  sortTableAscending,\r\n  sortTableDescending,\r\n} from \"../../../helpers/sortTableMoves\";\r\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\n\r\nconst Moves = ({ moves }) => {\r\n  const headers = [\"name\", \"power\", \"type\", \"accuracy\", \"class\"];\r\n\r\n  const [sortedMoves, setSortedMoves] = useState(moves);\r\n  const [sorted, setSorted] = useState(\"name\");\r\n  const [ascending, setAscending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setSortedMoves(\r\n      ascending\r\n        ? sortTableAscending(moves, sorted)\r\n        : sortTableDescending(moves, sorted)\r\n    );\r\n  }, [sorted, moves, ascending]);\r\n\r\n  const handleSort = (sorting) => {\r\n    if (sorting === sorted) {\r\n      setAscending(!ascending);\r\n    } else {\r\n      setAscending(true);\r\n      setSorted(sorting);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Table variant=\"striped\" align=\"center\" colorScheme=\"gray\" size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          {headers.map((header) => (\r\n            <th key={header} onClick={() => handleSort(header)}>\r\n              <Stack\r\n                isInline\r\n                justify=\"center\"\r\n                cursor=\"pointer\"\r\n                align=\"center\"\r\n                spacing={0}\r\n                width=\"100%\"\r\n              >\r\n                <Text>{header}</Text>\r\n\r\n                {header === sorted &&\r\n                  (ascending ? (\r\n                    <TriangleDownIcon\r\n                      aria-label=\"sorted descending\"\r\n                      h={2}\r\n                      w={2}\r\n                    />\r\n                  ) : (\r\n                    <TriangleUpIcon aria-label=\"sorted ascending\" h={2} w={2} />\r\n                  ))}\r\n              </Stack>\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <Tbody>\r\n        {sortedMoves.map((move) => (\r\n          <Tr key={move.name}>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.name}\r\n            </Text>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.power ? move.power : `-`}\r\n            </Text>\r\n            <Box as=\"td\" align=\"center\" justifyContent=\"center\">\r\n              <Badge bg={move.type} rounded={999} textAlign=\"center\">\r\n                {move.type}\r\n              </Badge>\r\n            </Box>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.accuracy ? move.accuracy : `-`}\r\n            </Text>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.dataClass}\r\n            </Text>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Moves;\r\n","export const sortTableAscending = (moves, sort) => {\r\n  const movesRef = [...moves];\r\n  switch (sort) {\r\n    case \"name\":\r\n      return movesRef.sort((a, b) =>\r\n        a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n      );\r\n\r\n    case \"power\":\r\n      return movesRef.sort((a, b) => a.power - b.power);\r\n\r\n    case \"type\":\r\n      return movesRef.sort((a, b) =>\r\n        a.type > b.type ? 1 : b.type > a.type ? -1 : 0\r\n      );\r\n    case \"class\":\r\n      return movesRef.sort((a, b) =>\r\n        a.dataClass > b.dataClass ? 1 : b.dataClass > a.dataClass ? -1 : 0\r\n      );\r\n\r\n    case \"accuracy\":\r\n      return movesRef.sort((a, b) => a.accuracy - b.accuracy);\r\n\r\n    default:\r\n      return movesRef;\r\n  }\r\n};\r\n\r\nexport const sortTableDescending = (moves, sort) => {\r\n  const movesRef = [...moves];\r\n  switch (sort) {\r\n    case \"name\":\r\n      return movesRef.sort((a, b) =>\r\n        b.name > a.name ? 1 : a.name > b.name ? -1 : 0\r\n      );\r\n\r\n    case \"power\":\r\n      return movesRef.sort((a, b) => b.power - a.power);\r\n\r\n    case \"type\":\r\n      return movesRef.sort((a, b) =>\r\n        b.type > a.type ? 1 : a.type > b.type ? -1 : 0\r\n      );\r\n    case \"class\":\r\n      return movesRef.sort((a, b) =>\r\n        b.dataClass > a.dataClass ? 1 : a.dataClass > b.dataClass ? -1 : 0\r\n      );\r\n\r\n    case \"accuracy\":\r\n      return movesRef.sort((a, b) => b.accuracy - a.accuracy);\r\n\r\n    default:\r\n      return movesRef;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  TabList,\r\n  Tabs,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useFetchPokeInfo } from \"../../hooks/useFetchPokeInfo\";\r\n\r\nimport About from \"./PokeInfoPanels/About\";\r\nimport BaseStats from \"./PokeInfoPanels/BaseStats\";\r\nimport Description from \"./PokeInfoPanels/Description\";\r\nimport Moves from \"./PokeInfoPanels/Moves\";\r\n\r\nconst PokeInfo = ({ pokemon: { types, id } }) => {\r\n  const { data, loading } = useFetchPokeInfo(id);\r\n\r\n  const tabList = [\"About\", \"Base Stats\", \"Description\", \"Moves\"];\r\n\r\n  return (\r\n    <Tabs variant=\"unstyled\" align=\"center\">\r\n      <TabList>\r\n        {tabList.map((tabName) => (\r\n          <Tab\r\n            key={tabName}\r\n            _selected={{ color: types[0], borderBottom: \"2px solid\" }}\r\n          >\r\n            {tabName}\r\n          </Tab>\r\n        ))}\r\n      </TabList>\r\n      {loading ? (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color={types[0]}\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <TabPanels align=\"center\">\r\n          <TabPanel>\r\n            <About\r\n              abilities={data.abilities}\r\n              eggs={data.eggs}\r\n              gen={data.gen}\r\n              genera={data.genera}\r\n              gender={data.gender}\r\n              hatch={data.hatch}\r\n              height={data.height}\r\n              weaknesses={data.weaknesses}\r\n              weight={data.weight}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <BaseStats\r\n              stats={data.stats}\r\n              totalStats={data.totalStats}\r\n              weaknesses={data.weaknesses}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Description description={data.description} />\r\n          </TabPanel>\r\n\r\n          <TabPanel paddingX={0}>\r\n            {data.moves.length > 0 ? (\r\n              <Moves moves={data.moves} />\r\n            ) : (\r\n              <Text color=\"crimson\" align=\"center\">\r\n                No data from PokeApi\r\n              </Text>\r\n            )}\r\n          </TabPanel>\r\n        </TabPanels>\r\n      )}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PokeInfo;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { getPokeInfoByID } from \"../api/getPokeInfoByID\";\r\n\r\nexport const useFetchPokeInfo = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPokeInfoByID(id).then((pokeData) => {\r\n      if (isMounted.current) {\r\n        setState({\r\n          data: pokeData,\r\n          loading: false,\r\n        });\r\n      }\r\n    });\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Text,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport PokeInfo from \"./PokeInfo\";\r\n\r\nconst PokemonDrawer = ({ onClose, pokemon }) => {\r\n  return (\r\n    <Drawer isOpen placement=\"right\" onClose={onClose} size=\"lg\">\r\n      <DrawerOverlay>\r\n        <DrawerContent overflowY=\"auto\">\r\n          <Stack\r\n            backgroundColor={`${pokemon.types[0]}`}\r\n            color=\"white\"\r\n            padding={6}\r\n            spacing={6}\r\n          >\r\n            <Stack direction=\"row\" fontSize=\"2xl\" justify=\"space-between\">\r\n              <ArrowBackIcon onClick={onClose} cursor=\"pointer\" />\r\n              <Icon as={FaHeart} w={6} h={6} />\r\n            </Stack>\r\n            <Stack direction=\"row\" color=\"white\">\r\n              <Stack width=\"100%\">\r\n                <Stack direction=\"row\" align=\"baseline\" justify=\"space-between\">\r\n                  <Heading textTransform=\"capitalize\">{pokemon.name}</Heading>\r\n                  <Text fontWeight={600}>\r\n                    #{pokemon.id.toString().padStart(3, \"0\")}\r\n                  </Text>\r\n                </Stack>\r\n                <Stack direction=\"row\">\r\n                  {pokemon.types.map((type) => (\r\n                    <Text\r\n                      key={type}\r\n                      paddingX={2}\r\n                      paddingY={1}\r\n                      backgroundColor=\"rgba(255,255,255,0.2)\"\r\n                      borderRadius={9999}\r\n                      width=\"fit-content\"\r\n                      textTransform=\"capitalize\"\r\n                    >\r\n                      {type}\r\n                    </Text>\r\n                  ))}\r\n                </Stack>\r\n\r\n                <Image\r\n                  alignSelf=\"center\"\r\n                  height={256}\r\n                  marginBottom={-3}\r\n                  maxWidth={256}\r\n                  src={pokemon.image}\r\n                  width=\"100%\"\r\n                  zIndex={20}\r\n                  className=\"animate__animated animate__shakeX\"\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            backgroundColor=\"white\"\r\n            borderRadius={24}\r\n            marginTop={-16}\r\n            paddingTop={12}\r\n            paddingX={{ base: 1, sm: 2, md: 6 }}\r\n            zIndex={10}\r\n          >\r\n            <PokeInfo pokemon={pokemon} />\r\n          </Stack>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PokemonDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, Stack, Text, Image } from \"@chakra-ui/react\";\r\nimport PokemonDrawer from \"./PokemonDrawer/PokemonDrawer\";\r\n\r\nconst PokemonThumbnail = ({ pokemon }) => {\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  return (\r\n    <Stack\r\n      color=\"white\"\r\n      backgroundColor={`${pokemon.types[0]}`}\r\n      borderRadius={12}\r\n      maxH=\"128px\"\r\n      maxW=\"318px\"\r\n      padding={2}\r\n      onClick={() => setDrawer(true)}\r\n      cursor=\"pointer\"\r\n    >\r\n      <Stack direction=\"row\" align=\"baseline\" justifyContent=\"space-between\">\r\n        <Heading textTransform=\"capitalize\" fontSize=\"lg\">\r\n          {pokemon.name}\r\n        </Heading>\r\n        <Text>#{pokemon.id.toString().padStart(3, \"0\")}</Text>\r\n      </Stack>\r\n      <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Stack>\r\n          {pokemon.types.map((type) => (\r\n            <Text\r\n              key={type}\r\n              paddingX={2}\r\n              paddingY={1}\r\n              backgroundColor=\"rgba(255,255,255,0.2)\"\r\n              borderRadius={9999}\r\n              width=\"fit-content\"\r\n            >\r\n              {type}\r\n            </Text>\r\n          ))}\r\n        </Stack>\r\n        <Image\r\n          alt={pokemon.name}\r\n          height={20}\r\n          maxHeight=\"80px\"\r\n          maxWidth=\"80px\"\r\n          src={pokemon.image}\r\n          width={20}\r\n        ></Image>\r\n      </Stack>\r\n      {drawer && (\r\n        <PokemonDrawer pokemon={pokemon} onClose={() => setDrawer(false)} />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonThumbnail;\r\n","export const URL_POKEMON = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\nexport const PAGE_SIZE = 10;\r\n","import { URL_POKEMON } from \"./settingsURL\";\r\n\r\n// params = name or id\r\nexport const getMiniData = async (params) => {\r\n  let url = `${URL_POKEMON}/${params}`;\r\n\r\n  return await fetch(url)\r\n    .then((res) => res.json())\r\n    .then(({ id, types, sprites, name }) => {\r\n      return {\r\n        name,\r\n        image: sprites.other[\"official-artwork\"].front_default,\r\n        id,\r\n        types: types.map(({ type }) => type.name),\r\n      };\r\n    });\r\n};\r\n","import { URL_POKEMON, PAGE_SIZE } from \"./settingsURL\";\r\nimport { getPokeInfoByID } from \"./getPokeInfoByID\";\r\nimport { getMiniData } from \"./getMiniData\";\r\n\r\nexport const api = {\r\n  list: (page) => {\r\n    return fetch(\r\n      `${URL_POKEMON}/?offset=${PAGE_SIZE * page}}&limit=${PAGE_SIZE}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) =>\r\n        Promise.all(\r\n          response.results.map((pokemon) => getMiniData(pokemon.name))\r\n        )\r\n      );\r\n  },\r\n  miniData: (key) => {\r\n    return getMiniData(key);\r\n  },\r\n  fullData: (id) => {\r\n    return getPokeInfoByID(id);\r\n  },\r\n};\r\n\r\n/* list: (page) => {\r\n  return Promise.all(\r\n    new Array(PAGE_SIZE + 1)\r\n      .fill(true)\r\n      .map((_, index) => index)\r\n      .slice(1)\r\n      .map((id) => getMiniData(PAGE_SIZE * page + id))\r\n  );\r\n}, */\r\n","import React from \"react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoBackButton = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ArrowBackIcon\r\n      alignSelf=\"start\"\r\n      aria-label=\"go home\"\r\n      as=\"button\"\r\n      cursor=\"pointer\"\r\n      height={{ base: 6, md: 8 }}\r\n      width={{ base: 6, md: 8 }}\r\n      onClick={() => {\r\n        history.goBack();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GoBackButton;\r\n","import React from \"react\";\r\nimport { Stack, Text, Image } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavButtons = ({ functionOnClick }) => {\r\n  const navButtonsArray = [\r\n    {\r\n      name: \"Pokédex\",\r\n      bgColor: \"grass\",\r\n      route: \"/pokedex\",\r\n    },\r\n    {\r\n      name: \"Search Moves\",\r\n      bgColor: \"fire\",\r\n      route: \"/moves\",\r\n    },\r\n    {\r\n      name: \"Search Pokémon\",\r\n      bgColor: \"water\",\r\n      route: \"/search\",\r\n    },\r\n    {\r\n      name: \"Who's that Pokémon?\",\r\n      bgColor: \"ground\",\r\n      route: \"/quiz\",\r\n    },\r\n    {\r\n      name: \"Types Combination\",\r\n      bgColor: \"poison\",\r\n      route: \"/combination\",\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      {navButtonsArray.map((navButton) => (\r\n        <Stack\r\n          align=\"center\"\r\n          as={Link}\r\n          bg={navButton.bgColor}\r\n          borderRadius={20}\r\n          boxShadow=\"0px 5px  3px #ccc\"\r\n          height={16}\r\n          isInline\r\n          justifyContent=\"space-between\"\r\n          key={navButton.name}\r\n          overflow=\"hidden\"\r\n          padding={3}\r\n          _hover={{ opacity: 0.8 }}\r\n          to={navButton.route}\r\n          onClick={functionOnClick !== null ? functionOnClick : undefined}\r\n        >\r\n          <Text color=\"white\">{navButton.name}</Text>\r\n          <Image\r\n            alt=\"pokeball\"\r\n            marginRight={-7}\r\n            opacity=\"0.2\"\r\n            src=\"../assets/ui/pokeball.svg\"\r\n            width={20}\r\n          />\r\n        </Stack>\r\n      ))}\r\n\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"fighting\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        cursor=\"pointer\"\r\n        onClick={() =>\r\n          window.open(\"https://juanmaportfolio.netlify.app/\", \"_blank\")\r\n        }\r\n      >\r\n        <Text color=\"white\">About Me</Text>\r\n        <Image\r\n          alt=\"pokeball\"\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Stack,\r\n  Icon,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport NavButtons from \"./NavButtons\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\n\r\nconst DrawerNav = ({ onClose }) => {\r\n  return (\r\n    <Drawer isOpen placement=\"right\" onClose={onClose} size=\"sm\">\r\n      <DrawerOverlay>\r\n        <DrawerContent bg=\"gray.200\">\r\n          <Stack\r\n            align=\"center\"\r\n            direction=\"row\"\r\n            bg=\"gray.700\"\r\n            padding={2}\r\n            textColor=\"white\"\r\n            justify=\"space-between\"\r\n          >\r\n            <ArrowBackIcon onClick={onClose} w={8} h={8} cursor=\"pointer\" />\r\n            <Heading textAlign=\"center\">Juanma PokedexApp</Heading>\r\n          </Stack>\r\n\r\n          <Stack\r\n            padding={4}\r\n            justify=\"center\"\r\n            h=\"100%\"\r\n            spacing={{ base: 4, md: 10 }}\r\n          >\r\n            <NavButtons functionOnClick={onClose} />\r\n          </Stack>\r\n          <Stack\r\n            align=\"center\"\r\n            as=\"footer\"\r\n            bg=\"gray.700\"\r\n            paddingY={2}\r\n            textColor=\"white\"\r\n          >\r\n            <Icon as={FaGithub} w={8} h={8} />\r\n          </Stack>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default DrawerNav;\r\n","import React, { useState } from \"react\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\nimport DrawerNav from \"./Drawer\";\r\n\r\nconst ToolBarPages = () => {\r\n  const [drawer, setDrawer] = useState(false);\r\n  const { pathname } = useLocation();\r\n  return (\r\n    pathname !== \"/home\" && (\r\n      <Stack width=\"100%\" isInline justify=\"space-between\">\r\n        <GoBackButton />\r\n        <HamburgerIcon\r\n          as=\"button\"\r\n          cursor=\"pointer\"\r\n          height={{ base: 6, md: 8 }}\r\n          width={{ base: 6, md: 8 }}\r\n          onClick={() => setDrawer(true)}\r\n        ></HamburgerIcon>\r\n        {drawer && <DrawerNav onClose={() => setDrawer(false)} />}\r\n      </Stack>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ToolBarPages;\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SimpleGrid, Heading, Stack, Button, Spinner } from \"@chakra-ui/react\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport { useFetchPokedex } from \"../../hooks/useFetchPokedex\";\r\nimport ToolBarPages from \"../UI/ToolBarPages\";\r\n\r\nconst Pokedex = () => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const pagesGenerations = [\r\n    { name: \"I\", page: 0 },\r\n    { name: \"II\", page: 15 },\r\n    { name: \"III\", page: 25 },\r\n    { name: \"IV\", page: 38 },\r\n    { name: \"V\", page: 49 },\r\n    { name: \"VI\", page: 65 },\r\n    { name: \"VII\", page: 72 },\r\n    { name: \"VIII\", page: 81 },\r\n    // { name: \"Variants\", page: 89 },\r\n    // { name: \"Megas\", page: 93 },\r\n    // { name: \"Gmax\", page: 108 },\r\n  ];\r\n\r\n  const { pokemons, loading } = useFetchPokedex(page);\r\n\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"gray.200\"\r\n      paddingX={{ base: 1, sm: 2, md: 4 }}\r\n      paddingY={{ base: 0, md: 3 }}\r\n      paddingBottom={2}\r\n      rounded={20}\r\n      spacing={2}\r\n    >\r\n      <ToolBarPages />\r\n      <Heading fontSize=\"4xl\" alignSelf=\"flex-start\">\r\n        Pokedex\r\n      </Heading>\r\n\r\n      {loading ? (\r\n        <Spinner\r\n          alignSelf=\"center\"\r\n          thickness=\"4px\"\r\n          speed=\"0.5s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <SimpleGrid gap={3} columns={2} w=\"100%\">\r\n          {pokemons?.map((pokemon, index) => (\r\n            <motion.div\r\n              animate=\"visible\"\r\n              key={pokemon.name}\r\n              custom={index}\r\n              initial=\"hidden\"\r\n              variants={{\r\n                hidden: { opacity: 0, y: 150 },\r\n                visible: (index) => ({\r\n                  opacity: 1,\r\n                  y: 0,\r\n                  transition: {\r\n                    delay: index * 0.05,\r\n                  },\r\n                }),\r\n              }}\r\n            >\r\n              <PokemonThumbnail pokemon={pokemon} />\r\n            </motion.div>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n      <Stack isInline justify=\"center\" alignItems=\"center\">\r\n        {page > 0 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{ bgGradient: \"linear-gradient(to-r, crimson, crimson)\" }}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Prev Page\r\n          </Button>\r\n        )}\r\n        {pagesGenerations.map(({ name, page }) => (\r\n          <Button\r\n            display={{ base: \"none\", md: \"inline-block\" }}\r\n            key={name}\r\n            size=\"md\"\r\n            onClick={() => setPage(page)}\r\n            bg=\"secondary\"\r\n            color=\"white\"\r\n            _hover={{ bgGradient: \"linear-gradient(to-r, crimson, crimson)\" }}\r\n          >\r\n            {name}\r\n          </Button>\r\n        ))}\r\n        {page < 111 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{ bgGradient: \"linear-gradient(to-r, crimson, crimson)\" }}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchPokedex = (page) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({\r\n    pokemons: [],\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ pokemons: [], loading: true, error: null });\r\n    api.list(page).then((newPokemons) => {\r\n      if (isMounted.current)\r\n        setState({\r\n          pokemons: newPokemons,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [page]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Stack,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { api } from \"../../api/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddPokemon = ({ setPokemons }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const nameSearch = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    await api\r\n      .miniData(nameSearch)\r\n      .then((pokemon) => {\r\n        setLoading(false);\r\n        setPokemons((pokemons) => [pokemon, ...pokemons]);\r\n        setInputValue(\"\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setError(`${nameSearch} not found`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Stack width=\"100%\">\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Pokémon by name or number\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={(event) => setInputValue(event.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          alignSelf=\"center\"\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nAddPokemon.propType = {\r\n  setPokemons: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\nimport { AddPokemon } from \"../SearchPokemon/AddPokemon\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport ToolBarPages from \"../UI/ToolBarPages\";\r\n\r\nconst SearchPokemons = ({ limit = 100 }) => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <ToolBarPages />\r\n\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        What Pokémon are you looking for?\r\n      </Heading>\r\n      <AddPokemon setPokemons={setPokemons} />\r\n      <Stack\r\n        background=\"url(../assets/ui/pokeballgray.svg) no-repeat center\"\r\n        backgroundPosition=\"bottom right\"\r\n        backgroundSize={150}\r\n        flexGrow={1}\r\n      >\r\n        {pokemons.length > 0 && (\r\n          <SimpleGrid\r\n            columns={2}\r\n            gap={2}\r\n            bg=\"gray.200\"\r\n            borderRadius={20}\r\n            padding={2}\r\n          >\r\n            {pokemons.slice(0, limit).map((pokemon, id) => (\r\n              <PokemonThumbnail key={id} pokemon={pokemon} />\r\n            ))}\r\n          </SimpleGrid>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchPokemons;\r\n","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport SearchPokemons from \"./SearchPokemons\";\r\nimport NavButtons from \"../UI/NavButtons\";\r\nimport { SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Stack alignItems=\"stretch\" bg=\"#fff\" rounded={30}>\r\n      <SearchPokemons limit={4} />\r\n      <SimpleGrid bg=\"#fff\" columns={2} gap={3} paddingX={4}>\r\n        <NavButtons functionOnClick={null} />\r\n      </SimpleGrid>\r\n      <Pokedex />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { getMoveByName } from \"../../api/getMoveByName\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddMoves = ({ setMoves }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    const moveName = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    if (moveName.length > 1) {\r\n      await getMoveByName(moveName)\r\n        .then((move) => {\r\n          setLoading(false);\r\n          setMoves((moves) => [move, ...moves]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${inputValue} not found.`);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n      setError(\"Move name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Move (example: Ember, Thunder, Rain-Dance, Swords-Dance etc)\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.85s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default AddMoves;\r\n\r\nAddMoves.propType = {\r\n  setMoves: PropTypes.func.isRequired,\r\n};\r\n","import { Heading, Image, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst MoveCard = ({ move }) => {\r\n  const {\r\n    accuracy,\r\n    dataClass,\r\n    description,\r\n    name,\r\n    pp,\r\n    power,\r\n    priority,\r\n    effect_chance,\r\n    effect,\r\n    type,\r\n  } = move;\r\n  return (\r\n    <Stack\r\n      bg={type}\r\n      borderRadius={12}\r\n      padding={3}\r\n      spacing={6}\r\n      marginBottom={{ base: 4, md: 0 }}\r\n      maxHeight=\"350px\"\r\n    >\r\n      <Stack isInline justify=\"space-between\" alignItems=\"center\">\r\n        <Heading color=\"white\" textTransform=\"capitalize\" fontSize=\"xl\">\r\n          {name}\r\n        </Heading>\r\n        <Stack isInline>\r\n          <Image\r\n            width={7}\r\n            alt={dataClass}\r\n            filter=\"brightness(0) invert(1)\"\r\n            src={`./assets/moveClass/${dataClass}.png`}\r\n          ></Image>\r\n          <Image\r\n            width={7}\r\n            alt={type}\r\n            src={`./assets/pokemonTypes/${type}.png`}\r\n          ></Image>\r\n        </Stack>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Description:\r\n        </Heading>\r\n        <Text>{description}</Text>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Effect:\r\n        </Heading>\r\n        <Text>{effect.replace(\"$effect_chance\", effect_chance)}</Text>\r\n      </Stack>\r\n      <Stack\r\n        isInline\r\n        alignItems=\"baseline\"\r\n        justifyContent=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Power\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{power ? power : \"-\"}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            accuracy\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">\r\n            {accuracy ? `${accuracy}%` : \"-\"}\r\n          </Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"upperCase\" fontWeight=\"bold\">\r\n            pp\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{pp}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            priority\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{priority}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Category\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{dataClass}</Text>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MoveCard;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nimport AddMoves from \"../SearchMoves/AddMoves\";\r\nimport MoveCard from \"../SearchMoves/MoveCard\";\r\nimport ToolBarPages from \"../UI/ToolBarPages\";\r\n\r\nconst SearchMoves = () => {\r\n  const [moves, setMoves] = useState([]);\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <ToolBarPages />\r\n      <Heading textAlign=\"center\">What move are you looking for?</Heading>\r\n      <AddMoves setMoves={setMoves} />\r\n      <SimpleGrid\r\n        background=\"url(../assets/ui/pokeballgray.svg) no-repeat\"\r\n        backgroundPosition=\"bottom right\"\r\n        backgroundSize={150}\r\n        columns={{ base: 1, md: 2 }}\r\n        padding={2}\r\n        gap={3}\r\n        height=\"100%\"\r\n      >\r\n        {moves.map((move, index) => (\r\n          <MoveCard move={move} key={index} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchMoves;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Stack, Flex, Text, Box, Heading } from \"@chakra-ui/react\";\r\nimport { getWeaknesses } from \"../../api/getWeaknesses\";\r\n\r\nconst ResultsCombination = ({ firstType, secondType }) => {\r\n  const values = [4, 2, 1, 0.5, 0.25, 0];\r\n  const [combination, setCombination] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (secondType === null || firstType === secondType) {\r\n      setCombination(getWeaknesses([firstType]));\r\n    } else {\r\n      setCombination(getWeaknesses([firstType, secondType]));\r\n    }\r\n  }, [firstType, secondType]);\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case 4:\r\n        return \"Very Weak x4\";\r\n      case 2:\r\n        return \"Weak x2\";\r\n      case 1:\r\n        return \"Normal x1\";\r\n      case 0.5:\r\n        return \"Not Effective x1/2\";\r\n      case 0.25:\r\n        return \"Strong Against x1/4\";\r\n      case 0:\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={4} marginBottom={{ base: 2, md: 0 }}>\r\n      <Heading textAlign=\"center\">Weaks Combination:</Heading>\r\n\r\n      <Stack\r\n        isInline\r\n        justify=\"center\"\r\n        alignItems=\"baseline\"\r\n        textTransform=\"capitalize\"\r\n        fontSize=\"lg\"\r\n        fontWeight=\"bold\"\r\n      >\r\n        <Flex\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          bg={firstType}\r\n          border=\"3px solid black\"\r\n          width={20}\r\n          rounded={9999}\r\n          height={20}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textShadow=\"0 1px 0 black, 0 0 1px rgb(0 0 0 / 60%), 0 0 2px rgb(0 0 0 / 70%), 0 0 3px rgb(0 0 0 / 80%), 0 0 4px rgb(0 0 0 / 90%)\"\r\n          >\r\n            {firstType}\r\n          </Text>\r\n        </Flex>\r\n        {secondType && (\r\n          <>\r\n            <Flex justifyContent=\"center\">\r\n              <Text fontSize=\"2em\">+</Text>\r\n            </Flex>\r\n            <Flex\r\n              align=\"center\"\r\n              bg={secondType}\r\n              border=\"3px solid black\"\r\n              color=\"white\"\r\n              height={20}\r\n              justifyContent=\"center\"\r\n              rounded={9999}\r\n              width={20}\r\n            >\r\n              <Text textShadow=\"0 1px 0 black, 0 0 1px rgb(0 0 0 / 60%), 0 0 2px rgb(0 0 0 / 70%), 0 0 3px rgb(0 0 0 / 80%), 0 0 4px rgb(0 0 0 / 90%)\">\r\n                {secondType}\r\n              </Text>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Stack>\r\n\r\n      <Flex direction=\"column\">\r\n        {values.map(\r\n          (value) =>\r\n            combination[value] && (\r\n              <Stack\r\n                alignItems=\"center\"\r\n                justifyItems=\"center\"\r\n                key={value}\r\n                spacing={0}\r\n              >\r\n                <Text textAlign=\"center\" fontSize=\"md\" fontWeight=\"bold\">\r\n                  {renderWeaks(value)}\r\n                </Text>\r\n                <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n                  {combination[value].map((type) => (\r\n                    <Box\r\n                      bg={type}\r\n                      key={type}\r\n                      border=\"1px\"\r\n                      margin={1}\r\n                      rounded={99}\r\n                      textAlign=\"center\"\r\n                      w=\"100px\"\r\n                    >\r\n                      <Text\r\n                        color=\"white\"\r\n                        textShadow=\"0 1px 0 black, 0 0 1px rgb(0 0 0 / 60%), 0 0 2px rgb(0 0 0 / 70%), 0 0 3px rgb(0 0 0 / 80%), 0 0 4px rgb(0 0 0 / 90%)\"\r\n                        fontSize=\"sm\"\r\n                        textTransform=\"capitalize\"\r\n                        fontWeight=\"bold\"\r\n                      >\r\n                        {type}\r\n                      </Text>\r\n                    </Box>\r\n                  ))}\r\n                </Flex>\r\n              </Stack>\r\n            )\r\n        )}\r\n      </Flex>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ResultsCombination;\r\n","import React from \"react\";\r\nimport { Tag, TagLabel, Box } from \"@chakra-ui/react\";\r\n\r\nconst TypeButton = ({ type, selectedType, changeSelectedType }) => {\r\n  return (\r\n    <Tag\r\n      as=\"button\"\r\n      bg=\"white\"\r\n      border={type === selectedType ? \"2px solid\" : \"1px solid #ccc\"}\r\n      cursor=\"pointer\"\r\n      margin={1}\r\n      rounded={20}\r\n      value={type}\r\n      w=\"95px\"\r\n      onClick={() => changeSelectedType(type)}\r\n    >\r\n      <Box\r\n        rounded={99999}\r\n        bg={type !== null ? type : \"grey\"}\r\n        mr={1}\r\n        ml={-1}\r\n        w={4}\r\n        h={4}\r\n      ></Box>\r\n      <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n        {type === null ? \"None\" : type}\r\n      </TagLabel>\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default TypeButton;\r\n","import React, { useState } from \"react\";\r\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\r\nimport Results from \"./Results\";\r\nimport TypeButton from \"./TypeButton\";\r\n\r\nconst CombinationContainer = () => {\r\n  const types = [\r\n    \"bug\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"electric\",\r\n    \"fairy\",\r\n    \"fighting\",\r\n    \"fire\",\r\n    \"flying\",\r\n    \"ghost\",\r\n    \"grass\",\r\n    \"ground\",\r\n    \"ice\",\r\n    \"normal\",\r\n    \"poison\",\r\n    \"psychic\",\r\n    \"rock\",\r\n    \"steel\",\r\n    \"water\",\r\n  ];\r\n\r\n  const [firstType, setFirstType] = useState(\"bug\");\r\n  const [secondType, setSecondType] = useState(null);\r\n\r\n  const handleChangeFirstType = (type) => {\r\n    if (type !== secondType) {\r\n      setFirstType(type);\r\n    } else {\r\n      setFirstType(type);\r\n      setSecondType(null);\r\n    }\r\n  };\r\n\r\n  const handleChangeSecondType = (type) => {\r\n    if (type !== firstType) {\r\n      setSecondType(type);\r\n    } else {\r\n      setFirstType(type);\r\n      setSecondType(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      bg=\"gray.100\"\r\n      borderRadius={20}\r\n      align=\"center\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      spacing={2}\r\n      paddingY={2}\r\n    >\r\n      <Stack direction={{ base: \"column\", md: \"row\" }} spacing={2}>\r\n        <Stack>\r\n          <Heading fontSize=\"lg\" textAlign=\"center\">\r\n            Primary Type\r\n          </Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <TypeButton\r\n                changeSelectedType={handleChangeFirstType}\r\n                key={type}\r\n                selectedType={firstType}\r\n                type={type}\r\n              />\r\n            ))}\r\n          </Flex>\r\n        </Stack>\r\n\r\n        <Stack>\r\n          <Heading fontSize=\"lg\" textAlign=\"center\">\r\n            Secondary Type\r\n          </Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <TypeButton\r\n                changeSelectedType={handleChangeSecondType}\r\n                key={type}\r\n                selectedType={secondType}\r\n                type={type}\r\n              />\r\n            ))}\r\n            <TypeButton\r\n              changeSelectedType={handleChangeSecondType}\r\n              type={null}\r\n              key={\"null\"}\r\n              selectedType={secondType}\r\n            />\r\n          </Flex>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <Results firstType={firstType} secondType={secondType} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default CombinationContainer;\r\n","import React from \"react\";\r\nimport { Heading, Stack } from \"@chakra-ui/react\";\r\nimport CombinationContainer from \"../TypesCombination/CombinationContainer\";\r\nimport ToolBarPages from \"../UI/ToolBarPages\";\r\n\r\nconst TypeCombinationPage = () => {\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <ToolBarPages />\r\n\r\n      <Stack spacing={0}>\r\n        <Heading>Pokémon Type Calculator</Heading>\r\n        <Heading size=\"sm\" as=\"h6\" fontWeight=\"normal\" color=\"gray.500\">\r\n          Choose Types and Calculate Weaknesses\r\n        </Heading>\r\n      </Stack>\r\n      <CombinationContainer />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default TypeCombinationPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Stack,\r\n  Image,\r\n  Input,\r\n  Text,\r\n  Heading,\r\n  Box,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Quiz = ({ pokemon, nextPokemon }) => {\r\n  const [status, setStatus] = useState(\"GUESSING\");\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const name = inputName.replace(/ /g, \"-\").toLowerCase();\r\n    setCounter((c) => c + 1);\r\n    setStatus(name === pokemon.name ? \"SUCCESS\" : \"FAIL\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(\"GUESSING\");\r\n    setInputName(\"\");\r\n    setCounter(0);\r\n  }, [pokemon]);\r\n\r\n  return (\r\n    <Stack justify=\"center\">\r\n      <Image\r\n        alignSelf=\"center\"\r\n        alt=\"pokemon\"\r\n        className={status === \"SUCCESS\" && \"animate__animated animate__shakeX\"}\r\n        height={350}\r\n        draggable=\"false\"\r\n        style={{\r\n          imageRendering: `${status === \"SUCCESS\" ? \"auto\" : \"pixelated\"}`,\r\n          filter: `brightness(${status === \"SUCCESS\" ? 1 : 0})`,\r\n          transition: `${status === \"SUCCESS\" ? \"filter 0.7s\" : \"fliter 0s\"}`,\r\n        }}\r\n        src={pokemon.image}\r\n        width={350}\r\n      />\r\n      {status === \"SUCCESS\" ? (\r\n        <Stack>\r\n          <Heading textTransform=\"capitalize\" size=\"4xl\" textAlign=\"center\">\r\n            {pokemon.name}\r\n          </Heading>\r\n          <Text textAlign=\"center\">{counter} Attempts</Text>\r\n          <Box\r\n            as=\"button\"\r\n            p={2}\r\n            color=\"white\"\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"md\"\r\n            bgGradient=\"linear(to-r, teal.500,green.500)\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={nextPokemon}\r\n          >\r\n            Next Pokemon\r\n          </Box>\r\n        </Stack>\r\n      ) : (\r\n        <Stack>\r\n          <form onSubmit={handleSubmit}>\r\n            <Input\r\n              variant=\"filled\"\r\n              textAlign=\"center\"\r\n              placeholder=\"Write the answer\"\r\n              type=\"text\"\r\n              isInvalid={status === \"FAIL\"}\r\n              errorBorderColor=\"crimson\"\r\n              value={inputName}\r\n              onChange={(event) => setInputName(event.target.value)}\r\n            />\r\n            {status === \"FAIL\" && (\r\n              <Text color=\"primary\" textAlign=\"center\">\r\n                Wrong Answer\r\n              </Text>\r\n            )}\r\n          </form>\r\n          <Stack isInline>\r\n            <Button\r\n              p={2}\r\n              color=\"white\"\r\n              fontWeight=\"bold\"\r\n              borderRadius=\"md\"\r\n              bgGradient=\"linear(to-r, red.400,red.600)\"\r\n              _hover={{\r\n                bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n              }}\r\n              onClick={nextPokemon}\r\n              width=\"50%\"\r\n            >\r\n              Next\r\n            </Button>\r\n            <Button\r\n              p={2}\r\n              color=\"white\"\r\n              fontWeight=\"bold\"\r\n              borderRadius=\"md\"\r\n              bgGradient=\"linear(to-r, teal.500,green.500)\"\r\n              _hover={{\r\n                bgGradient: \"linear(to-r,  teal.500,teal.700)\",\r\n              }}\r\n              onClick={handleSubmit}\r\n              width=\"50%\"\r\n            >\r\n              Try\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport { Button, Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nconst SelectLevel = ({ setGeneration, generation }) => {\r\n  const pagesGenerations = [\r\n    { name: \"I\", min: 1, max: 151 },\r\n    { name: \"II\", min: 152, max: 251 },\r\n    { name: \"III\", min: 252, max: 386 },\r\n    { name: \"IV\", min: 387, max: 494 },\r\n    { name: \"V\", min: 495, max: 649 },\r\n    { name: \"VI\", min: 650, max: 721 },\r\n    { name: \"VII\", min: 722, max: 809 },\r\n    { name: \"VIII\", min: 810, max: 897 },\r\n    { name: \"All Gens\", min: 1, max: 897 },\r\n  ];\r\n\r\n  return (\r\n    <Stack bg=\"gray.200\" padding={3} rounded={22}>\r\n      <Heading\r\n        textAlign=\"center\"\r\n        fontWeight=\"extrabold\"\r\n        bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n      >\r\n        Select Generation\r\n      </Heading>\r\n      <SimpleGrid\r\n        columns={3}\r\n        gap={3}\r\n        borderRadius={20}\r\n        bg=\"gray.200\"\r\n        padding={2}\r\n      >\r\n        {pagesGenerations.map((gen) => (\r\n          <Button\r\n            key={gen.name}\r\n            size=\"md\"\r\n            bgGradient={\r\n              gen.name !== generation.name\r\n                ? \"linear-gradient(to-r, #3a7bd5, #3a6073)\"\r\n                : \"linear-gradient(to-r, crimson, crimson)\"\r\n            }\r\n            color=\"white\"\r\n            _hover={{ bgGradient: \"linear-gradient(to-r, crimson, crimson)\" }}\r\n            onClick={() => setGeneration(gen)}\r\n          >\r\n            {gen.name}\r\n          </Button>\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SelectLevel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Heading, Stack, Spinner } from \"@chakra-ui/react\";\r\nimport { useFetchGetPokemonID } from \"../../hooks/useFetchGetPokemonID\";\r\nimport Quiz from \"../PokemonQuiz/Quiz\";\r\nimport SelectLevel from \"../PokemonQuiz/SelectLevel\";\r\nimport ToolBarPages from \"../UI/ToolBarPages\";\r\n\r\nconst PokemonQuiz = () => {\r\n  const getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const [random, setRandom] = useState(null);\r\n  const [generation, setGeneration] = useState({ name: \"I\", min: 1, max: 151 });\r\n  const { pokemon, loading } = useFetchGetPokemonID(random);\r\n\r\n  useEffect(() => {\r\n    const idRandom = getRandomNumber(generation.min, generation.max);\r\n    setRandom(idRandom);\r\n  }, [generation]);\r\n\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <ToolBarPages />\r\n\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        Who's that Pokémon?\r\n      </Heading>\r\n      {loading ? (\r\n        <Stack alignItems=\"center\">\r\n          <Spinner\r\n            thickness=\"4px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"blue.500\"\r\n            size=\"xl\"\r\n            textAlign=\"center\"\r\n          />\r\n        </Stack>\r\n      ) : (\r\n        <Quiz\r\n          pokemon={pokemon}\r\n          nextPokemon={() =>\r\n            setRandom(getRandomNumber(generation.min, generation.max))\r\n          }\r\n        />\r\n      )}\r\n      <SelectLevel setGeneration={setGeneration} generation={generation} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonQuiz;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchGetPokemonID = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ pokemon: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id !== null) {\r\n      setState({ pokemon: null, loading: true });\r\n      api.miniData(id).then((pokeData) => {\r\n        if (isMounted.current)\r\n          setState({\r\n            pokemon: pokeData,\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Landing from \"../components/Pages/Landing\";\r\nimport Pokedex from \"../components/Pages/Pokedex\";\r\nimport SearchPokemons from \"../components/Pages/SearchPokemons\";\r\nimport SearchMoves from \"../components/Pages/SearchMoves\";\r\nimport TypeCombination from \"../components/Pages/TypeCombination\";\r\n\r\nimport PokemonQuiz from \"../components/Pages/PokemonQuiz\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/search\">\r\n        <SearchPokemons />\r\n      </Route>\r\n      <Route exact path=\"/quiz\">\r\n        <PokemonQuiz />\r\n      </Route>\r\n      <Route exact path=\"/moves\">\r\n        <SearchMoves />\r\n      </Route>\r\n      <Route exact path=\"/combination\">\r\n        <TypeCombination />\r\n      </Route>\r\n      <Route exact path=\"/pokedex\">\r\n        <Pokedex />\r\n      </Route>\r\n      <Route path=\"/home\">\r\n        <Landing />\r\n      </Route>\r\n      <Redirect to=\"/home\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Stack } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Stack\r\n      as=\"nav\"\r\n      isInline\r\n      alignItems=\"center\"\r\n      height={12}\r\n      justifyContent=\"center\"\r\n      bg=\"gray.900\"\r\n      zIndex={200}\r\n    >\r\n      <Button colorScheme=\"gray.50\" variant=\"solid\" as={ReachLink} to=\"/home\">\r\n        PokedexApp\r\n      </Button>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst Copyright = ({ textcolor, position }) => {\r\n  return (\r\n    <Text\r\n      cursor=\"pointer\"\r\n      onClick={() => window.open(`https://juanmaportfolio.netlify.app/`)}\r\n      textAlign=\"center\"\r\n      textColor=\"white\"\r\n    >\r\n      PokdexApp Copyright © Juan Manuel Ibarzabal Salles{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React from \"react\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Copyright from \"./Copyright\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Stack\r\n      textAlign=\"center\"\r\n      justify=\"center\"\r\n      bg=\"black\"\r\n      paddingY={4}\r\n      as=\"footer\"\r\n    >\r\n      <Copyright />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Grid } from \"@chakra-ui/react\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport Navbar from \"./components/UI/Navbar\";\r\nimport Footer from \"./components/UI/Footer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Grid\r\n      height=\"100vh\"\r\n      templateColumns=\"1fr\"\r\n      templateRows=\"auto 1fr auto\"\r\n      width=\"100vw\"\r\n    >\r\n      <Navbar />\r\n      <Grid\r\n        backgroundImage={{\r\n          base: \"none\",\r\n          md: \"url(/assets/ui/background.png)\",\r\n        }}\r\n        justifyItems=\"center\"\r\n        overflowY=\"auto\"\r\n        overflowX=\"hidden\"\r\n      >\r\n        <Grid maxW=\"680px\" w=\"100%\" marginY={{ base: 0, sm: 2, md: 4 }}>\r\n          <AppRouter />\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  colors: {\r\n    grass: \"#47CFAF\",\r\n    fire: \"#FB6D6C\",\r\n    water: \"#74BDFD\",\r\n    dragon: \"#8774FF\",\r\n    normal: \"#BDBDAE\",\r\n    bug: \"#C1D11F\",\r\n    poison: \"#AA5DA1\",\r\n    electric: \"#FEE63C\",\r\n    ground: \"#d3b54a\",\r\n    psychic: \"#F562B1\",\r\n    fighting: \"#B1746D\",\r\n    fairy: \"#FAADFF\",\r\n    rock: \"#CEBD72\",\r\n    ghost: \"#7A76D8\",\r\n    ice: \"#96F1FF\",\r\n    steel: \"#C4C2DB\",\r\n    flying: \"#7AA1FF\",\r\n    dark: \"#8A6653\",\r\n\r\n    primary: \"#ff0050\",\r\n    secondary: \"#2667ff\",\r\n  },\r\n  shadows: {\r\n    outline: \"0\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport \"./theme.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider resetCSS theme={theme}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}