{"version":3,"sources":["components/UI/Navbar.js","components/UI/Copyright.js","components/UI/Footer.js","api/getMoveByName.js","data/dataTypeWeaknesses.js","api/getWeaknesses.js","api/getPokeInfoByID.js","components/PokemonDrawer/PokeInfoPanels/About.js","components/PokemonDrawer/PokeInfoPanels/BaseStats.js","components/PokemonDrawer/PokeInfoPanels/Description.js","components/PokemonDrawer/PokeInfoPanels/Moves.js","components/PokemonDrawer/PokeInfo.js","hooks/useFetchPokeInfo.js","components/PokemonDrawer/PokemonDrawer.js","components/PokemonThumbnail.js","api/settingsURL.js","api/getMiniDataByName.js","api/api.js","components/Pages/Pokedex.js","hooks/useFetchPokedex.js","components/SearchPokemon/AddPokemon.js","components/Pages/SearchPokemons.js","components/UI/NavButtons.js","components/Pages/Landing.js","components/Moves/AddMoves.js","components/Moves/MoveCard.js","components/Pages/SearchMoves.js","components/Combination/Header.js","components/Combination/ResultsCombination.js","components/Combination/CombinationContainer.js","components/Pages/TypeCombination.js","routers/AppRouter.js","App.js","theme.js","index.js"],"names":["Navbar","as","isInline","alignItems","height","justifyContent","base","bg","zIndex","colorScheme","variant","ReachLink","to","Copyright","textcolor","position","cursor","onClick","window","open","textAlign","textColor","Date","getFullYear","Footer","justify","paddingY","getMoveByName","moveName","a","moveURL","fetch","resp","json","accuracy","damage_class","name","priority","description","flavor_text_entries","effect_entries","effect_chance","pp","power","target","type","dataClass","filter","desc","language","version_group","flavor_text","effect","short_effect","dataTypeWeaknesses","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","getWeaknesses","types","weaknesses","length","data","reduce","combination","Object","entries","typeName","number","acc","key","value","push","concat","getPokeInfoByID","id","abilitiesData","abilities","moves","species","statsData","stats","weight","typesData","map","movesFilter","version_group_details","find","Promise","all","move","movesData","getSpeciesData","url","speciesData","ability","image","obj","item","stat","base_stat","totalStats","sum","eggsData","egg_groups","gender","gender_rate","genera","generation","hatch","hatch_counter","eggs","egg","gen","genus","version","About","male","female","spacing","width","color","textTransform","fontWeight","size","FaMars","w","h","FaVenus","BaseStats","renderWeaks","valueColor","title","max","weak","getWeaks","background","borderRadius","paddingX","marginX","getResist","Description","genDesc","index","align","Moves","rounded","PokeInfo","pokemon","isMounted","useRef","useState","loading","state","setState","useEffect","current","then","pokeData","useFetchPokeInfo","_selected","borderBottom","thickness","speed","emptyColor","PokemonDrawer","onClose","isOpen","placement","overflowY","backgroundColor","padding","direction","fontSize","ArrowBack","FaHeart","toString","padStart","alignSelf","marginBottom","maxWidth","src","className","marginTop","paddingTop","PokemonThumbnail","drawer","setDrawer","URL_POKEMON","getMiniDataPokemonByName","pokemonName","res","sprites","other","front_default","api","page","response","results","Pokedex","setPage","pokemons","error","newPokemons","useFetchPokedex","margin","md","gap","columns","div","animate","custom","initial","variants","hidden","opacity","y","visible","transition","delay","_hover","border","display","AddPokemon","setPokemons","inputValue","setInputValue","setError","setLoading","handleSubmit","e","preventDefault","nameSearch","trim","toLowerCase","catch","onSubmit","children","Search","placeholder","isInvalid","errorBorderColor","onChange","propType","PropTypes","func","isRequired","SearchPokemons","mt","NavButtons","boxShadow","overflow","marginRight","Landing","AddMoves","setMoves","replace","MoveCard","alt","SearchMoves","sm","Header","ResultsCombination","firstType","secondType","setCombination","justifyItems","wrap","maxW","CombinationContainer","setFirstType","setSecondType","ml","mr","TypeCombinationPage","AppRouter","minH","exact","path","TypeCombination","App","extendTheme","colors","primary","secondary","shadows","outline","ReactDOM","render","StrictMode","resetCSS","theme","document","getElementById"],"mappings":"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","file":"static/js/main.17ebe1d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Stack } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Stack\r\n      as=\"nav\"\r\n      isInline\r\n      alignItems=\"center\"\r\n      height={12}\r\n      justifyContent={{ base: \"center\" }}\r\n      bg=\"gray.900\"\r\n      zIndex={200}\r\n    >\r\n      <Stack isInline>\r\n        <Button colorScheme=\"gray.50\" variant=\"solid\" as={ReachLink} to=\"/home\">\r\n          PokedexApp\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst Copyright = ({ textcolor, position }) => {\r\n  return (\r\n    <Text\r\n      cursor=\"pointer\"\r\n      onClick={() => window.open(`https://juanmaportfolio.netlify.app/`)}\r\n      textAlign=\"center\"\r\n      textColor=\"white\"\r\n    >\r\n      PokdexApp Copyright © Juan Manuel Ibarzabal Salles{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React from \"react\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Copyright from \"./Copyright\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Stack textAlign=\"center\" justify=\"center\" bg=\"black\" paddingY={4}>\r\n      <Copyright />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const getMoveByName = async (moveName) => {\r\n  const moveURL = `https://pokeapi.co/api/v2/move/${moveName}`;\r\n\r\n  const resp = await fetch(moveURL);\r\n\r\n  const {\r\n    accuracy,\r\n    damage_class,\r\n    name,\r\n    priority,\r\n    flavor_text_entries: description,\r\n    effect_entries,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    target,\r\n    type,\r\n  } = await resp.json();\r\n\r\n  const dataClass = damage_class.name;\r\n\r\n  return {\r\n    accuracy,\r\n    dataClass,\r\n    name,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"x-y\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"sword\")\r\n    )[0]?.flavor_text,\r\n    effect: effect_entries[0].short_effect,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    priority,\r\n    target: target.name,\r\n    type: type.name,\r\n  };\r\n};\r\n","export const dataTypeWeaknesses = {\r\n  bug: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dark: {\r\n    bug: 2,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0.5,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dragon: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 2,\r\n    electric: 0.5,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  electric: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  fairy: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 0,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  fighting: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 2,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  fire: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 0.5,\r\n    water: 2,\r\n  },\r\n  flying: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  ghost: {\r\n    bug: 0.5,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 0,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  grass: {\r\n    bug: 2,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  ground: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 2,\r\n  },\r\n  ice: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  normal: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  poison: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 2,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  psychic: {\r\n    bug: 2,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0.5,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  rock: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 0.5,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 0.5,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 2,\r\n  },\r\n  steel: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 0.5,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 0.5,\r\n    poison: 0,\r\n    psychic: 0.5,\r\n    rock: 0.5,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  water: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 0.5,\r\n  },\r\n};\r\n","import { dataTypeWeaknesses as data } from \"../data/dataTypeWeaknesses\";\r\n\r\nexport const getWeaknesses = (types) => {\r\n  let weaknesses = {};\r\n\r\n  if (types.length === 1) {\r\n    weaknesses = data[types];\r\n  } else {\r\n    weaknesses = types.reduce((combination, type) => {\r\n      for (const [typeName, number] of Object.entries(data[type])) {\r\n        if (!combination[typeName]) {\r\n          combination[typeName] = 1;\r\n        }\r\n        combination[typeName] *= number;\r\n      }\r\n\r\n      return combination;\r\n    }, {});\r\n  }\r\n\r\n  //  Recibo\r\n  // weaknesses = {\r\n  //   bug: 1,\r\n  //   dragon: 1,\r\n  //   fire: 2,\r\n  //   water: 3,\r\n  // };\r\n\r\n  const invertido = Object.entries(weaknesses).reduce((acc, [key, value]) => {\r\n    if (acc[value]) {\r\n      acc[value].push(key);\r\n      return acc;\r\n    } else {\r\n      return { ...acc, [value]: [].concat(key) };\r\n    }\r\n  }, {});\r\n\r\n  return invertido;\r\n};\r\n","import { getMoveByName } from \"./getMoveByName\";\r\nimport { getWeaknesses } from \"./getWeaknesses\";\r\n\r\nexport const getPokeInfoByID = async (id) => {\r\n  const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n  const {\r\n    abilities: abilitiesData,\r\n    height,\r\n    moves,\r\n    name,\r\n    species,\r\n    stats: statsData,\r\n    types,\r\n    weight,\r\n  } = await resp.json();\r\n\r\n  const typesData = types.map(({ type }) => type.name);\r\n\r\n  const movesFilter = moves.filter(({ version_group_details }) =>\r\n    version_group_details.find(\r\n      ({ version_group }) => version_group.name === \"ultra-sun-ultra-moon\"\r\n    )\r\n  );\r\n\r\n  const movesData = await Promise.all(\r\n    movesFilter.map(({ move }) => getMoveByName(move.name))\r\n  );\r\n\r\n  const speciesData = await getSpeciesData(species.url);\r\n\r\n  return {\r\n    ...speciesData,\r\n    abilities: abilitiesData.map(({ ability }) => ability.name),\r\n    height: height / 10,\r\n    id,\r\n    image: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\r\n    moves: movesData,\r\n    name,\r\n    stats: statsData.reduce(\r\n      (obj, item) => ({ ...obj, [item.stat.name]: item.base_stat }),\r\n      {}\r\n    ),\r\n    totalStats: statsData.reduce((sum, value) => sum + value.base_stat, 0),\r\n    types: typesData,\r\n    weaknesses: getWeaknesses(typesData),\r\n    weight: weight / 10,\r\n  };\r\n};\r\n\r\nconst getSpeciesData = async (url) => {\r\n  const resp = await fetch(url);\r\n  const {\r\n    egg_groups: eggsData,\r\n    gender_rate: gender,\r\n    genera,\r\n    generation,\r\n    flavor_text_entries: description,\r\n    hatch_counter: hatch,\r\n  } = await resp.json();\r\n\r\n  return {\r\n    eggs: eggsData.map((egg) => egg.name),\r\n    gen: generation.name,\r\n    gender,\r\n    genera: genera.find((genus) => genus.language.name === \"en\").genus,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" && desc.version.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"sword\")\r\n    ),\r\n    hatch,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Text, Stack, Heading, Box, Icon } from \"@chakra-ui/react\";\r\nimport { FaVenus, FaMars } from \"react-icons/fa\";\r\n\r\nconst About = ({\r\n  abilities,\r\n  eggs,\r\n  gen,\r\n  genera,\r\n  gender,\r\n  hatch,\r\n  height,\r\n  weight,\r\n}) => {\r\n  const male = ((8 - gender) * 100) / 8;\r\n  const female = (gender * 100) / 8;\r\n\r\n  return (\r\n    <Stack spacing={3}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Species\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {genera}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Height\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {` ${height} m`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              weight\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {`${weight} kg`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              abilities\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {abilities.map((ability) => `${ability} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              first appearance\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gen}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\">Breeding</Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Gender\r\n            </Text>\r\n            <Stack\r\n              as=\"td\"\r\n              isInline\r\n              paddingY={1}\r\n              spacing={2}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gender < 0 ? (\r\n                <Text>Null</Text>\r\n              ) : (\r\n                <>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaMars} color=\"blue.500\" w={6} h={6} />\r\n                    <Text>{male}%</Text>\r\n                  </Stack>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaVenus} color=\"pink.500\" w={6} h={6} />\r\n                    <Text>{female}%</Text>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Stack>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Egg Groups\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {eggs.map((egg) => `${egg} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Hatch counter\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {`${(hatch + 1) * 255} steps`}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Text, Progress, Stack, Heading, Box, Badge } from \"@chakra-ui/react\";\r\n\r\nconst BaseStats = ({ stats, weaknesses, totalStats }) => {\r\n  const getWeaks = (weaknesses) => {\r\n    const weaks = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak > 1\r\n    );\r\n    return weaks;\r\n  };\r\n\r\n  const getResist = (weaknesses) => {\r\n    const resist = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak < 1\r\n    );\r\n    return resist;\r\n  };\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case \"4\":\r\n        return \"Very Weak x4\";\r\n      case \"2\":\r\n        return \"Weak x2\";\r\n      case \"0.5\":\r\n        return \"Not Effective x1/2\";\r\n      case \"0.25\":\r\n        return \"Strong Against x1/4\";\r\n      case \"0\":\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  const valueColor = (value) => {\r\n    if (value <= 50) {\r\n      return \"red\";\r\n    } else {\r\n      if (value <= 100) {\r\n        return \"yellow\";\r\n      } else {\r\n        return \"green\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          {Object.entries(stats).map(([title, value]) => (\r\n            <tr key={title}>\r\n              <Text\r\n                as=\"td\"\r\n                color=\"gray.500\"\r\n                paddingY={1}\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n              >\r\n                {title}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={1} width=\"15%\">\r\n                {value}\r\n              </Text>\r\n              <Box as=\"td\" paddingY={1} width=\"45%\">\r\n                <Progress\r\n                  colorScheme={valueColor(value)}\r\n                  size=\"xs\"\r\n                  value={value}\r\n                  max={200}\r\n                />\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Total\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"15%\">\r\n              {totalStats}\r\n            </Text>\r\n            <Box as=\"td\" paddingY={1} width=\"45%\">\r\n              <Progress\r\n                colorScheme={totalStats >= 400 ? \"green\" : \"red\"}\r\n                size=\"xs\"\r\n                value={totalStats}\r\n                max={750}\r\n              />\r\n            </Box>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\">Weaknesses</Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getWeaks(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n\r\n      <Heading size=\"md\">Resistance</Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getResist(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default BaseStats;\r\n","import React from \"react\";\r\nimport { Text, Stack, Table, Tbody, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Description = ({ description }) => {\r\n  return (\r\n    <Stack>\r\n      <Table variant=\"striped\" colorScheme=\"gray\" width=\"100%\">\r\n        <Tbody>\r\n          {description.map((genDesc, index) => (\r\n            <Tr key={index}>\r\n              <Text\r\n                as=\"td\"\r\n                paddingY={4}\r\n                align=\"center\"\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n                fontWeight=\"bold\"\r\n              >\r\n                {genDesc.version.name}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={4} align=\"justify\">\r\n                {genDesc.flavor_text}\r\n              </Text>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { Badge, Box, Table, Tbody, Text, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Moves = ({ moves }) => {\r\n  return (\r\n    <Table variant=\"striped\" colorScheme=\"gray\" w=\"100%\">\r\n      <thead align=\"center\">\r\n        <tr>\r\n          <th>name</th>\r\n          <th>power</th>\r\n          <th>type</th>\r\n          <th>accuracy</th>\r\n          <th>class</th>\r\n        </tr>\r\n      </thead>\r\n      <Tbody>\r\n        {moves.map((move) => (\r\n          <Tr key={move.name}>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.name}\r\n            </Text>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.power ? move.power : `-`}\r\n            </Text>\r\n            <Box as=\"td\" align=\"center\" justifyContent=\"center\">\r\n              <Badge bg={move.type} rounded={999} textAlign=\"center\">\r\n                {move.type}\r\n              </Badge>\r\n            </Box>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.accuracy ? move.accuracy : `-`}\r\n            </Text>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.dataClass}\r\n            </Text>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Moves;\r\n","import React from \"react\";\r\nimport {\r\n  TabList,\r\n  Tabs,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useFetchPokeInfo } from \"../../hooks/useFetchPokeInfo\";\r\n\r\nimport About from \"./PokeInfoPanels/About\";\r\nimport BaseStats from \"./PokeInfoPanels/BaseStats\";\r\nimport Description from \"./PokeInfoPanels/Description\";\r\nimport Moves from \"./PokeInfoPanels/Moves\";\r\n\r\nconst PokeInfo = ({ pokemon: { types, id } }) => {\r\n  const { data, loading } = useFetchPokeInfo(id);\r\n\r\n  return (\r\n    <Tabs variant=\"unstyled\" align=\"center\">\r\n      <TabList>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          About\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Base Stats\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Description\r\n        </Tab>\r\n\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Moves\r\n        </Tab>\r\n      </TabList>\r\n      {loading ? (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color={types[0]}\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <TabPanels align=\"start\" paddingX={0}>\r\n          <TabPanel>\r\n            <About\r\n              abilities={data.abilities}\r\n              eggs={data.eggs}\r\n              gen={data.gen}\r\n              genera={data.genera}\r\n              gender={data.gender}\r\n              hatch={data.hatch}\r\n              height={data.height}\r\n              weaknesses={data.weaknesses}\r\n              weight={data.weight}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <BaseStats\r\n              stats={data.stats}\r\n              totalStats={data.totalStats}\r\n              weaknesses={data.weaknesses}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Description description={data.description} />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            {data.moves.length > 0 ? (\r\n              <Moves moves={data.moves} />\r\n            ) : (\r\n              <Text color=\"crimson\" align=\"center\">\r\n                No data from PokeApi\r\n              </Text>\r\n            )}\r\n          </TabPanel>\r\n        </TabPanels>\r\n      )}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PokeInfo;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { getPokeInfoByID } from \"../api/getPokeInfoByID\";\r\n\r\nexport const useFetchPokeInfo = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPokeInfoByID(id).then((pokeData) =>\r\n      setState({\r\n        data: pokeData,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Text,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport PokeInfo from \"./PokeInfo\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\nconst PokemonDrawer = ({ onClose, pokemon }) => {\r\n  return (\r\n    <Drawer isOpen placement=\"right\" onClose={onClose} size=\"lg\">\r\n      <DrawerOverlay>\r\n        <DrawerContent overflowY=\"auto\">\r\n          <Stack\r\n            backgroundColor={`${pokemon.types[0]}`}\r\n            color=\"white\"\r\n            padding={6}\r\n            spacing={6}\r\n          >\r\n            <Stack direction=\"row\" fontSize=\"2xl\" justify=\"space-between\">\r\n              <ArrowBackIcon onClick={onClose} cursor=\"pointer\" />\r\n              <Icon as={FaHeart} w={6} h={6} />\r\n            </Stack>\r\n            <Stack direction=\"row\" color=\"white\">\r\n              <Stack width=\"100%\">\r\n                <Stack direction=\"row\" align=\"baseline\" justify=\"space-between\">\r\n                  <Heading textTransform=\"capitalize\">{pokemon.name}</Heading>\r\n                  <Text fontWeight={600}>\r\n                    #{pokemon.id.toString().padStart(3, \"0\")}\r\n                  </Text>\r\n                </Stack>\r\n                <Stack direction=\"row\">\r\n                  {pokemon.types.map((type) => (\r\n                    <Text\r\n                      key={type}\r\n                      paddingX={2}\r\n                      paddingY={1}\r\n                      backgroundColor=\"rgba(255,255,255,0.2)\"\r\n                      borderRadius={9999}\r\n                      width=\"fit-content\"\r\n                      textTransform=\"capitalize\"\r\n                    >\r\n                      {type}\r\n                    </Text>\r\n                  ))}\r\n                </Stack>\r\n\r\n                <Image\r\n                  alignSelf=\"center\"\r\n                  height={256}\r\n                  marginBottom={-3}\r\n                  maxWidth={256}\r\n                  src={pokemon.image}\r\n                  width=\"100%\"\r\n                  zIndex={20}\r\n                  className=\"animate__animated animate__shakeX\"\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            backgroundColor=\"white\"\r\n            borderRadius={24}\r\n            marginTop={-16}\r\n            padding={6}\r\n            paddingTop={12}\r\n            zIndex={10}\r\n          >\r\n            <PokeInfo pokemon={pokemon} />\r\n          </Stack>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PokemonDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, Stack, Text, Image } from \"@chakra-ui/react\";\r\nimport PokemonDrawer from \"./PokemonDrawer/PokemonDrawer\";\r\n\r\nconst PokemonThumbnail = ({ pokemon }) => {\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  return (\r\n    <Stack\r\n      color=\"white\"\r\n      backgroundColor={`${pokemon.types[0]}`}\r\n      borderRadius={12}\r\n      padding={2}\r\n      onClick={() => setDrawer(true)}\r\n      cursor=\"pointer\"\r\n    >\r\n      <Stack direction=\"row\" align=\"baseline\" justifyContent=\"space-between\">\r\n        <Heading textTransform=\"capitalize\" fontSize=\"lg\">\r\n          {pokemon.name}\r\n        </Heading>\r\n        <Text>#{pokemon.id.toString().padStart(3, \"0\")}</Text>\r\n      </Stack>\r\n      <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Stack>\r\n          {pokemon.types.map((type) => (\r\n            <Text\r\n              key={type}\r\n              paddingX={2}\r\n              paddingY={1}\r\n              backgroundColor=\"rgba(255,255,255,0.2)\"\r\n              borderRadius={9999}\r\n              width=\"fit-content\"\r\n            >\r\n              {type}\r\n            </Text>\r\n          ))}\r\n        </Stack>\r\n        <Image maxWidth=\"100px\" width={20} src={pokemon.image}></Image>\r\n      </Stack>\r\n      {drawer && (\r\n        <PokemonDrawer pokemon={pokemon} onClose={() => setDrawer(false)} />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonThumbnail;\r\n","export const URL_POKEMON = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\nexport const PAGE_SIZE = 10;\r\n","import { URL_POKEMON } from \"./settingsURL\";\r\n\r\nexport const getMiniDataPokemonByName = async (pokemonName) => {\r\n  let url = `${URL_POKEMON}/${pokemonName}`;\r\n\r\n  return await fetch(url)\r\n    .then((res) => res.json())\r\n    .then(({ id, types, sprites, name }) => {\r\n      return {\r\n        name,\r\n        image:\r\n          sprites.other[\"official-artwork\"].front_default == null\r\n            ? sprites.front_default\r\n            : sprites.other[\"official-artwork\"].front_default,\r\n        id,\r\n        types: types.map(({ type }) => type.name),\r\n      };\r\n    });\r\n};\r\n","import { URL_POKEMON, PAGE_SIZE } from \"./settingsURL\";\r\nimport { getMiniDataPokemonByID } from \"./getMiniDataPokemonByID\";\r\nimport { getPokeInfoByID } from \"./getPokeInfoByID\";\r\nimport { getMiniDataPokemonByName } from \"./getMiniDataByName\";\r\n\r\nexport const api = {\r\n  list: (page) => {\r\n    return fetch(\r\n      `${URL_POKEMON}/?offset=${PAGE_SIZE * page}}&limit=${PAGE_SIZE}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) =>\r\n        Promise.all(\r\n          response.results.map((pokemon) =>\r\n            getMiniDataPokemonByName(pokemon.name)\r\n          )\r\n        )\r\n      );\r\n  },\r\n  miniDataByName: (name) => {\r\n    return getMiniDataPokemonByName(name);\r\n  },\r\n  miniData: (id) => {\r\n    return getMiniDataPokemonByID(id);\r\n  },\r\n  fullData: (id) => {\r\n    return getPokeInfoByID(id);\r\n  },\r\n};\r\n\r\n/* list: (page) => {\r\n  return Promise.all(\r\n    new Array(PAGE_SIZE + 1)\r\n      .fill(true)\r\n      .map((_, index) => index)\r\n      .slice(1)\r\n      .map((id) => getMiniDataPokemonByID(PAGE_SIZE * page + id))\r\n  );\r\n}, */\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SimpleGrid, Heading, Stack, Button, Spinner } from \"@chakra-ui/react\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport { useFetchPokedex } from \"../../hooks/useFetchPokedex\";\r\n\r\nconst Pokedex = () => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const pagesGenerations = [\r\n    { name: \"I\", page: 0 },\r\n    { name: \"II\", page: 15 },\r\n    { name: \"III\", page: 25 },\r\n    { name: \"IV\", page: 38 },\r\n    { name: \"V\", page: 49 },\r\n    { name: \"VI\", page: 65 },\r\n    { name: \"VII\", page: 72 },\r\n    { name: \"VIII\", page: 81 },\r\n    // { name: \"Variants\", page: 89 },\r\n    // { name: \"Megas\", page: 93 },\r\n    // { name: \"Gmax\", page: 108 },\r\n  ];\r\n\r\n  const { pokemons, loading } = useFetchPokedex(page);\r\n\r\n  return (\r\n    <Stack\r\n      bg=\"gray.200\"\r\n      margin={{ base: 0, md: 4 }}\r\n      padding={{ base: 1, md: 4 }}\r\n      rounded={20}\r\n      spacing={3}\r\n    >\r\n      <Heading fontSize=\"4xl\" alignSelf=\"flex-start\">\r\n        Pokedex\r\n      </Heading>\r\n\r\n      {loading ? (\r\n        <Spinner\r\n          alignSelf=\"center\"\r\n          thickness=\"4px\"\r\n          speed=\"0.5s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <SimpleGrid gap={3} columns={2}>\r\n          {pokemons?.map((pokemon, index) => (\r\n            <motion.div\r\n              animate=\"visible\"\r\n              key={pokemon.name}\r\n              custom={index}\r\n              initial=\"hidden\"\r\n              variants={{\r\n                hidden: { opacity: 0, y: 150 },\r\n                visible: (index) => ({\r\n                  opacity: 1,\r\n                  y: 0,\r\n                  transition: {\r\n                    delay: index * 0.05,\r\n                  },\r\n                }),\r\n              }}\r\n            >\r\n              <PokemonThumbnail pokemon={pokemon} />\r\n            </motion.div>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n      <Stack isInline justify=\"center\" alignItems=\"center\">\r\n        {page > 0 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{ color: \"black\", background: \"white\", border: \"1px\" }}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Prev Page\r\n          </Button>\r\n        )}\r\n        {pagesGenerations.map(({ name, page }) => (\r\n          <Button\r\n            display={{ base: \"none\", md: \"inline-block\" }}\r\n            key={name}\r\n            size=\"md\"\r\n            onClick={() => setPage(page)}\r\n            bg=\"secondary\"\r\n            color=\"white\"\r\n            _hover={{ background: \"crimson\" }}\r\n          >\r\n            {name}\r\n          </Button>\r\n        ))}\r\n        {page < 111 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{ color: \"black\", background: \"white\", border: \"1px\" }}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchPokedex = (page) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({\r\n    pokemons: [],\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ pokemons: [], loading: true, error: null });\r\n    api.list(page).then((newPokemons) =>\r\n      setState({\r\n        pokemons: newPokemons,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [page]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { api } from \"../../api/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddPokemon = ({ setPokemons }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const nameSearch = inputValue;\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      await api\r\n        .miniDataByName(inputValue.toLowerCase())\r\n        .then((pokemon) => {\r\n          setLoading(false);\r\n          setPokemons((pokemons) => [pokemon, ...pokemons]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${nameSearch} not found`);\r\n        });\r\n    } else {\r\n      setError(\"Pokemon name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Pokémon\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAddPokemon.propType = {\r\n  setPokemons: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\nimport { AddPokemon } from \"../SearchPokemon/AddPokemon\";\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\n\r\nconst SearchPokemons = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  return (\r\n    <Stack spacing={3} padding={4} margin={{ base: 0, md: 4 }} bg=\"#fff\">\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        What Pokemon are you looking for?\r\n      </Heading>\r\n      <AddPokemon setPokemons={setPokemons} />\r\n      {pokemons.length > 0 && (\r\n        <SimpleGrid\r\n          columns={2}\r\n          gap={3}\r\n          borderRadius={20}\r\n          bg=\"gray.200\"\r\n          padding={2}\r\n        >\r\n          {pokemons.map((pokemon, id) => (\r\n            <PokemonThumbnail key={id} pokemon={pokemon} />\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchPokemons;\r\n","import React from \"react\";\r\nimport { Stack, SimpleGrid, Text, Image } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst NavButtons = () => {\r\n  return (\r\n    <SimpleGrid\r\n      bg=\"#fff\"\r\n      columns={2}\r\n      gap={3}\r\n      margin={{ base: 0, md: 4 }}\r\n      padding={4}\r\n    >\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"grass\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        overflow=\"hidden\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/pokedex\"\r\n      >\r\n        <Text color=\"white\">Pokédex</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"fire\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/moves\"\r\n      >\r\n        <Text color=\"white\">Moves</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"water\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/search\"\r\n      >\r\n        <Text color=\"white\">Search Pokemon</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"poison\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/combination\"\r\n      >\r\n        <Text color=\"white\">Types Weaks</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport SearchPokemons from \"./SearchPokemons\";\r\nimport NavButtons from \"../UI/NavButtons\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <>\r\n      <SearchPokemons />\r\n      <NavButtons />\r\n      <Pokedex />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { getMoveByName } from \"../../api/getMoveByName\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddMoves = ({ setMoves }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    const moveName = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    if (moveName.length > 2) {\r\n      await getMoveByName(moveName)\r\n        .then((move) => {\r\n          setLoading(false);\r\n          setMoves((moves) => [move, ...moves]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${inputValue} not found.`);\r\n        });\r\n    } else {\r\n      setError(\"Move name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Move (example: Ember, Thunder, Rain-Dance, Swords-Dance etc)\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMoves;\r\n\r\nAddMoves.propType = {\r\n  setMoves: PropTypes.func.isRequired,\r\n};\r\n","import { Heading, Image, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst MoveCard = ({ move }) => {\r\n  const {\r\n    accuracy,\r\n    dataClass,\r\n    description,\r\n    name,\r\n    pp,\r\n    power,\r\n    priority,\r\n    effect_chance,\r\n    effect,\r\n    type,\r\n  } = move;\r\n  return (\r\n    <Stack\r\n      bg={type}\r\n      borderRadius={12}\r\n      padding={3}\r\n      spacing={6}\r\n      marginBottom={{ base: 4, md: 0 }}\r\n    >\r\n      <Stack isInline justify=\"space-between\" alignItems=\"center\">\r\n        <Heading color=\"white\" textTransform=\"capitalize\" fontSize=\"xl\">\r\n          {name}\r\n        </Heading>\r\n        <Stack isInline>\r\n          <Image\r\n            width={7}\r\n            alt={dataClass}\r\n            filter=\"brightness(0) invert(1)\"\r\n            src={`./assets/moveClass/${dataClass}.png`}\r\n          ></Image>\r\n          <Image\r\n            width={7}\r\n            alt={type}\r\n            src={`./assets/pokemonTypes/${type}.png`}\r\n          ></Image>\r\n        </Stack>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Description:\r\n        </Heading>\r\n        <Text>{description}</Text>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Effect:\r\n        </Heading>\r\n        <Text>{effect.replace(\"$effect_chance\", effect_chance)}</Text>\r\n      </Stack>\r\n      <Stack\r\n        isInline\r\n        alignItems=\"baseline\"\r\n        justifyContent=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Power\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{power ? power : \"-\"}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            accuracy\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">\r\n            {accuracy ? `${accuracy}%` : \"-\"}\r\n          </Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"upperCase\" fontWeight=\"bold\">\r\n            pp\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{pp}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            priority\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{priority}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Category\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{dataClass}</Text>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MoveCard;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nimport AddMoves from \"../Moves/AddMoves\";\r\nimport MoveCard from \"../Moves/MoveCard\";\r\n\r\nconst SearchMoves = () => {\r\n  const [moves, setMoves] = useState([]);\r\n  return (\r\n    <Stack\r\n      spacing={7}\r\n      bg=\"white\"\r\n      rounded={30}\r\n      padding={{ base: 1, md: 10 }}\r\n      margin={{ base: 0, sm: 1, md: 4 }}\r\n    >\r\n      <Heading textAlign=\"center\">What move are you looking for?</Heading>\r\n      <AddMoves setMoves={setMoves} />\r\n      <SimpleGrid display={{ md: \"grid\" }} columns={2} gap={3}>\r\n        {moves.map((move, index) => (\r\n          <MoveCard move={move} key={index} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchMoves;\r\n","import React from \"react\";\r\nimport { Heading, Stack, Text } from \"@chakra-ui/react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Stack bg=\"blue.300\">\r\n      <Stack bg=\"red.600\">\r\n        <Heading textColor=\"white\" textAlign=\"center\" padding={3}>\r\n          Pokémon Type Calculator\r\n        </Heading>\r\n      </Stack>\r\n      <Stack borderBottom=\"3px solid\" padding={1}>\r\n        <Text textAlign=\"center\" color=\"white\">\r\n          Choose Types and Calculate Weaknesses\r\n        </Text>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Stack, Flex, Text, Badge, Heading } from \"@chakra-ui/react\";\r\nimport { getWeaknesses } from \"../../api/getWeaknesses\";\r\n\r\nconst ResultsCombination = ({ firstType, secondType }) => {\r\n  const values = [4, 2, 1, 0.5, 0.25, 0];\r\n  const [combination, setCombination] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (secondType === null) {\r\n      setCombination(getWeaknesses([firstType]));\r\n    } else {\r\n      setCombination(getWeaknesses([firstType, secondType]));\r\n    }\r\n  }, [firstType, secondType]);\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case 4:\r\n        return \"Very Weak x4\";\r\n      case 2:\r\n        return \"Weak x2\";\r\n      case 1:\r\n        return \"Normal x1\";\r\n      case 0.5:\r\n        return \"Not Effective x1/2\";\r\n      case 0.25:\r\n        return \"Strong Against x1/4\";\r\n      case 0:\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      spacing={5}\r\n      padding={{ base: 0, md: 3 }}\r\n      marginBottom={{ base: 2, md: 0 }}\r\n    >\r\n      <Heading textAlign=\"center\">Weaks Combination:</Heading>\r\n      <Stack isInline justify=\"center\" alignItems=\"baseline\">\r\n        <Flex\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          bg={firstType}\r\n          width={20}\r\n          rounded={9999}\r\n          height={20}\r\n        >\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            {firstType}\r\n          </Text>\r\n        </Flex>\r\n        {secondType && (\r\n          <>\r\n            <Flex justifyContent=\"center\">\r\n              <Text fontSize=\"2rem\" fontWeight=\"bold\">\r\n                +\r\n              </Text>\r\n            </Flex>\r\n            <Flex\r\n              align=\"center\"\r\n              justifyContent=\"center\"\r\n              width={20}\r\n              rounded={9999}\r\n              height={20}\r\n              bg={secondType}\r\n            >\r\n              <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                {secondType}\r\n              </Text>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Stack>\r\n      <Stack>\r\n        {values.map(\r\n          (value) =>\r\n            combination[value] && (\r\n              <Stack key={value} justifyItems=\"center\" alignItems=\"center\">\r\n                <Text textAlign=\"center\" fontWeight=\"bold\">\r\n                  {renderWeaks(value)}\r\n                </Text>\r\n                <Flex\r\n                  direction=\"row\"\r\n                  w=\"100%\"\r\n                  wrap=\"wrap\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  {combination[value].map((type) => (\r\n                    <Badge\r\n                      rounded={999}\r\n                      maxW=\"100px\"\r\n                      w=\"32%\"\r\n                      margin=\"8px\"\r\n                      textAlign=\"center\"\r\n                      key={type}\r\n                      bg={type}\r\n                    >\r\n                      <Text>{type}</Text>\r\n                    </Badge>\r\n                  ))}\r\n                </Flex>\r\n              </Stack>\r\n            )\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ResultsCombination;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Tag,\r\n  TagLabel,\r\n} from \"@chakra-ui/react\";\r\nimport ResultsCombination from \"./ResultsCombination\";\r\n\r\nconst CombinationContainer = () => {\r\n  const types = [\r\n    \"bug\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"electric\",\r\n    \"fairy\",\r\n    \"fighting\",\r\n    \"fire\",\r\n    \"flying\",\r\n    \"ghost\",\r\n    \"grass\",\r\n    \"ground\",\r\n    \"ice\",\r\n    \"normal\",\r\n    \"poison\",\r\n    \"psychic\",\r\n    \"rock\",\r\n    \"steel\",\r\n    \"water\",\r\n  ];\r\n\r\n  const [firstType, setFirstType] = useState(\"bug\");\r\n  const [secondType, setSecondType] = useState(null);\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      bg=\"gray.100\"\r\n      borderRadius={8}\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      margin={{ base: 3, md: 4 }}\r\n      padding={{ base: 0, md: 4 }}\r\n      spacing={40}\r\n      wrap=\"wrap\"\r\n    >\r\n      <Stack w={{ base: \"100%\", md: \"50%\" }} spacing={4}>\r\n        <Stack spacing={2} alignItems=\"center\">\r\n          <Heading textAlign=\"center\">Choose 1° Type</Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <Tag\r\n                bg={type}\r\n                cursor=\"pointer\"\r\n                key={type}\r\n                margin=\"8px\"\r\n                rounded={999}\r\n                maxW=\"100px\"\r\n                w=\"32%\"\r\n                onClick={() =>\r\n                  type !== secondType\r\n                    ? setFirstType(type)\r\n                    : (setSecondType(null), setFirstType(type))\r\n                }\r\n              >\r\n                <Image\r\n                  opacity={type !== firstType && \"0.2\"}\r\n                  maxWidth=\"100px\"\r\n                  width={4}\r\n                  src=\"../assets/ui/pokeball.svg\"\r\n                  ml={-1}\r\n                  mr={3}\r\n                />\r\n                <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                  {type}\r\n                </TagLabel>\r\n              </Tag>\r\n            ))}\r\n          </Flex>\r\n        </Stack>\r\n        <Stack spacing={2} alignItems=\"center\">\r\n          <Heading textAlign=\"center\">Choose 2° Type</Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <Tag\r\n                bg={type}\r\n                cursor=\"pointer\"\r\n                key={type}\r\n                margin=\"8px\"\r\n                rounded={999}\r\n                maxW=\"100px\"\r\n                w=\"32%\"\r\n                onClick={() =>\r\n                  type !== firstType ? setSecondType(type) : setSecondType(null)\r\n                }\r\n              >\r\n                <Image\r\n                  opacity={type !== secondType && \"0.2\"}\r\n                  maxWidth=\"100px\"\r\n                  width={4}\r\n                  src=\"../assets/ui/pokeball.svg\"\r\n                  ml={-1}\r\n                  mr={3}\r\n                />\r\n                <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                  {type}\r\n                </TagLabel>\r\n              </Tag>\r\n            ))}\r\n\r\n            <Tag\r\n              bg=\"grey\"\r\n              cursor=\"pointer\"\r\n              key=\"none\"\r\n              margin=\"8px\"\r\n              rounded={999}\r\n              maxW=\"100px\"\r\n              w=\"33%\"\r\n              onClick={() => setSecondType(null)}\r\n            >\r\n              <Image\r\n                opacity={null !== secondType && \"0.2\"}\r\n                maxWidth=\"100px\"\r\n                width={4}\r\n                src=\"../assets/ui/pokeball.svg\"\r\n                ml={-1}\r\n                mr={3}\r\n              />\r\n              <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                None\r\n              </TagLabel>\r\n            </Tag>\r\n          </Flex>\r\n        </Stack>\r\n      </Stack>\r\n      <Box\r\n        marginTop={{ base: \"4rem\", md: \"0px\" }}\r\n        w={{ base: \"100%\", md: \"50%\" }}\r\n      >\r\n        <ResultsCombination\r\n          w={{ base: \"100%\", md: \"50%\" }}\r\n          firstType={firstType}\r\n          secondType={secondType}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default CombinationContainer;\r\n","import React from \"react\";\r\nimport Header from \"../Combination/Header\";\r\nimport CombinationContainer from \"../Combination/CombinationContainer\";\r\n\r\nconst TypeCombinationPage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <CombinationContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypeCombinationPage;\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../components/UI/Navbar\";\r\nimport Footer from \"../components/UI/Footer\";\r\n\r\nimport Landing from \"../components/Pages/Landing\";\r\nimport Pokedex from \"../components/Pages/Pokedex\";\r\nimport SearchPokemons from \"../components/Pages/SearchPokemons\";\r\nimport SearchMoves from \"../components/Pages/SearchMoves\";\r\nimport TypeCombination from \"../components/Pages/TypeCombination\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Navbar />\r\n        <Flex\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          maxWidth=\"1920px\"\r\n          minH=\"100vh\"\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/search\">\r\n              <SearchPokemons />\r\n            </Route>\r\n            <Route exact path=\"/moves\">\r\n              <SearchMoves />\r\n            </Route>\r\n            <Route exact path=\"/combination\">\r\n              <TypeCombination />\r\n            </Route>\r\n            <Route exact path=\"/pokedex\">\r\n              <Pokedex />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Landing />\r\n            </Route>\r\n          </Switch>\r\n        </Flex>\r\n        <Footer />\r\n      </>\r\n    </Router>\r\n  );\r\n};\r\n","import { AppRouter } from \"./routers/AppRouter\";\r\n\r\nconst App = () => {\r\n  return <AppRouter />;\r\n};\r\n\r\nexport default App;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  colors: {\r\n    grass: \"#47CFAF\",\r\n    fire: \"#FB6D6C\",\r\n    water: \"#74BDFD\",\r\n    dragon: \"#8774FF\",\r\n    normal: \"#BDBDAE\",\r\n    bug: \"#C1D11F\",\r\n    poison: \"#AA5DA1\",\r\n    electric: \"#FEE63C\",\r\n    ground: \"#d3b54a\",\r\n    psychic: \"#F562B1\",\r\n    fighting: \"#A75545\",\r\n    fairy: \"#FAADFF\",\r\n    rock: \"#CEBD72\",\r\n    ghost: \"#7A76D8\",\r\n    ice: \"#96F1FF\",\r\n    steel: \"#C4C2DB\",\r\n    flying: \"#7AA1FF\",\r\n    dark: \"#8A6653\",\r\n\r\n    primary: \"#ff0050\",\r\n    secondary: \"#2667ff\",\r\n  },\r\n  shadows: {\r\n    outline: \"0\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider resetCSS theme={theme}>\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}