{"version":3,"sources":["components/UI/Navbar.js","components/UI/Copyright.js","components/UI/Footer.js","api/getMoveByName.js","data/dataTypeWeaknesses.js","api/getWeaknesses.js","api/getPokeInfoByID.js","components/PokemonDrawer/PokeInfoPanels/About.js","components/PokemonDrawer/PokeInfoPanels/BaseStats.js","components/PokemonDrawer/PokeInfoPanels/Description.js","components/PokemonDrawer/PokeInfoPanels/Moves.js","components/PokemonDrawer/PokeInfo.js","hooks/useFetchPokeInfo.js","components/PokemonDrawer/PokemonDrawer.js","components/PokemonThumbnail.js","api/settingsURL.js","api/getMiniData.js","api/api.js","components/Pages/Pokedex.js","hooks/useFetchPokedex.js","components/SearchPokemon/AddPokemon.js","components/Pages/SearchPokemons.js","components/UI/NavButtons.js","components/Pages/Landing.js","components/SearchMoves/AddMoves.js","components/SearchMoves/MoveCard.js","components/Pages/SearchMoves.js","components/TypesCombination/Header.js","components/TypesCombination/ResultsCombination.js","components/TypesCombination/CombinationContainer.js","components/Pages/TypeCombination.js","components/PokemonQuiz/Quiz.js","components/PokemonQuiz/SelectLevel.js","components/Pages/PokemonQuiz.js","hooks/useFetchGetPokemonID.js","routers/AppRouter.js","App.js","theme.js","index.js"],"names":["Navbar","as","isInline","alignItems","height","justifyContent","base","md","bg","zIndex","colorScheme","variant","ReachLink","to","mr","display","size","color","_hover","opacity","Copyright","textcolor","position","cursor","onClick","window","open","textAlign","textColor","Date","getFullYear","Footer","justify","paddingY","getMoveByName","moveName","a","moveURL","fetch","resp","json","accuracy","damage_class","name","priority","description","flavor_text_entries","effect_entries","effect_chance","pp","power","target","type","dataClass","filter","desc","language","version_group","flavor_text","effect","short_effect","dataTypeWeaknesses","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","getWeaknesses","types","weaknesses","length","data","reduce","combination","Object","entries","typeName","number","acc","key","value","push","concat","getPokeInfoByID","id","abilitiesData","abilities","moves","species","statsData","stats","weight","typesData","map","movesFilter","version_group_details","find","Promise","all","move","movesData","getSpeciesData","url","speciesData","ability","image","obj","item","stat","base_stat","totalStats","sum","eggsData","egg_groups","gender","gender_rate","genera","generation","hatch","hatch_counter","eggs","egg","gen","genus","version","About","male","female","spacing","width","textTransform","fontWeight","FaMars","w","h","FaVenus","BaseStats","renderWeaks","valueColor","title","max","weak","getWeaks","background","borderRadius","paddingX","marginX","getResist","Description","genDesc","index","align","Moves","rounded","PokeInfo","pokemon","isMounted","useRef","useState","loading","state","setState","useEffect","current","then","pokeData","useFetchPokeInfo","_selected","borderBottom","thickness","speed","emptyColor","PokemonDrawer","onClose","isOpen","placement","overflowY","backgroundColor","padding","direction","fontSize","ArrowBack","FaHeart","toString","padStart","alignSelf","marginBottom","maxWidth","src","className","marginTop","paddingTop","PokemonThumbnail","drawer","setDrawer","URL_POKEMON","getMiniData","params","res","sprites","other","front_default","api","page","response","results","Pokedex","setPage","pokemons","error","newPokemons","useFetchPokedex","margin","gap","columns","div","animate","custom","initial","variants","hidden","y","visible","transition","delay","bgGradient","AddPokemon","setPokemons","inputValue","setInputValue","setError","setLoading","handleSubmit","e","preventDefault","nameSearch","replace","toLowerCase","catch","onSubmit","children","Search","placeholder","isInvalid","errorBorderColor","onChange","event","propType","PropTypes","func","isRequired","SearchPokemons","pathname","useLocation","aria-label","icon","Link","mt","NavButtons","boxShadow","overflow","marginRight","Landing","AddMoves","setMoves","MoveCard","alt","SearchMoves","sm","Header","ResultsCombination","firstType","secondType","setCombination","justifyItems","wrap","maxW","CombinationContainer","setFirstType","setSecondType","ml","TypeCombinationPage","Quiz","nextPokemon","status","setStatus","inputName","setInputName","counter","setCounter","draggable","style","imageRendering","p","c","SelectLevel","setMin","setMax","bgClip","min","PokemonQuiz","getRandomNumber","Math","floor","random","setRandom","useFetchGetPokemonID","AppRouter","templateColumns","templateRows","overflowX","backgroundImage","exact","path","TypeCombination","App","extendTheme","colors","primary","secondary","shadows","outline","ReactDOM","render","StrictMode","resetCSS","theme","document","getElementById"],"mappings":"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","file":"static/js/main.652765e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Stack } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Stack\r\n      as=\"nav\"\r\n      isInline\r\n      alignItems=\"center\"\r\n      height={12}\r\n      justifyContent={{ base: \"center\", md: \"space-between\" }}\r\n      bg=\"gray.900\"\r\n      zIndex={200}\r\n    >\r\n      <Stack isInline>\r\n        <Button colorScheme=\"gray.50\" variant=\"solid\" as={ReachLink} to=\"/home\">\r\n          PokedexApp\r\n        </Button>\r\n      </Stack>\r\n      <Stack isInline mr={2} display={{ base: \"none\", md: \"inline-flex\" }}>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"grass\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/pokedex\"\r\n        >\r\n          Pokedex\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"fire\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/moves\"\r\n        >\r\n          Moves\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"water\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/search\"\r\n        >\r\n          Find Pokemon\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"ground\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/quizz\"\r\n        >\r\n          Who's that Pokemon?\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"poison\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/combination\"\r\n        >\r\n          Types Weaks\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst Copyright = ({ textcolor, position }) => {\r\n  return (\r\n    <Text\r\n      cursor=\"pointer\"\r\n      onClick={() => window.open(`https://juanmaportfolio.netlify.app/`)}\r\n      textAlign=\"center\"\r\n      textColor=\"white\"\r\n    >\r\n      PokdexApp Copyright © Juan Manuel Ibarzabal Salles{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React from \"react\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Copyright from \"./Copyright\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Stack\r\n      textAlign=\"center\"\r\n      justify=\"center\"\r\n      bg=\"black\"\r\n      paddingY={4}\r\n      as=\"footer\"\r\n    >\r\n      <Copyright />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const getMoveByName = async (moveName) => {\r\n  const moveURL = `https://pokeapi.co/api/v2/move/${moveName}`;\r\n\r\n  const resp = await fetch(moveURL);\r\n\r\n  const {\r\n    accuracy,\r\n    damage_class,\r\n    name,\r\n    priority,\r\n    flavor_text_entries: description,\r\n    effect_entries,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    target,\r\n    type,\r\n  } = await resp.json();\r\n\r\n  const dataClass = damage_class.name;\r\n\r\n  return {\r\n    accuracy,\r\n    dataClass,\r\n    name,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"x-y\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"sword\")\r\n    )[0]?.flavor_text,\r\n    effect: effect_entries[0].short_effect,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    priority,\r\n    target: target.name,\r\n    type: type.name,\r\n  };\r\n};\r\n","export const dataTypeWeaknesses = {\r\n  bug: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dark: {\r\n    bug: 2,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0.5,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dragon: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 2,\r\n    electric: 0.5,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  electric: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  fairy: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 0,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  fighting: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 2,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  fire: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 0.5,\r\n    water: 2,\r\n  },\r\n  flying: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  ghost: {\r\n    bug: 0.5,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 0,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  grass: {\r\n    bug: 2,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  ground: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 2,\r\n  },\r\n  ice: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  normal: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  poison: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 2,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  psychic: {\r\n    bug: 2,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0.5,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  rock: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 0.5,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 0.5,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 2,\r\n  },\r\n  steel: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 0.5,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 0.5,\r\n    poison: 0,\r\n    psychic: 0.5,\r\n    rock: 0.5,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  water: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 0.5,\r\n  },\r\n};\r\n","import { dataTypeWeaknesses as data } from \"../data/dataTypeWeaknesses\";\r\n\r\nexport const getWeaknesses = (types) => {\r\n  let weaknesses = {};\r\n\r\n  if (types.length === 1) {\r\n    weaknesses = data[types];\r\n  } else {\r\n    weaknesses = types.reduce((combination, type) => {\r\n      for (const [typeName, number] of Object.entries(data[type])) {\r\n        if (!combination[typeName]) {\r\n          combination[typeName] = 1;\r\n        }\r\n        combination[typeName] *= number;\r\n      }\r\n\r\n      return combination;\r\n    }, {});\r\n  }\r\n\r\n  //  Recibo\r\n  // weaknesses = {\r\n  //   bug: 1,\r\n  //   dragon: 1,\r\n  //   fire: 2,\r\n  //   water: 3,\r\n  // };\r\n\r\n  const invertido = Object.entries(weaknesses).reduce((acc, [key, value]) => {\r\n    if (acc[value]) {\r\n      acc[value].push(key);\r\n      return acc;\r\n    } else {\r\n      return { ...acc, [value]: [].concat(key) };\r\n    }\r\n  }, {});\r\n\r\n  return invertido;\r\n};\r\n","import { getMoveByName } from \"./getMoveByName\";\r\nimport { getWeaknesses } from \"./getWeaknesses\";\r\n\r\nexport const getPokeInfoByID = async (id) => {\r\n  const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n  const {\r\n    abilities: abilitiesData,\r\n    height,\r\n    moves,\r\n    name,\r\n    species,\r\n    stats: statsData,\r\n    types,\r\n    weight,\r\n  } = await resp.json();\r\n\r\n  const typesData = types.map(({ type }) => type.name);\r\n\r\n  const movesFilter = moves.filter(({ version_group_details }) =>\r\n    version_group_details.find(\r\n      ({ version_group }) => version_group.name === \"ultra-sun-ultra-moon\"\r\n    )\r\n  );\r\n\r\n  const movesData = await Promise.all(\r\n    movesFilter.map(({ move }) => getMoveByName(move.name))\r\n  );\r\n\r\n  const speciesData = await getSpeciesData(species.url);\r\n\r\n  return {\r\n    ...speciesData,\r\n    abilities: abilitiesData.map(({ ability }) => ability.name),\r\n    height: height / 10,\r\n    id,\r\n    image: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\r\n    moves: movesData,\r\n    name,\r\n    stats: statsData.reduce(\r\n      (obj, item) => ({ ...obj, [item.stat.name]: item.base_stat }),\r\n      {}\r\n    ),\r\n    totalStats: statsData.reduce((sum, value) => sum + value.base_stat, 0),\r\n    types: typesData,\r\n    weaknesses: getWeaknesses(typesData),\r\n    weight: weight / 10,\r\n  };\r\n};\r\n\r\nconst getSpeciesData = async (url) => {\r\n  const resp = await fetch(url);\r\n  const {\r\n    egg_groups: eggsData,\r\n    gender_rate: gender,\r\n    genera,\r\n    generation,\r\n    flavor_text_entries: description,\r\n    hatch_counter: hatch,\r\n  } = await resp.json();\r\n\r\n  return {\r\n    eggs: eggsData.map((egg) => egg.name),\r\n    gen: generation.name,\r\n    gender,\r\n    genera: genera.find((genus) => genus.language.name === \"en\").genus,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" && desc.version.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"sword\")\r\n    ),\r\n    hatch,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Text, Stack, Heading, Box, Icon } from \"@chakra-ui/react\";\r\nimport { FaVenus, FaMars } from \"react-icons/fa\";\r\n\r\nconst About = ({\r\n  abilities,\r\n  eggs,\r\n  gen,\r\n  genera,\r\n  gender,\r\n  hatch,\r\n  height,\r\n  weight,\r\n}) => {\r\n  const male = ((8 - gender) * 100) / 8;\r\n  const female = (gender * 100) / 8;\r\n\r\n  return (\r\n    <Stack spacing={3}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Species\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {genera}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Height\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {` ${height} m`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              weight\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {`${weight} kg`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              abilities\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {abilities.map((ability) => `${ability} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              first appearance\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gen}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Breeding\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Gender\r\n            </Text>\r\n            <Stack\r\n              as=\"td\"\r\n              isInline\r\n              paddingY={1}\r\n              spacing={2}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gender < 0 ? (\r\n                <Text>Null</Text>\r\n              ) : (\r\n                <>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaMars} color=\"blue.500\" w={6} h={6} />\r\n                    <Text>{male}%</Text>\r\n                  </Stack>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaVenus} color=\"pink.500\" w={6} h={6} />\r\n                    <Text>{female}%</Text>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Stack>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Egg Groups\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {eggs.map((egg) => `${egg} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Hatch counter\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {`${(hatch + 1) * 255} steps`}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Text, Progress, Stack, Heading, Box, Badge } from \"@chakra-ui/react\";\r\n\r\nconst BaseStats = ({ stats, weaknesses, totalStats }) => {\r\n  const getWeaks = (weaknesses) => {\r\n    const weaks = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak > 1\r\n    );\r\n    return weaks;\r\n  };\r\n\r\n  const getResist = (weaknesses) => {\r\n    const resist = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak < 1\r\n    );\r\n    return resist;\r\n  };\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case \"4\":\r\n        return \"Very Weak x4\";\r\n      case \"2\":\r\n        return \"Weak x2\";\r\n      case \"0.5\":\r\n        return \"Not Effective x1/2\";\r\n      case \"0.25\":\r\n        return \"Strong Against x1/4\";\r\n      case \"0\":\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  const valueColor = (value) => {\r\n    if (value <= 50) {\r\n      return \"red\";\r\n    } else {\r\n      if (value <= 100) {\r\n        return \"yellow\";\r\n      } else {\r\n        return \"green\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={4}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          {Object.entries(stats).map(([title, value]) => (\r\n            <tr key={title}>\r\n              <Text\r\n                as=\"td\"\r\n                color=\"gray.500\"\r\n                paddingY={1}\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n              >\r\n                {title}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={1} width=\"15%\">\r\n                {value}\r\n              </Text>\r\n              <Box as=\"td\" paddingY={1} width=\"45%\">\r\n                <Progress\r\n                  colorScheme={valueColor(value)}\r\n                  size=\"xs\"\r\n                  value={value}\r\n                  max={200}\r\n                />\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Total\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"15%\">\r\n              {totalStats}\r\n            </Text>\r\n            <Box as=\"td\" paddingY={1} width=\"45%\">\r\n              <Progress\r\n                colorScheme={totalStats >= 400 ? \"green\" : \"red\"}\r\n                size=\"xs\"\r\n                value={totalStats}\r\n                max={750}\r\n              />\r\n            </Box>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Weaknesses\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getWeaks(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Resistance\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getResist(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default BaseStats;\r\n","import React from \"react\";\r\nimport { Text, Stack, Table, Tbody, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Description = ({ description }) => {\r\n  return (\r\n    <Stack>\r\n      <Table variant=\"striped\" colorScheme=\"gray\" width=\"100%\">\r\n        <Tbody>\r\n          {description.map((genDesc, index) => (\r\n            <Tr key={index}>\r\n              <Text\r\n                as=\"td\"\r\n                paddingY={4}\r\n                align=\"center\"\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n                fontWeight=\"bold\"\r\n              >\r\n                {genDesc.version.name}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={4} align=\"justify\">\r\n                {genDesc.flavor_text}\r\n              </Text>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { Badge, Box, Table, Tbody, Text, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Moves = ({ moves }) => {\r\n  return (\r\n    <Table variant=\"striped\" colorScheme=\"gray\" w=\"100%\">\r\n      <thead align=\"center\">\r\n        <tr>\r\n          <th>name</th>\r\n          <th>power</th>\r\n          <th>type</th>\r\n          <th>accuracy</th>\r\n          <th>class</th>\r\n        </tr>\r\n      </thead>\r\n      <Tbody>\r\n        {moves.map((move) => (\r\n          <Tr key={move.name}>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.name}\r\n            </Text>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.power ? move.power : `-`}\r\n            </Text>\r\n            <Box as=\"td\" align=\"center\" justifyContent=\"center\">\r\n              <Badge bg={move.type} rounded={999} textAlign=\"center\">\r\n                {move.type}\r\n              </Badge>\r\n            </Box>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.accuracy ? move.accuracy : `-`}\r\n            </Text>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.dataClass}\r\n            </Text>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Moves;\r\n","import React from \"react\";\r\nimport {\r\n  TabList,\r\n  Tabs,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useFetchPokeInfo } from \"../../hooks/useFetchPokeInfo\";\r\n\r\nimport About from \"./PokeInfoPanels/About\";\r\nimport BaseStats from \"./PokeInfoPanels/BaseStats\";\r\nimport Description from \"./PokeInfoPanels/Description\";\r\nimport Moves from \"./PokeInfoPanels/Moves\";\r\n\r\nconst PokeInfo = ({ pokemon: { types, id } }) => {\r\n  const { data, loading } = useFetchPokeInfo(id);\r\n\r\n  return (\r\n    <Tabs variant=\"unstyled\" align=\"center\">\r\n      <TabList>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          About\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Base Stats\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Description\r\n        </Tab>\r\n\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Moves\r\n        </Tab>\r\n      </TabList>\r\n      {loading ? (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color={types[0]}\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <TabPanels align=\"center\">\r\n          <TabPanel>\r\n            <About\r\n              abilities={data.abilities}\r\n              eggs={data.eggs}\r\n              gen={data.gen}\r\n              genera={data.genera}\r\n              gender={data.gender}\r\n              hatch={data.hatch}\r\n              height={data.height}\r\n              weaknesses={data.weaknesses}\r\n              weight={data.weight}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <BaseStats\r\n              stats={data.stats}\r\n              totalStats={data.totalStats}\r\n              weaknesses={data.weaknesses}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Description description={data.description} />\r\n          </TabPanel>\r\n\r\n          <TabPanel paddingX={2}>\r\n            {data.moves.length > 0 ? (\r\n              <Moves moves={data.moves} />\r\n            ) : (\r\n              <Text color=\"crimson\" align=\"center\">\r\n                No data from PokeApi\r\n              </Text>\r\n            )}\r\n          </TabPanel>\r\n        </TabPanels>\r\n      )}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PokeInfo;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { getPokeInfoByID } from \"../api/getPokeInfoByID\";\r\n\r\nexport const useFetchPokeInfo = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPokeInfoByID(id).then((pokeData) => {\r\n      if (isMounted.current) {\r\n        setState({\r\n          data: pokeData,\r\n          loading: false,\r\n        });\r\n      }\r\n    });\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Text,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport PokeInfo from \"./PokeInfo\";\r\n\r\nconst PokemonDrawer = ({ onClose, pokemon }) => {\r\n  return (\r\n    <Drawer isOpen placement=\"right\" onClose={onClose} size=\"lg\">\r\n      <DrawerOverlay>\r\n        <DrawerContent overflowY=\"auto\">\r\n          <Stack\r\n            backgroundColor={`${pokemon.types[0]}`}\r\n            color=\"white\"\r\n            padding={6}\r\n            spacing={6}\r\n          >\r\n            <Stack direction=\"row\" fontSize=\"2xl\" justify=\"space-between\">\r\n              <ArrowBackIcon onClick={onClose} cursor=\"pointer\" />\r\n              <Icon as={FaHeart} w={6} h={6} />\r\n            </Stack>\r\n            <Stack direction=\"row\" color=\"white\">\r\n              <Stack width=\"100%\">\r\n                <Stack direction=\"row\" align=\"baseline\" justify=\"space-between\">\r\n                  <Heading textTransform=\"capitalize\">{pokemon.name}</Heading>\r\n                  <Text fontWeight={600}>\r\n                    #{pokemon.id.toString().padStart(3, \"0\")}\r\n                  </Text>\r\n                </Stack>\r\n                <Stack direction=\"row\">\r\n                  {pokemon.types.map((type) => (\r\n                    <Text\r\n                      key={type}\r\n                      paddingX={2}\r\n                      paddingY={1}\r\n                      backgroundColor=\"rgba(255,255,255,0.2)\"\r\n                      borderRadius={9999}\r\n                      width=\"fit-content\"\r\n                      textTransform=\"capitalize\"\r\n                    >\r\n                      {type}\r\n                    </Text>\r\n                  ))}\r\n                </Stack>\r\n\r\n                <Image\r\n                  alignSelf=\"center\"\r\n                  height={256}\r\n                  marginBottom={-3}\r\n                  maxWidth={256}\r\n                  src={pokemon.image}\r\n                  width=\"100%\"\r\n                  zIndex={20}\r\n                  className=\"animate__animated animate__shakeX\"\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            backgroundColor=\"white\"\r\n            borderRadius={24}\r\n            marginTop={-16}\r\n            padding={6}\r\n            paddingTop={12}\r\n            zIndex={10}\r\n          >\r\n            <PokeInfo pokemon={pokemon} />\r\n          </Stack>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PokemonDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, Stack, Text, Image } from \"@chakra-ui/react\";\r\nimport PokemonDrawer from \"./PokemonDrawer/PokemonDrawer\";\r\n\r\nconst PokemonThumbnail = ({ pokemon }) => {\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  return (\r\n    <Stack\r\n      color=\"white\"\r\n      backgroundColor={`${pokemon.types[0]}`}\r\n      borderRadius={12}\r\n      padding={2}\r\n      onClick={() => setDrawer(true)}\r\n      cursor=\"pointer\"\r\n    >\r\n      <Stack direction=\"row\" align=\"baseline\" justifyContent=\"space-between\">\r\n        <Heading textTransform=\"capitalize\" fontSize=\"lg\">\r\n          {pokemon.name}\r\n        </Heading>\r\n        <Text>#{pokemon.id.toString().padStart(3, \"0\")}</Text>\r\n      </Stack>\r\n      <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Stack>\r\n          {pokemon.types.map((type) => (\r\n            <Text\r\n              key={type}\r\n              paddingX={2}\r\n              paddingY={1}\r\n              backgroundColor=\"rgba(255,255,255,0.2)\"\r\n              borderRadius={9999}\r\n              width=\"fit-content\"\r\n            >\r\n              {type}\r\n            </Text>\r\n          ))}\r\n        </Stack>\r\n        <Image maxWidth=\"100px\" width={20} src={pokemon.image}></Image>\r\n      </Stack>\r\n      {drawer && (\r\n        <PokemonDrawer pokemon={pokemon} onClose={() => setDrawer(false)} />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonThumbnail;\r\n","export const URL_POKEMON = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\nexport const PAGE_SIZE = 10;\r\n","import { URL_POKEMON } from \"./settingsURL\";\r\n\r\n// params = name or id\r\nexport const getMiniData = async (params) => {\r\n  let url = `${URL_POKEMON}/${params}`;\r\n\r\n  return await fetch(url)\r\n    .then((res) => res.json())\r\n    .then(({ id, types, sprites, name }) => {\r\n      return {\r\n        name,\r\n        image: sprites.other[\"official-artwork\"].front_default,\r\n        id,\r\n        types: types.map(({ type }) => type.name),\r\n      };\r\n    });\r\n};\r\n","import { URL_POKEMON, PAGE_SIZE } from \"./settingsURL\";\r\nimport { getPokeInfoByID } from \"./getPokeInfoByID\";\r\nimport { getMiniData } from \"./getMiniData\";\r\n\r\nexport const api = {\r\n  list: (page) => {\r\n    return fetch(\r\n      `${URL_POKEMON}/?offset=${PAGE_SIZE * page}}&limit=${PAGE_SIZE}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) =>\r\n        Promise.all(\r\n          response.results.map((pokemon) => getMiniData(pokemon.name))\r\n        )\r\n      );\r\n  },\r\n  miniData: (key) => {\r\n    return getMiniData(key);\r\n  },\r\n  fullData: (id) => {\r\n    return getPokeInfoByID(id);\r\n  },\r\n};\r\n\r\n/* list: (page) => {\r\n  return Promise.all(\r\n    new Array(PAGE_SIZE + 1)\r\n      .fill(true)\r\n      .map((_, index) => index)\r\n      .slice(1)\r\n      .map((id) => getMiniData(PAGE_SIZE * page + id))\r\n  );\r\n}, */\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SimpleGrid, Heading, Stack, Button, Spinner } from \"@chakra-ui/react\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport { useFetchPokedex } from \"../../hooks/useFetchPokedex\";\r\n\r\nconst Pokedex = () => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const pagesGenerations = [\r\n    { name: \"I\", page: 0 },\r\n    { name: \"II\", page: 15 },\r\n    { name: \"III\", page: 25 },\r\n    { name: \"IV\", page: 38 },\r\n    { name: \"V\", page: 49 },\r\n    { name: \"VI\", page: 65 },\r\n    { name: \"VII\", page: 72 },\r\n    { name: \"VIII\", page: 81 },\r\n    // { name: \"Variants\", page: 89 },\r\n    // { name: \"Megas\", page: 93 },\r\n    // { name: \"Gmax\", page: 108 },\r\n  ];\r\n\r\n  const { pokemons, loading } = useFetchPokedex(page);\r\n\r\n  return (\r\n    <Stack\r\n      bg=\"gray.200\"\r\n      margin={{ base: 0, md: 4 }}\r\n      padding={{ base: 1, md: 4 }}\r\n      rounded={20}\r\n      spacing={3}\r\n    >\r\n      <Heading fontSize=\"4xl\" alignSelf=\"flex-start\">\r\n        Pokedex\r\n      </Heading>\r\n\r\n      {loading ? (\r\n        <Spinner\r\n          alignSelf=\"center\"\r\n          thickness=\"4px\"\r\n          speed=\"0.5s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <SimpleGrid gap={3} columns={2}>\r\n          {pokemons?.map((pokemon, index) => (\r\n            <motion.div\r\n              animate=\"visible\"\r\n              key={pokemon.name}\r\n              custom={index}\r\n              initial=\"hidden\"\r\n              variants={{\r\n                hidden: { opacity: 0, y: 150 },\r\n                visible: (index) => ({\r\n                  opacity: 1,\r\n                  y: 0,\r\n                  transition: {\r\n                    delay: index * 0.05,\r\n                  },\r\n                }),\r\n              }}\r\n            >\r\n              <PokemonThumbnail pokemon={pokemon} />\r\n            </motion.div>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n      <Stack isInline justify=\"center\" alignItems=\"center\">\r\n        {page > 0 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Prev Page\r\n          </Button>\r\n        )}\r\n        {pagesGenerations.map(({ name, page }) => (\r\n          <Button\r\n            display={{ base: \"none\", md: \"inline-block\" }}\r\n            key={name}\r\n            size=\"md\"\r\n            onClick={() => setPage(page)}\r\n            bg=\"secondary\"\r\n            color=\"white\"\r\n            _hover={{ background: \"crimson\" }}\r\n          >\r\n            {name}\r\n          </Button>\r\n        ))}\r\n        {page < 111 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchPokedex = (page) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({\r\n    pokemons: [],\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ pokemons: [], loading: true, error: null });\r\n    api.list(page).then((newPokemons) => {\r\n      if (isMounted.current)\r\n        setState({\r\n          pokemons: newPokemons,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [page]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { api } from \"../../api/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddPokemon = ({ setPokemons }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const nameSearch = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    await api\r\n      .miniData(nameSearch)\r\n      .then((pokemon) => {\r\n        setLoading(false);\r\n        setPokemons((pokemons) => [pokemon, ...pokemons]);\r\n        setInputValue(\"\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setError(`${nameSearch} not found`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Pokémon by name or number\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={(event) => setInputValue(event.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAddPokemon.propType = {\r\n  setPokemons: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack, IconButton } from \"@chakra-ui/react\";\r\nimport { AddPokemon } from \"../SearchPokemon/AddPokemon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst SearchPokemons = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Stack\r\n      bg=\"#fff\"\r\n      padding={4}\r\n      spacing={3}\r\n      margin={{ base: 0, md: 4 }}\r\n      rounded={{ base: 0, md: 12 }}\r\n    >\r\n      {pathname === \"/search\" && (\r\n        <IconButton\r\n          colorScheme=\"teal\"\r\n          aria-label=\"go home\"\r\n          icon={<ArrowBackIcon />}\r\n          width={8}\r\n          height={8}\r\n          cursor=\"pointer\"\r\n          as={Link}\r\n          to=\"/\"\r\n        />\r\n      )}\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        What Pokemon are you looking for?\r\n      </Heading>\r\n      <AddPokemon setPokemons={setPokemons} />\r\n      {pokemons.length > 0 && (\r\n        <SimpleGrid\r\n          columns={2}\r\n          gap={3}\r\n          borderRadius={20}\r\n          bg=\"gray.200\"\r\n          padding={2}\r\n        >\r\n          {pokemons.map((pokemon, id) => (\r\n            <PokemonThumbnail key={id} pokemon={pokemon} />\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchPokemons;\r\n","import React from \"react\";\r\nimport { Stack, SimpleGrid, Text, Image } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst NavButtons = () => {\r\n  return (\r\n    <SimpleGrid\r\n      bg=\"#fff\"\r\n      columns={2}\r\n      gap={3}\r\n      margin={{ base: 0, md: 4 }}\r\n      padding={4}\r\n    >\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"grass\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        overflow=\"hidden\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/pokedex\"\r\n      >\r\n        <Text color=\"white\">Pokédex</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"fire\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/moves\"\r\n      >\r\n        <Text color=\"white\">Search Moves</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"water\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/search\"\r\n      >\r\n        <Text color=\"white\">Search Pokemon</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"ground\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/quiz\"\r\n      >\r\n        <Text color=\"white\">Who's that pokemon?</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"poison\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/combination\"\r\n      >\r\n        <Text color=\"white\">Types Weaks</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"fighting\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        cursor=\"pointer\"\r\n        onClick={() =>\r\n          window.open(\"https://juanmaportfolio.netlify.app/\", \"_blank\")\r\n        }\r\n      >\r\n        <Text color=\"white\">About Me</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport SearchPokemons from \"./SearchPokemons\";\r\nimport NavButtons from \"../UI/NavButtons\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Box bg=\"#fff\" margin={{ base: 0, md: 4 }} rounded={20}>\r\n      <SearchPokemons />\r\n      <NavButtons />\r\n      <Pokedex />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { getMoveByName } from \"../../api/getMoveByName\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddMoves = ({ setMoves }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    const moveName = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    if (moveName.length > 2) {\r\n      await getMoveByName(moveName)\r\n        .then((move) => {\r\n          setLoading(false);\r\n          setMoves((moves) => [move, ...moves]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${inputValue} not found.`);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n      setError(\"Move name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Move (example: Ember, Thunder, Rain-Dance, Swords-Dance etc)\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.85s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMoves;\r\n\r\nAddMoves.propType = {\r\n  setMoves: PropTypes.func.isRequired,\r\n};\r\n","import { Heading, Image, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst MoveCard = ({ move }) => {\r\n  const {\r\n    accuracy,\r\n    dataClass,\r\n    description,\r\n    name,\r\n    pp,\r\n    power,\r\n    priority,\r\n    effect_chance,\r\n    effect,\r\n    type,\r\n  } = move;\r\n  return (\r\n    <Stack\r\n      bg={type}\r\n      borderRadius={12}\r\n      padding={3}\r\n      spacing={6}\r\n      marginBottom={{ base: 4, md: 0 }}\r\n    >\r\n      <Stack isInline justify=\"space-between\" alignItems=\"center\">\r\n        <Heading color=\"white\" textTransform=\"capitalize\" fontSize=\"xl\">\r\n          {name}\r\n        </Heading>\r\n        <Stack isInline>\r\n          <Image\r\n            width={7}\r\n            alt={dataClass}\r\n            filter=\"brightness(0) invert(1)\"\r\n            src={`./assets/moveClass/${dataClass}.png`}\r\n          ></Image>\r\n          <Image\r\n            width={7}\r\n            alt={type}\r\n            src={`./assets/pokemonTypes/${type}.png`}\r\n          ></Image>\r\n        </Stack>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Description:\r\n        </Heading>\r\n        <Text>{description}</Text>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Effect:\r\n        </Heading>\r\n        <Text>{effect.replace(\"$effect_chance\", effect_chance)}</Text>\r\n      </Stack>\r\n      <Stack\r\n        isInline\r\n        alignItems=\"baseline\"\r\n        justifyContent=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Power\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{power ? power : \"-\"}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            accuracy\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">\r\n            {accuracy ? `${accuracy}%` : \"-\"}\r\n          </Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"upperCase\" fontWeight=\"bold\">\r\n            pp\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{pp}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            priority\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{priority}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Category\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{dataClass}</Text>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MoveCard;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nimport AddMoves from \"../SearchMoves/AddMoves\";\r\nimport MoveCard from \"../SearchMoves/MoveCard\";\r\n\r\nconst SearchMoves = () => {\r\n  const [moves, setMoves] = useState([]);\r\n  return (\r\n    <Stack\r\n      spacing={7}\r\n      bg=\"white\"\r\n      rounded={30}\r\n      padding={{ base: 1, md: 10 }}\r\n      margin={{ base: 0, sm: 1, md: 4 }}\r\n    >\r\n      <Heading textAlign=\"center\">What move are you looking for?</Heading>\r\n      <AddMoves setMoves={setMoves} />\r\n      <SimpleGrid display={{ md: \"grid\" }} columns={2} gap={3}>\r\n        {moves.map((move, index) => (\r\n          <MoveCard move={move} key={index} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchMoves;\r\n","import React from \"react\";\r\nimport { Heading, Stack, Text } from \"@chakra-ui/react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Stack bg=\"blue.300\">\r\n      <Stack bg=\"red.600\">\r\n        <Heading textColor=\"white\" textAlign=\"center\" padding={3}>\r\n          Pokémon Type Calculator\r\n        </Heading>\r\n      </Stack>\r\n      <Stack borderBottom=\"3px solid\" padding={1}>\r\n        <Text textAlign=\"center\" color=\"white\">\r\n          Choose Types and Calculate Weaknesses\r\n        </Text>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Stack, Flex, Text, Badge, Heading } from \"@chakra-ui/react\";\r\nimport { getWeaknesses } from \"../../api/getWeaknesses\";\r\n\r\nconst ResultsCombination = ({ firstType, secondType }) => {\r\n  const values = [4, 2, 1, 0.5, 0.25, 0];\r\n  const [combination, setCombination] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (secondType === null) {\r\n      setCombination(getWeaknesses([firstType]));\r\n    } else {\r\n      setCombination(getWeaknesses([firstType, secondType]));\r\n    }\r\n  }, [firstType, secondType]);\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case 4:\r\n        return \"Very Weak x4\";\r\n      case 2:\r\n        return \"Weak x2\";\r\n      case 1:\r\n        return \"Normal x1\";\r\n      case 0.5:\r\n        return \"Not Effective x1/2\";\r\n      case 0.25:\r\n        return \"Strong Against x1/4\";\r\n      case 0:\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      spacing={5}\r\n      padding={{ base: 0, md: 3 }}\r\n      marginBottom={{ base: 2, md: 0 }}\r\n    >\r\n      <Heading textAlign=\"center\">Weaks Combination:</Heading>\r\n      <Stack isInline justify=\"center\" alignItems=\"baseline\">\r\n        <Flex\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          bg={firstType}\r\n          width={20}\r\n          rounded={9999}\r\n          height={20}\r\n        >\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            {firstType}\r\n          </Text>\r\n        </Flex>\r\n        {secondType && (\r\n          <>\r\n            <Flex justifyContent=\"center\">\r\n              <Text fontSize=\"2rem\" fontWeight=\"bold\">\r\n                +\r\n              </Text>\r\n            </Flex>\r\n            <Flex\r\n              align=\"center\"\r\n              justifyContent=\"center\"\r\n              width={20}\r\n              rounded={9999}\r\n              height={20}\r\n              bg={secondType}\r\n            >\r\n              <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                {secondType}\r\n              </Text>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Stack>\r\n      <Stack>\r\n        {values.map(\r\n          (value) =>\r\n            combination[value] && (\r\n              <Stack key={value} justifyItems=\"center\" alignItems=\"center\">\r\n                <Text textAlign=\"center\" fontWeight=\"bold\">\r\n                  {renderWeaks(value)}\r\n                </Text>\r\n                <Flex\r\n                  direction=\"row\"\r\n                  w=\"100%\"\r\n                  wrap=\"wrap\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  {combination[value].map((type) => (\r\n                    <Badge\r\n                      rounded={999}\r\n                      maxW=\"100px\"\r\n                      w=\"32%\"\r\n                      margin=\"8px\"\r\n                      textAlign=\"center\"\r\n                      key={type}\r\n                      bg={type}\r\n                    >\r\n                      <Text>{type}</Text>\r\n                    </Badge>\r\n                  ))}\r\n                </Flex>\r\n              </Stack>\r\n            )\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ResultsCombination;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Tag,\r\n  TagLabel,\r\n} from \"@chakra-ui/react\";\r\nimport ResultsCombination from \"./ResultsCombination\";\r\n\r\nconst CombinationContainer = () => {\r\n  const types = [\r\n    \"bug\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"electric\",\r\n    \"fairy\",\r\n    \"fighting\",\r\n    \"fire\",\r\n    \"flying\",\r\n    \"ghost\",\r\n    \"grass\",\r\n    \"ground\",\r\n    \"ice\",\r\n    \"normal\",\r\n    \"poison\",\r\n    \"psychic\",\r\n    \"rock\",\r\n    \"steel\",\r\n    \"water\",\r\n  ];\r\n\r\n  const [firstType, setFirstType] = useState(\"bug\");\r\n  const [secondType, setSecondType] = useState(null);\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      bg=\"gray.100\"\r\n      borderRadius={8}\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      margin={{ base: 3, md: 10 }}\r\n      padding={{ base: 0, md: 4 }}\r\n      spacing={40}\r\n      wrap=\"wrap\"\r\n    >\r\n      <Stack w={{ base: \"100%\", md: \"50%\" }} spacing={4}>\r\n        <Stack spacing={2} alignItems=\"center\">\r\n          <Heading textAlign=\"center\">Choose 1° Type</Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <Tag\r\n                bg={type}\r\n                cursor=\"pointer\"\r\n                key={type}\r\n                margin=\"8px\"\r\n                rounded={999}\r\n                maxW=\"100px\"\r\n                w=\"32%\"\r\n                onClick={() =>\r\n                  type !== secondType\r\n                    ? setFirstType(type)\r\n                    : (setSecondType(null), setFirstType(type))\r\n                }\r\n              >\r\n                <Image\r\n                  opacity={type !== firstType && \"0.2\"}\r\n                  maxWidth=\"100px\"\r\n                  width={4}\r\n                  src=\"../assets/ui/pokeball.svg\"\r\n                  ml={-1}\r\n                  mr={3}\r\n                />\r\n                <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                  {type}\r\n                </TagLabel>\r\n              </Tag>\r\n            ))}\r\n          </Flex>\r\n        </Stack>\r\n        <Stack spacing={2} alignItems=\"center\">\r\n          <Heading textAlign=\"center\">Choose 2° Type</Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <Tag\r\n                bg={type}\r\n                cursor=\"pointer\"\r\n                key={type}\r\n                margin=\"8px\"\r\n                rounded={999}\r\n                maxW=\"100px\"\r\n                w=\"32%\"\r\n                onClick={() =>\r\n                  type !== firstType ? setSecondType(type) : setSecondType(null)\r\n                }\r\n              >\r\n                <Image\r\n                  opacity={type !== secondType && \"0.2\"}\r\n                  maxWidth=\"100px\"\r\n                  width={4}\r\n                  src=\"../assets/ui/pokeball.svg\"\r\n                  ml={-1}\r\n                  mr={3}\r\n                />\r\n                <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                  {type}\r\n                </TagLabel>\r\n              </Tag>\r\n            ))}\r\n\r\n            <Tag\r\n              bg=\"grey\"\r\n              cursor=\"pointer\"\r\n              key=\"none\"\r\n              margin=\"8px\"\r\n              rounded={999}\r\n              maxW=\"100px\"\r\n              w=\"33%\"\r\n              onClick={() => setSecondType(null)}\r\n            >\r\n              <Image\r\n                opacity={null !== secondType && \"0.2\"}\r\n                maxWidth=\"100px\"\r\n                width={4}\r\n                src=\"../assets/ui/pokeball.svg\"\r\n                ml={-1}\r\n                mr={3}\r\n              />\r\n              <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                None\r\n              </TagLabel>\r\n            </Tag>\r\n          </Flex>\r\n        </Stack>\r\n      </Stack>\r\n      <Box\r\n        marginTop={{ base: \"4rem\", md: \"0px\" }}\r\n        w={{ base: \"100%\", md: \"50%\" }}\r\n      >\r\n        <ResultsCombination\r\n          w={{ base: \"100%\", md: \"50%\" }}\r\n          firstType={firstType}\r\n          secondType={secondType}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default CombinationContainer;\r\n","import React from \"react\";\r\nimport Header from \"../TypesCombination/Header\";\r\nimport CombinationContainer from \"../TypesCombination/CombinationContainer\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\nconst TypeCombinationPage = () => {\r\n  return (\r\n    <Box bg=\"#fff\" margin={{ base: 0, md: 4 }} rounded={20}>\r\n      <Header />\r\n      <CombinationContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TypeCombinationPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Stack, Image, Input, Text, Heading, Box } from \"@chakra-ui/react\";\r\n\r\nconst Quiz = ({ pokemon, nextPokemon }) => {\r\n  const [status, setStatus] = useState(\"GUESSING\");\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const name = inputName.replace(/ /g, \"-\").toLowerCase();\r\n    setCounter((c) => c + 1);\r\n    setStatus(name === pokemon.name ? \"SUCCESS\" : \"FAIL\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(\"GUESSING\");\r\n    setInputName(\"\");\r\n    setCounter(0);\r\n  }, [pokemon]);\r\n\r\n  return (\r\n    <Stack alignItems=\"center\">\r\n      <Image\r\n        width={350}\r\n        height={350}\r\n        alt=\"pokemon\"\r\n        draggable=\"false\"\r\n        style={{\r\n          imageRendering: \"pixelated\",\r\n          filter: `brightness(${status === \"SUCCESS\" ? 1 : 0})`,\r\n          transition: `${status === \"SUCCESS\" ? \"filter 0.7s\" : \"fliter 0s\"}`,\r\n        }}\r\n        src={pokemon.image}\r\n        className={status === \"SUCCESS\" && \"animate__animated animate__shakeX\"}\r\n      />\r\n      {status === \"SUCCESS\" ? (\r\n        <Stack>\r\n          <Heading textTransform=\"capitalize\" size=\"4xl\">\r\n            {pokemon.name}\r\n          </Heading>\r\n          <Text textAlign=\"center\">{counter} Attempts</Text>\r\n          <Box\r\n            as=\"button\"\r\n            p={2}\r\n            color=\"white\"\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"md\"\r\n            bgGradient=\"linear(to-r, teal.500,green.500)\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={nextPokemon}\r\n          >\r\n            Next Pokemon\r\n          </Box>\r\n        </Stack>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <Input\r\n            variant=\"filled\"\r\n            textAlign=\"center\"\r\n            placeholder=\"Write the answer\"\r\n            type=\"text\"\r\n            isInvalid={status === \"FAIL\"}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputName}\r\n            onChange={(event) => setInputName(event.target.value)}\r\n          />\r\n          {status === \"FAIL\" && <Text textAlign=\"center\">Wrong</Text>}\r\n        </form>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport { Button, Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nconst SelectLevel = ({ setMin, setMax }) => {\r\n  const pagesGenerations = [\r\n    { name: \"I\", min: 1, max: 151 },\r\n    { name: \"II\", min: 152, max: 251 },\r\n    { name: \"III\", min: 252, max: 386 },\r\n    { name: \"IV\", min: 387, max: 494 },\r\n    { name: \"V\", min: 495, max: 649 },\r\n    { name: \"VI\", min: 650, max: 721 },\r\n    { name: \"VII\", min: 722, max: 809 },\r\n    { name: \"VIII\", min: 810, max: 897 },\r\n  ];\r\n\r\n  return (\r\n    <Stack bg=\"gray.200\" margin={2} padding={4} rounded={22}>\r\n      <Heading\r\n        textAlign=\"center\"\r\n        fontWeight=\"extrabold\"\r\n        bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n      >\r\n        {\" \"}\r\n        Select Generation\r\n      </Heading>\r\n      <SimpleGrid\r\n        columns={3}\r\n        gap={3}\r\n        borderRadius={20}\r\n        bg=\"gray.200\"\r\n        padding={2}\r\n      >\r\n        {pagesGenerations.map(({ name, min, max }) => (\r\n          <Button\r\n            key={name}\r\n            size=\"md\"\r\n            bgGradient=\"linear-gradient(to-r, #3a7bd5, #3a6073);\"\r\n            color=\"white\"\r\n            _hover={{ bgGradient: \"linear(to-r, red.500, yellow.500)\" }}\r\n            onClick={() => {\r\n              setMin(min);\r\n              setMax(max);\r\n            }}\r\n          >\r\n            {name}\r\n          </Button>\r\n        ))}\r\n        <Button\r\n          bg=\"primary\"\r\n          color=\"white\"\r\n          _hover={{\r\n            bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n          }}\r\n          onClick={() => {\r\n            setMin(1);\r\n            setMax(897);\r\n          }}\r\n        >\r\n          All Gens\r\n        </Button>\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SelectLevel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Heading, Stack, Spinner } from \"@chakra-ui/react\";\r\nimport { useFetchGetPokemonID } from \"../../hooks/useFetchGetPokemonID\";\r\nimport Quiz from \"../PokemonQuiz/Quiz\";\r\nimport SelectLevel from \"../PokemonQuiz/SelectLevel\";\r\n\r\nconst PokemonQuiz = () => {\r\n  const getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const [min, setMin] = useState(1);\r\n  const [max, setMax] = useState(151);\r\n  const [random, setRandom] = useState(getRandomNumber(min, max));\r\n\r\n  const { pokemon, loading } = useFetchGetPokemonID(random);\r\n\r\n  useEffect(() => {\r\n    setRandom(getRandomNumber(min, max));\r\n  }, [min, max]);\r\n\r\n  return (\r\n    <Stack\r\n      bg=\"#fff\"\r\n      padding={4}\r\n      spacing={3}\r\n      margin={{ base: 0, md: 4 }}\r\n      rounded={{ base: 0, md: 12 }}\r\n    >\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        Who's that Pokémon?\r\n      </Heading>\r\n      {loading ? (\r\n        <Stack alignItems=\"center\">\r\n          <Spinner\r\n            thickness=\"4px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"blue.500\"\r\n            size=\"xl\"\r\n            textAlign=\"center\"\r\n          />\r\n        </Stack>\r\n      ) : (\r\n        <Quiz\r\n          pokemon={pokemon}\r\n          nextPokemon={() => setRandom(getRandomNumber(min, max))}\r\n        />\r\n      )}\r\n\r\n      <SelectLevel setMin={setMin} setMax={setMax} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonQuiz;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchGetPokemonID = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ pokemon: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ pokemon: null, loading: true });\r\n    api.miniData(id).then((pokeData) => {\r\n      if (isMounted.current)\r\n        setState({\r\n          pokemon: pokeData,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../components/UI/Navbar\";\r\nimport Footer from \"../components/UI/Footer\";\r\n\r\nimport Landing from \"../components/Pages/Landing\";\r\nimport Pokedex from \"../components/Pages/Pokedex\";\r\nimport SearchPokemons from \"../components/Pages/SearchPokemons\";\r\nimport SearchMoves from \"../components/Pages/SearchMoves\";\r\nimport TypeCombination from \"../components/Pages/TypeCombination\";\r\nimport { Grid } from \"@chakra-ui/react\";\r\nimport PokemonQuiz from \"../components/Pages/PokemonQuiz\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Grid\r\n        h=\"100vh\"\r\n        width=\"100vw\"\r\n        templateColumns=\"1fr\"\r\n        templateRows=\"auto 1fr auto\"\r\n      >\r\n        <Navbar />\r\n\r\n        <Grid\r\n          justifyItems=\"stretch\"\r\n          overflowY=\"auto\"\r\n          overflowX=\"hidden\"\r\n          backgroundImage={{\r\n            base: \"none\",\r\n            md: \"url(/assets/ui/background.png)\",\r\n          }}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/search\">\r\n              <SearchPokemons />\r\n            </Route>\r\n            <Route exact path=\"/quiz\">\r\n              <PokemonQuiz />\r\n            </Route>\r\n            <Route exact path=\"/moves\">\r\n              <SearchMoves />\r\n            </Route>\r\n            <Route exact path=\"/combination\">\r\n              <TypeCombination />\r\n            </Route>\r\n            <Route exact path=\"/pokedex\">\r\n              <Pokedex />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Landing />\r\n            </Route>\r\n          </Switch>\r\n        </Grid>\r\n        <Footer />\r\n      </Grid>\r\n    </Router>\r\n  );\r\n};\r\n","import { AppRouter } from \"./routers/AppRouter\";\r\n\r\nconst App = () => {\r\n  return <AppRouter />;\r\n};\r\n\r\nexport default App;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  colors: {\r\n    grass: \"#47CFAF\",\r\n    fire: \"#FB6D6C\",\r\n    water: \"#74BDFD\",\r\n    dragon: \"#8774FF\",\r\n    normal: \"#BDBDAE\",\r\n    bug: \"#C1D11F\",\r\n    poison: \"#AA5DA1\",\r\n    electric: \"#FEE63C\",\r\n    ground: \"#d3b54a\",\r\n    psychic: \"#F562B1\",\r\n    fighting: \"#B1746D\",\r\n    fairy: \"#FAADFF\",\r\n    rock: \"#CEBD72\",\r\n    ghost: \"#7A76D8\",\r\n    ice: \"#96F1FF\",\r\n    steel: \"#C4C2DB\",\r\n    flying: \"#7AA1FF\",\r\n    dark: \"#8A6653\",\r\n\r\n    primary: \"#ff0050\",\r\n    secondary: \"#2667ff\",\r\n  },\r\n  shadows: {\r\n    outline: \"0\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport \"./theme.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider resetCSS theme={theme}>\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}