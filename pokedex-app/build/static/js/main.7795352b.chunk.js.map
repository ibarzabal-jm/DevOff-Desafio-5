{"version":3,"sources":["components/UI/Navbar.js","components/UI/Copyright.js","components/UI/Footer.js","api/getMoveByName.js","data/dataTypeWeaknesses.js","api/getWeaknesses.js","api/getPokeInfoByID.js","components/PokemonDrawer/PokeInfoPanels/About.js","components/PokemonDrawer/PokeInfoPanels/BaseStats.js","components/PokemonDrawer/PokeInfoPanels/Description.js","components/PokemonDrawer/PokeInfoPanels/Moves.js","components/PokemonDrawer/PokeInfo.js","hooks/useFetchPokeInfo.js","components/PokemonDrawer/PokemonDrawer.js","components/PokemonThumbnail.js","api/settingsURL.js","api/getMiniDataByName.js","api/api.js","components/Pages/Pokedex.js","hooks/useFetchPokedex.js","components/SearchPokemon/AddPokemon.js","components/Pages/SearchPokemons.js","components/UI/NavButtons.js","components/Pages/Landing.js","components/Moves/AddMoves.js","components/Moves/MoveCard.js","components/Pages/SearchMoves.js","components/Combination/Header.js","components/Combination/ResultsCombination.js","components/Combination/CombinationContainer.js","components/Pages/TypeCombination.js","routers/AppRouter.js","App.js","theme.js","index.js"],"names":["Navbar","as","isInline","alignItems","height","justifyContent","base","md","bg","colorScheme","variant","ReachLink","to","spacing","mr","display","size","color","_hover","opacity","Copyright","textcolor","position","textAlign","textColor","onClick","window","open","Date","getFullYear","Footer","justify","paddingY","getMoveByName","moveName","a","moveURL","fetch","resp","json","accuracy","damage_class","name","priority","description","flavor_text_entries","effect_entries","effect_chance","pp","power","target","type","dataClass","filter","desc","language","version_group","flavor_text","effect","short_effect","dataTypeWeaknesses","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","getWeaknesses","types","weaknesses","length","data","reduce","combination","Object","entries","typeName","number","acc","key","value","push","concat","getPokeInfoByID","id","abilitiesData","abilities","moves","species","statsData","stats","weight","typesData","map","movesFilter","version_group_details","find","Promise","all","move","movesData","getSpeciesData","url","speciesData","ability","image","obj","item","stat","base_stat","totalStats","sum","eggsData","egg_groups","gender","gender_rate","genera","generation","hatch","hatch_counter","eggs","egg","gen","genus","version","About","male","female","width","textTransform","fontWeight","FaMars","w","h","FaVenus","BaseStats","renderWeaks","valueColor","title","max","weak","getWeaks","background","borderRadius","paddingX","marginX","getResist","Description","genDesc","index","align","Moves","rounded","PokeInfo","pokemon","useState","loading","state","setState","useEffect","then","pokeData","useFetchPokeInfo","_selected","borderBottom","thickness","speed","emptyColor","PokemonDrawer","onClose","isOpen","placement","overflowY","backgroundColor","padding","direction","fontSize","ArrowBack","cursor","FaHeart","toString","padStart","alignSelf","marginBottom","maxWidth","src","zIndex","className","marginTop","paddingTop","PokemonThumbnail","drawer","setDrawer","URL_POKEMON","getMiniDataPokemonByName","pokemonName","res","sprites","other","front_default","api","page","response","results","Pokedex","setPage","isMounted","useRef","pokemons","error","current","newPokemons","useFetchPokedex","margin","gap","columns","div","animate","custom","initial","variants","hidden","y","visible","transition","delay","border","AddPokemon","setPokemons","inputValue","setInputValue","setError","setLoading","handleSubmit","e","preventDefault","nameSearch","trim","toLowerCase","catch","onSubmit","children","Search","placeholder","isInvalid","errorBorderColor","onChange","propType","PropTypes","func","isRequired","SearchPokemonsPage","NavButtons","overflow","marginRight","Landing","SearchPokemons","AddMoves","setMoves","replace","console","log","MoveCard","alt","SearchMoves","minH","Header","ResultsCombination","firstType","secondType","setCombination","marginY","justifyItems","wrap","maxW","CombinationContainer","setFirstType","setSecondType","ml","TypeCombinationPage","AppRouter","exact","path","TypeCombination","App","extendTheme","colors","primary","secondary","shadows","outline","ReactDOM","render","StrictMode","resetCSS","theme","document","getElementById"],"mappings":"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","file":"static/js/main.7795352b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Stack } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Stack\r\n      as=\"nav\"\r\n      isInline\r\n      alignItems=\"center\"\r\n      height={12}\r\n      justifyContent={{ base: \"center\", md: \"space-between\" }}\r\n      bg=\"black\"\r\n    >\r\n      <Stack isInline>\r\n        <Button colorScheme=\"gray.50\" variant=\"solid\" as={ReachLink} to=\"/home\">\r\n          PokedexApp\r\n        </Button>\r\n      </Stack>\r\n\r\n      <Stack isInline spacing={2} mr={2} display={{ base: \"none\", md: \"flex\" }}>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"grass\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/okedex\"\r\n        >\r\n          Pokedex\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"poison\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/combination\"\r\n        >\r\n          Type Weaks\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"water\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/search\"\r\n        >\r\n          Search Pokemon\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Copyright = ({ textcolor, position }) => {\r\n  return (\r\n    <Text textAlign=\"center\" textColor=\"white\">\r\n      {\" PokdexApp  Copyright © \"}\r\n      <Link\r\n        to=\"/\"\r\n        onClick={() => window.open(`https://juanmaportfolio.netlify.app/`)}\r\n      >\r\n        Juan Manuel Ibarzabal Salles\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React from \"react\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Copyright from \"./Copyright\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Stack isInline textAlign=\"center\" justify=\"center\" bg=\"black\" paddingY={4}>\r\n      <Copyright />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const getMoveByName = async (moveName) => {\r\n  const moveURL = `https://pokeapi.co/api/v2/move/${moveName}`;\r\n\r\n  const resp = await fetch(moveURL);\r\n\r\n  const {\r\n    accuracy,\r\n    damage_class,\r\n    name,\r\n    priority,\r\n    flavor_text_entries: description,\r\n    effect_entries,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    target,\r\n    type,\r\n  } = await resp.json();\r\n\r\n  const dataClass = damage_class.name;\r\n\r\n  return {\r\n    accuracy,\r\n    dataClass,\r\n    name,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"x-y\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"sword\")\r\n    )[0]?.flavor_text,\r\n    effect: effect_entries[0].short_effect,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    priority,\r\n    target: target.name,\r\n    type: type.name,\r\n  };\r\n};\r\n","export const dataTypeWeaknesses = {\r\n  bug: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dark: {\r\n    bug: 2,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0.5,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dragon: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 2,\r\n    electric: 0.5,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  electric: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  fairy: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 0,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  fighting: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 2,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  fire: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 0.5,\r\n    water: 2,\r\n  },\r\n  flying: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  ghost: {\r\n    bug: 0.5,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 0,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  grass: {\r\n    bug: 2,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  ground: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 2,\r\n  },\r\n  ice: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  normal: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  poison: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 2,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  psychic: {\r\n    bug: 2,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0.5,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  rock: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 0.5,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 0.5,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 2,\r\n  },\r\n  steel: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 0.5,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 0.5,\r\n    poison: 0,\r\n    psychic: 0.5,\r\n    rock: 0.5,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  water: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 0.5,\r\n  },\r\n};\r\n","import { dataTypeWeaknesses as data } from \"../data/dataTypeWeaknesses\";\r\n\r\nexport const getWeaknesses = (types) => {\r\n  let weaknesses = {};\r\n\r\n  if (types.length === 1) {\r\n    weaknesses = data[types];\r\n  } else {\r\n    weaknesses = types.reduce((combination, type) => {\r\n      for (const [typeName, number] of Object.entries(data[type])) {\r\n        if (!combination[typeName]) {\r\n          combination[typeName] = 1;\r\n        }\r\n        combination[typeName] *= number;\r\n      }\r\n\r\n      return combination;\r\n    }, {});\r\n  }\r\n\r\n  //  Recibo\r\n  // weaknesses = {\r\n  //   bug: 1,\r\n  //   dragon: 1,\r\n  //   fire: 2,\r\n  //   water: 3,\r\n  // };\r\n\r\n  const invertido = Object.entries(weaknesses).reduce((acc, [key, value]) => {\r\n    if (acc[value]) {\r\n      acc[value].push(key);\r\n      return acc;\r\n    } else {\r\n      return { ...acc, [value]: [].concat(key) };\r\n    }\r\n  }, {});\r\n\r\n  return invertido;\r\n};\r\n","import { getMoveByName } from \"./getMoveByName\";\r\nimport { getWeaknesses } from \"./getWeaknesses\";\r\n\r\nexport const getPokeInfoByID = async (id) => {\r\n  const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n  const {\r\n    abilities: abilitiesData,\r\n    height,\r\n    moves,\r\n    name,\r\n    species,\r\n    stats: statsData,\r\n    types,\r\n    weight,\r\n  } = await resp.json();\r\n\r\n  const typesData = types.map(({ type }) => type.name);\r\n\r\n  const movesFilter = moves.filter(({ version_group_details }) =>\r\n    version_group_details.find(\r\n      ({ version_group }) => version_group.name === \"ultra-sun-ultra-moon\"\r\n    )\r\n  );\r\n\r\n  const movesData = await Promise.all(\r\n    movesFilter.map(({ move }) => getMoveByName(move.name))\r\n  );\r\n\r\n  const speciesData = await getSpeciesData(species.url);\r\n\r\n  return {\r\n    ...speciesData,\r\n    abilities: abilitiesData.map(({ ability }) => ability.name),\r\n    height: height / 10,\r\n    id,\r\n    image: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\r\n    moves: movesData,\r\n    name,\r\n    stats: statsData.reduce(\r\n      (obj, item) => ({ ...obj, [item.stat.name]: item.base_stat }),\r\n      {}\r\n    ),\r\n    totalStats: statsData.reduce((sum, value) => sum + value.base_stat, 0),\r\n    types: typesData,\r\n    weaknesses: getWeaknesses(typesData),\r\n    weight: weight / 10,\r\n  };\r\n};\r\n\r\nconst getSpeciesData = async (url) => {\r\n  const resp = await fetch(url);\r\n  const {\r\n    egg_groups: eggsData,\r\n    gender_rate: gender,\r\n    genera,\r\n    generation,\r\n    flavor_text_entries: description,\r\n    hatch_counter: hatch,\r\n  } = await resp.json();\r\n\r\n  return {\r\n    eggs: eggsData.map((egg) => egg.name),\r\n    gen: generation.name,\r\n    gender,\r\n    genera: genera.find((genus) => genus.language.name === \"en\").genus,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" && desc.version.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"sword\")\r\n    ),\r\n    hatch,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Text, Stack, Heading, Box, Icon } from \"@chakra-ui/react\";\r\nimport { FaVenus, FaMars } from \"react-icons/fa\";\r\n\r\nconst About = ({\r\n  abilities,\r\n  eggs,\r\n  gen,\r\n  genera,\r\n  gender,\r\n  hatch,\r\n  height,\r\n  weight,\r\n}) => {\r\n  const male = ((8 - gender) * 100) / 8;\r\n  const female = (gender * 100) / 8;\r\n\r\n  return (\r\n    <Stack spacing={3}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Species\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {genera}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Height\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {` ${height} m`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              weight\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {`${weight} kg`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              abilities\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {abilities.map((ability) => `${ability} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              first appearance\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gen}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\">Breeding</Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Gender\r\n            </Text>\r\n            <Stack\r\n              as=\"td\"\r\n              isInline\r\n              paddingY={1}\r\n              spacing={2}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gender < 0 ? (\r\n                <Text>Null</Text>\r\n              ) : (\r\n                <>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaMars} color=\"blue.500\" w={6} h={6} />\r\n                    <Text>{male}%</Text>\r\n                  </Stack>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaVenus} color=\"pink.500\" w={6} h={6} />\r\n                    <Text>{female}%</Text>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Stack>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Egg Groups\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {eggs.map((egg) => `${egg} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Hatch counter\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {`${(hatch + 1) * 255} steps`}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Text, Progress, Stack, Heading, Box, Badge } from \"@chakra-ui/react\";\r\n\r\nconst BaseStats = ({ stats, weaknesses, totalStats }) => {\r\n  const getWeaks = (weaknesses) => {\r\n    const weaks = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak > 1\r\n    );\r\n    return weaks;\r\n  };\r\n\r\n  const getResist = (weaknesses) => {\r\n    const resist = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak < 1\r\n    );\r\n    return resist;\r\n  };\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case \"4\":\r\n        return \"Very Weak x4\";\r\n      case \"2\":\r\n        return \"Weak x2\";\r\n      case \"0.5\":\r\n        return \"Not Effective x1/2\";\r\n      case \"0.25\":\r\n        return \"Strong Against x1/4\";\r\n      case \"0\":\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  const valueColor = (value) => {\r\n    if (value <= 50) {\r\n      return \"red\";\r\n    } else {\r\n      if (value <= 100) {\r\n        return \"yellow\";\r\n      } else {\r\n        return \"green\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          {Object.entries(stats).map(([title, value]) => (\r\n            <tr key={title}>\r\n              <Text\r\n                as=\"td\"\r\n                color=\"gray.500\"\r\n                paddingY={1}\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n              >\r\n                {title}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={1} width=\"15%\">\r\n                {value}\r\n              </Text>\r\n              <Box as=\"td\" paddingY={1} width=\"45%\">\r\n                <Progress\r\n                  colorScheme={valueColor(value)}\r\n                  size=\"xs\"\r\n                  value={value}\r\n                  max={200}\r\n                />\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Total\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"15%\">\r\n              {totalStats}\r\n            </Text>\r\n            <Box as=\"td\" paddingY={1} width=\"45%\">\r\n              <Progress\r\n                colorScheme={totalStats >= 400 ? \"green\" : \"red\"}\r\n                size=\"xs\"\r\n                value={totalStats}\r\n                max={750}\r\n              />\r\n            </Box>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\">Weaknesses</Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getWeaks(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n\r\n      <Heading size=\"md\">Resistance</Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getResist(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default BaseStats;\r\n","import React from \"react\";\r\nimport { Text, Stack, Table, Tbody, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Description = ({ description }) => {\r\n  return (\r\n    <Stack>\r\n      <Table variant=\"striped\" colorScheme=\"gray\" width=\"100%\">\r\n        <Tbody>\r\n          {description.map((genDesc, index) => (\r\n            <Tr key={index}>\r\n              <Text\r\n                as=\"td\"\r\n                paddingY={4}\r\n                align=\"center\"\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n                fontWeight=\"bold\"\r\n              >\r\n                {genDesc.version.name}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={4} align=\"justify\">\r\n                {genDesc.flavor_text}\r\n              </Text>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { Badge, Box, Table, Tbody, Text, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Moves = ({ moves }) => {\r\n  return (\r\n    <Table variant=\"striped\" colorScheme=\"gray\">\r\n      <thead align=\"center\">\r\n        <tr>\r\n          <th>name</th>\r\n          <th>power</th>\r\n          <th>type</th>\r\n          <th>accuracy</th>\r\n          <th>class</th>\r\n        </tr>\r\n      </thead>\r\n      <Tbody>\r\n        {moves.map((move) => (\r\n          <Tr key={move.name}>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.name}\r\n            </Text>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.power ? move.power : `-`}\r\n            </Text>\r\n            <Box as=\"td\" align=\"center\" justifyContent=\"center\">\r\n              <Badge bg={move.type} rounded={999} textAlign=\"center\">\r\n                {move.type}\r\n              </Badge>\r\n            </Box>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.accuracy ? move.accuracy : `-`}\r\n            </Text>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.dataClass}\r\n            </Text>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Moves;\r\n","import React from \"react\";\r\nimport {\r\n  TabList,\r\n  Tabs,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useFetchPokeInfo } from \"../../hooks/useFetchPokeInfo\";\r\n\r\nimport About from \"./PokeInfoPanels/About\";\r\nimport BaseStats from \"./PokeInfoPanels/BaseStats\";\r\nimport Description from \"./PokeInfoPanels/Description\";\r\nimport Moves from \"./PokeInfoPanels/Moves\";\r\n\r\nconst PokeInfo = ({ pokemon: { types, id } }) => {\r\n  const { data, loading } = useFetchPokeInfo(id);\r\n\r\n  return (\r\n    <Tabs variant=\"unstyled\" align=\"center\">\r\n      <TabList>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          About\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Base Stats\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Description\r\n        </Tab>\r\n\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Moves\r\n        </Tab>\r\n      </TabList>\r\n      {loading ? (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color={types[0]}\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <TabPanels align=\"start\" paddingX={0}>\r\n          <TabPanel>\r\n            <About\r\n              abilities={data.abilities}\r\n              eggs={data.eggs}\r\n              gen={data.gen}\r\n              genera={data.genera}\r\n              gender={data.gender}\r\n              hatch={data.hatch}\r\n              height={data.height}\r\n              weaknesses={data.weaknesses}\r\n              weight={data.weight}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <BaseStats\r\n              stats={data.stats}\r\n              totalStats={data.totalStats}\r\n              weaknesses={data.weaknesses}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Description description={data.description} />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            {data.moves.length > 0 ? (\r\n              <Moves moves={data.moves} />\r\n            ) : (\r\n              <Text color=\"crimson\" align=\"center\">\r\n                No data from PokeApi\r\n              </Text>\r\n            )}\r\n          </TabPanel>\r\n        </TabPanels>\r\n      )}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PokeInfo;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getPokeInfoByID } from \"../api/getPokeInfoByID\";\r\n\r\nexport const useFetchPokeInfo = (id) => {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    getPokeInfoByID(id).then((pokeData) =>\r\n      setState({\r\n        data: pokeData,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Text,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport PokeInfo from \"./PokeInfo\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\nconst PokemonDrawer = ({ onClose, pokemon }) => {\r\n  return (\r\n    <Drawer isOpen placement=\"right\" onClose={onClose} size=\"lg\">\r\n      <DrawerOverlay>\r\n        <DrawerContent overflowY=\"auto\">\r\n          <Stack\r\n            backgroundColor={`${pokemon.types[0]}`}\r\n            color=\"white\"\r\n            padding={6}\r\n            spacing={6}\r\n          >\r\n            <Stack direction=\"row\" fontSize=\"2xl\" justify=\"space-between\">\r\n              <ArrowBackIcon onClick={onClose} cursor=\"pointer\" />\r\n              <Icon as={FaHeart} w={6} h={6} />\r\n            </Stack>\r\n            <Stack direction=\"row\" color=\"white\">\r\n              <Stack width=\"100%\">\r\n                <Stack direction=\"row\" align=\"baseline\" justify=\"space-between\">\r\n                  <Heading textTransform=\"capitalize\">{pokemon.name}</Heading>\r\n                  <Text fontWeight={600}>\r\n                    #{pokemon.id.toString().padStart(3, \"0\")}\r\n                  </Text>\r\n                </Stack>\r\n                <Stack direction=\"row\">\r\n                  {pokemon.types.map((type) => (\r\n                    <Text\r\n                      key={type}\r\n                      paddingX={2}\r\n                      paddingY={1}\r\n                      backgroundColor=\"rgba(255,255,255,0.2)\"\r\n                      borderRadius={9999}\r\n                      width=\"fit-content\"\r\n                      textTransform=\"capitalize\"\r\n                    >\r\n                      {type}\r\n                    </Text>\r\n                  ))}\r\n                </Stack>\r\n\r\n                <Image\r\n                  alignSelf=\"center\"\r\n                  height={256}\r\n                  marginBottom={-3}\r\n                  maxWidth={256}\r\n                  src={pokemon.image}\r\n                  width=\"100%\"\r\n                  zIndex={20}\r\n                  className=\"animate__animated animate__shakeX\"\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            backgroundColor=\"white\"\r\n            borderRadius={24}\r\n            marginTop={-16}\r\n            padding={6}\r\n            paddingTop={12}\r\n            zIndex={10}\r\n          >\r\n            <PokeInfo pokemon={pokemon} />\r\n          </Stack>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PokemonDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, Stack, Text, Image } from \"@chakra-ui/react\";\r\nimport PokemonDrawer from \"./PokemonDrawer/PokemonDrawer\";\r\n\r\nconst PokemonThumbnail = ({ pokemon }) => {\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  return (\r\n    <Stack\r\n      color=\"white\"\r\n      backgroundColor={`${pokemon.types[0]}`}\r\n      borderRadius={12}\r\n      padding={3}\r\n      onClick={() => setDrawer(true)}\r\n      cursor=\"pointer\"\r\n    >\r\n      <Stack direction=\"row\" align=\"baseline\" justifyContent=\"space-between\">\r\n        <Heading textTransform=\"capitalize\" fontSize=\"lg\">\r\n          {pokemon.name}\r\n        </Heading>\r\n        <Text>#{pokemon.id.toString().padStart(3, \"0\")}</Text>\r\n      </Stack>\r\n      <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Stack>\r\n          {pokemon.types.map((type) => (\r\n            <Text\r\n              key={type}\r\n              paddingX={2}\r\n              paddingY={1}\r\n              backgroundColor=\"rgba(255,255,255,0.2)\"\r\n              borderRadius={9999}\r\n              width=\"fit-content\"\r\n            >\r\n              {type}\r\n            </Text>\r\n          ))}\r\n        </Stack>\r\n        <Image maxWidth=\"100px\" width={20} src={pokemon.image}></Image>\r\n      </Stack>\r\n      {drawer && (\r\n        <PokemonDrawer pokemon={pokemon} onClose={() => setDrawer(false)} />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonThumbnail;\r\n","export const URL_POKEMON = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\nexport const PAGE_SIZE = 10;\r\n","import { URL_POKEMON } from \"./settingsURL\";\r\n\r\nexport const getMiniDataPokemonByName = async (pokemonName) => {\r\n  let url = `${URL_POKEMON}/${pokemonName}`;\r\n\r\n  return await fetch(url)\r\n    .then((res) => res.json())\r\n    .then(({ id, types, sprites, name }) => {\r\n      return {\r\n        name,\r\n        image:\r\n          sprites.other[\"official-artwork\"].front_default == null\r\n            ? sprites.front_default\r\n            : sprites.other[\"official-artwork\"].front_default,\r\n        id,\r\n        types: types.map(({ type }) => type.name),\r\n      };\r\n    });\r\n};\r\n","import { URL_POKEMON, PAGE_SIZE } from \"./settingsURL\";\r\nimport { getMiniDataPokemonByID } from \"./getMiniDataPokemonByID\";\r\nimport { getPokeInfoByID } from \"./getPokeInfoByID\";\r\nimport { getMiniDataPokemonByName } from \"./getMiniDataByName\";\r\n\r\nexport const api = {\r\n  list: (page) => {\r\n    return fetch(\r\n      `${URL_POKEMON}/?offset=${PAGE_SIZE * page}}&limit=${PAGE_SIZE}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) =>\r\n        Promise.all(\r\n          response.results.map((pokemon) =>\r\n            getMiniDataPokemonByName(pokemon.name)\r\n          )\r\n        )\r\n      );\r\n  },\r\n  miniDataByName: (name) => {\r\n    return getMiniDataPokemonByName(name);\r\n  },\r\n  miniData: (id) => {\r\n    return getMiniDataPokemonByID(id);\r\n  },\r\n  fullData: (id) => {\r\n    return getPokeInfoByID(id);\r\n  },\r\n};\r\n\r\n/* list: (page) => {\r\n  return Promise.all(\r\n    new Array(PAGE_SIZE + 1)\r\n      .fill(true)\r\n      .map((_, index) => index)\r\n      .slice(1)\r\n      .map((id) => getMiniDataPokemonByID(PAGE_SIZE * page + id))\r\n  );\r\n}, */\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SimpleGrid, Heading, Stack, Button, Spinner } from \"@chakra-ui/react\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport { useFetchPokedex } from \"../../hooks/useFetchPokedex\";\r\n\r\nconst Pokedex = () => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const pagesGenerations = [\r\n    { name: \"I\", page: 0 },\r\n    { name: \"II\", page: 15 },\r\n    { name: \"III\", page: 25 },\r\n    { name: \"IV\", page: 38 },\r\n    { name: \"V\", page: 49 },\r\n    { name: \"VI\", page: 65 },\r\n    { name: \"VII\", page: 72 },\r\n    { name: \"VIII\", page: 81 },\r\n    // { name: \"Variants\", page: 89 },\r\n    // { name: \"Megas\", page: 93 },\r\n    // { name: \"Gmax\", page: 108 },\r\n  ];\r\n\r\n  const { pokemons, loading } = useFetchPokedex(page);\r\n\r\n  return (\r\n    <Stack padding={5} bg=\"gray.200\" rounded={20} margin={10}>\r\n      <Heading fontSize=\"4xl\" alignSelf=\"flex-start\">\r\n        Pokedex\r\n      </Heading>\r\n\r\n      {loading ? (\r\n        <Spinner\r\n          alignSelf=\"center\"\r\n          thickness=\"4px\"\r\n          speed=\"0.5s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <SimpleGrid gap={3} columns={2}>\r\n          {pokemons?.map((pokemon, index) => (\r\n            <motion.div\r\n              animate=\"visible\"\r\n              key={pokemon.name}\r\n              custom={index}\r\n              initial=\"hidden\"\r\n              variants={{\r\n                hidden: { opacity: 0, y: 150 },\r\n                visible: (index) => ({\r\n                  opacity: 1,\r\n                  y: 0,\r\n                  transition: {\r\n                    delay: index * 0.05,\r\n                  },\r\n                }),\r\n              }}\r\n            >\r\n              <PokemonThumbnail pokemon={pokemon} />\r\n            </motion.div>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n      <Stack isInline justify=\"center\" alignItems=\"center\">\r\n        {page > 0 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{ color: \"black\", background: \"white\", border: \"1px\" }}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Prev Page\r\n          </Button>\r\n        )}\r\n        {pagesGenerations.map(({ name, page }) => (\r\n          <Button key={name} size=\"sm\" onClick={() => setPage(page)}>\r\n            {name}\r\n          </Button>\r\n        ))}\r\n        {page < 111 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{ color: \"black\", background: \"white\", border: \"1px\" }}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchPokedex = (page) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({\r\n    pokemons: [],\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ pokemons: [], loading: true, error: null });\r\n    api.list(page).then((newPokemons) =>\r\n      setState({\r\n        pokemons: newPokemons,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [page]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { api } from \"../../api/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddPokemon = ({ setPokemons }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const nameSearch = inputValue;\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      await api\r\n        .miniDataByName(inputValue.toLowerCase())\r\n        .then((pokemon) => {\r\n          setLoading(false);\r\n          setPokemons((pokemons) => [pokemon, ...pokemons]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${nameSearch} not found`);\r\n        });\r\n    } else {\r\n      setError(\"Pokemon name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Pokémon\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAddPokemon.propType = {\r\n  setPokemons: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\nimport { AddPokemon } from \"../SearchPokemon/AddPokemon\";\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\n\r\nconst SearchPokemonsPage = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  return (\r\n    <Stack spacing={4} padding={10}>\r\n      <Heading textAlign=\"center\">What Pokemon are you looking for?</Heading>\r\n      <AddPokemon setPokemons={setPokemons} />\r\n      {pokemons.length > 0 && (\r\n        <SimpleGrid\r\n          columns={2}\r\n          gap={3}\r\n          borderRadius={20}\r\n          bg=\"gray.200\"\r\n          padding={2}\r\n        >\r\n          {pokemons.map((pokemon) => (\r\n            <PokemonThumbnail pokemon={pokemon} />\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchPokemonsPage;\r\n","import React from \"react\";\r\nimport { Stack, SimpleGrid, Text, Image } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst NavButtons = () => {\r\n  return (\r\n    <SimpleGrid gap={3} columns={2} padding={3} margin={10}>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"grass\"\r\n        borderRadius={20}\r\n        height={16}\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        overflow=\"hidden\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/pokedex\"\r\n      >\r\n        <Text color=\"white\">Pokédex</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"fire\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        borderRadius={20}\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/moves\"\r\n      >\r\n        <Text color=\"white\">Moves</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"water\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        borderRadius={20}\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/search\"\r\n      >\r\n        <Text color=\"white\">Search Pokemon</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity=\"0.2\"\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"poison\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        borderRadius={20}\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        as={ReachLink}\r\n        to=\"/combination\"\r\n      >\r\n        <Text color=\"white\">Types Weaks</Text>\r\n        <Image\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport SearchPokemons from \"./SearchPokemons\";\r\nimport NavButtons from \"../UI/NavButtons\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <>\r\n      <SearchPokemons />\r\n      <NavButtons />\r\n      <Pokedex />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { getMoveByName } from \"../../api/getMoveByName\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddMoves = ({ setMoves }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    const moveName = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n    console.log(moveName);\r\n\r\n    if (moveName.length > 2) {\r\n      await getMoveByName(moveName)\r\n        .then((move) => {\r\n          setLoading(false);\r\n          setMoves((moves) => [move, ...moves]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${inputValue} not found.`);\r\n        });\r\n    } else {\r\n      setError(\"Move name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Move (example: Ember, Thunder, Rain-Dance, Swords-Dance etc)\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMoves;\r\n\r\nAddMoves.propType = {\r\n  setMoves: PropTypes.func.isRequired,\r\n};\r\n","import { Heading, Image, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst MoveCard = ({ move }) => {\r\n  const {\r\n    accuracy,\r\n    dataClass,\r\n    description,\r\n    name,\r\n    pp,\r\n    power,\r\n    priority,\r\n    effect_chance,\r\n    effect,\r\n    type,\r\n  } = move;\r\n  return (\r\n    <Stack bg={type} borderRadius={12} padding={3} spacing={6}>\r\n      <Stack isInline justify=\"space-between\" alignItems=\"center\">\r\n        <Heading color=\"white\" textTransform=\"capitalize\" fontSize=\"xl\">\r\n          {name}\r\n        </Heading>\r\n        <Stack isInline>\r\n          <Image\r\n            width={7}\r\n            alt={dataClass}\r\n            filter=\"brightness(0) invert(1)\"\r\n            src={`./assets/moveClass/${dataClass}.png`}\r\n          ></Image>\r\n          <Image\r\n            width={7}\r\n            alt={type}\r\n            src={`./assets/pokemonTypes/${type}.png`}\r\n          ></Image>\r\n        </Stack>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Description:\r\n        </Heading>\r\n        <Text>{description}</Text>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Effect:\r\n        </Heading>\r\n        <Text>{effect.replace(\"$effect_chance\", effect_chance)}</Text>\r\n      </Stack>\r\n      <Stack\r\n        isInline\r\n        alignItems=\"baseline\"\r\n        justifyContent=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Power\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{power ? power : \"-\"}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            accuracy\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">\r\n            {accuracy ? `${accuracy}%` : \"-\"}\r\n          </Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"upperCase\" fontWeight=\"bold\">\r\n            {\" \"}\r\n            pp\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{pp}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            priority\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{priority}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Category\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{dataClass}</Text>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MoveCard;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nimport AddMoves from \"../Moves/AddMoves\";\r\nimport MoveCard from \"../Moves/MoveCard\";\r\n\r\nconst SearchMoves = () => {\r\n  const [moves, setMoves] = useState([]);\r\n  return (\r\n    <Stack spacing={7} padding={10} bg=\"gray.200\" rounded={30} minH=\"50vh\">\r\n      <Heading textAlign=\"center\">What move are you looking for?</Heading>\r\n      <AddMoves setMoves={setMoves} />\r\n      <SimpleGrid columns={2} gap={3}>\r\n        {moves.map((move, index) => (\r\n          <MoveCard move={move} key={index} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchMoves;\r\n","import React from \"react\";\r\nimport { Heading, Stack, Text } from \"@chakra-ui/react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Stack bg=\"blue.300\">\r\n      <Stack bg=\"red.600\">\r\n        <Heading textColor=\"white\" textAlign=\"center\" padding={3}>\r\n          Pokémon Type Calculator\r\n        </Heading>\r\n      </Stack>\r\n      <Stack borderBottom=\"3px solid\" padding={1}>\r\n        <Text textAlign=\"center\" color=\"white\">\r\n          Choose Types and Calculate Weaknesses\r\n        </Text>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Stack, Flex, Text, Badge, Heading } from \"@chakra-ui/react\";\r\nimport { getWeaknesses } from \"../../api/getWeaknesses\";\r\n\r\nconst ResultsCombination = ({ firstType, secondType }) => {\r\n  const values = [4, 2, 1, 0.5, 0.25, 0];\r\n  const [combination, setCombination] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (secondType === null) {\r\n      setCombination(getWeaknesses([firstType]));\r\n    } else {\r\n      setCombination(getWeaknesses([firstType, secondType]));\r\n    }\r\n  }, [firstType, secondType]);\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case 4:\r\n        return \"Very Weak x4\";\r\n      case 2:\r\n        return \"Weak x2\";\r\n      case 1:\r\n        return \"Normal x1\";\r\n      case 0.5:\r\n        return \"Not Effective x1/2\";\r\n      case 0.25:\r\n        return \"Strong Against x1/4\";\r\n      case 0:\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={10}>\r\n      <Heading textAlign=\"center\">Weaks Combination:</Heading>\r\n      <Stack isInline justify=\"center\" alignItems=\"baseline\">\r\n        <Flex\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          bg={firstType}\r\n          width={20}\r\n          rounded={9999}\r\n          height={20}\r\n        >\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            {firstType}\r\n          </Text>\r\n        </Flex>\r\n        {secondType && (\r\n          <>\r\n            <Flex justifyContent=\"center\">\r\n              <Text fontSize=\"2rem\" fontWeight=\"bold\">\r\n                +\r\n              </Text>\r\n            </Flex>\r\n            <Flex\r\n              align=\"center\"\r\n              justifyContent=\"center\"\r\n              width={20}\r\n              rounded={9999}\r\n              height={20}\r\n              bg={secondType}\r\n            >\r\n              <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                {secondType}\r\n              </Text>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Stack>\r\n      <Stack spacing={4} marginY={2}>\r\n        {values.map(\r\n          (value) =>\r\n            combination[value] && (\r\n              <Stack\r\n                key={value}\r\n                marginY={3}\r\n                justifyItems=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Text textAlign=\"center\" fontWeight=\"bold\">\r\n                  {renderWeaks(value)}\r\n                </Text>\r\n                <Flex\r\n                  direction=\"row\"\r\n                  w=\"400px\"\r\n                  wrap=\"wrap\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  {combination[value].map((type) => (\r\n                    <Badge\r\n                      rounded={999}\r\n                      maxW=\"100px\"\r\n                      w=\"33%\"\r\n                      margin=\"8px\"\r\n                      textAlign=\"center\"\r\n                      key={type}\r\n                      bg={type}\r\n                    >\r\n                      <Text>{type}</Text>\r\n                    </Badge>\r\n                  ))}\r\n                </Flex>\r\n              </Stack>\r\n            )\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ResultsCombination;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Tag,\r\n  TagLabel,\r\n} from \"@chakra-ui/react\";\r\nimport ResultsCombination from \"./ResultsCombination\";\r\n\r\nconst CombinationContainer = () => {\r\n  const types = [\r\n    \"bug\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"electric\",\r\n    \"fairy\",\r\n    \"fighting\",\r\n    \"fire\",\r\n    \"flying\",\r\n    \"ghost\",\r\n    \"grass\",\r\n    \"ground\",\r\n    \"ice\",\r\n    \"normal\",\r\n    \"poison\",\r\n    \"psychic\",\r\n    \"rock\",\r\n    \"steel\",\r\n    \"water\",\r\n  ];\r\n\r\n  const [firstType, setFirstType] = useState(\"bug\");\r\n  const [secondType, setSecondType] = useState(null);\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      bg=\"gray.100\"\r\n      borderRadius={8}\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      margin={3}\r\n      padding={4}\r\n      wrap=\"wrap\"\r\n    >\r\n      <Stack w={{ base: \"100%\", md: \"50%\" }} spacing={10}>\r\n        <Stack paddingX={2} spacing={3} alignItems=\"center\">\r\n          <Heading textAlign=\"center\">Choose 1° Type</Heading>\r\n          <Flex direction=\"row\" w=\"400px\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <Tag\r\n                bg={type}\r\n                cursor=\"pointer\"\r\n                key={type}\r\n                margin=\"8px\"\r\n                rounded={999}\r\n                maxW=\"100px\"\r\n                w=\"33%\"\r\n                onClick={() =>\r\n                  type !== secondType\r\n                    ? setFirstType(type)\r\n                    : (setSecondType(null), setFirstType(type))\r\n                }\r\n              >\r\n                <Image\r\n                  opacity={type !== firstType && \"0.2\"}\r\n                  maxWidth=\"100px\"\r\n                  width={4}\r\n                  src=\"../assets/ui/pokeball.svg\"\r\n                  ml={-1}\r\n                  mr={3}\r\n                />\r\n                <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                  {type}\r\n                </TagLabel>\r\n              </Tag>\r\n            ))}\r\n          </Flex>\r\n        </Stack>\r\n        <Stack paddingX={2} spacing={3} alignItems=\"center\">\r\n          <Heading textAlign=\"center\">Choose 2° Type</Heading>\r\n          <Flex direction=\"row\" w=\"400px\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <Tag\r\n                bg={type}\r\n                cursor=\"pointer\"\r\n                key={type}\r\n                margin=\"8px\"\r\n                rounded={999}\r\n                maxW=\"100px\"\r\n                w=\"33%\"\r\n                onClick={() =>\r\n                  type !== firstType ? setSecondType(type) : setSecondType(null)\r\n                }\r\n              >\r\n                <Image\r\n                  opacity={type !== secondType && \"0.2\"}\r\n                  maxWidth=\"100px\"\r\n                  width={4}\r\n                  src=\"../assets/ui/pokeball.svg\"\r\n                  ml={-1}\r\n                  mr={3}\r\n                />\r\n                <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                  {type}\r\n                </TagLabel>\r\n              </Tag>\r\n            ))}\r\n\r\n            <Tag\r\n              bg=\"grey\"\r\n              cursor=\"pointer\"\r\n              key=\"none\"\r\n              margin=\"8px\"\r\n              rounded={999}\r\n              maxW=\"100px\"\r\n              w=\"33%\"\r\n              onClick={() => setSecondType(null)}\r\n            >\r\n              <Image\r\n                opacity={null !== secondType && \"0.2\"}\r\n                maxWidth=\"100px\"\r\n                width={4}\r\n                src=\"../assets/ui/pokeball.svg\"\r\n                ml={-1}\r\n                mr={3}\r\n              />\r\n              <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n                None\r\n              </TagLabel>\r\n            </Tag>\r\n          </Flex>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <Box\r\n        marginTop={{ base: \"4rem\", md: \"0px\" }}\r\n        w={{ base: \"100%\", md: \"50%\" }}\r\n      >\r\n        <ResultsCombination\r\n          w={{ base: \"100%\", md: \"50%\" }}\r\n          firstType={firstType}\r\n          secondType={secondType}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default CombinationContainer;\r\n","import React from \"react\";\r\nimport Header from \"../Combination/Header\";\r\nimport CombinationContainer from \"../Combination/CombinationContainer\";\r\n\r\nconst TypeCombinationPage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <CombinationContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypeCombinationPage;\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../components/UI/Navbar\";\r\nimport Footer from \"../components/UI/Footer\";\r\n\r\nimport Landing from \"../components/Pages/Landing\";\r\nimport Pokedex from \"../components/Pages/Pokedex\";\r\nimport SearchPokemons from \"../components/Pages/SearchPokemons\";\r\nimport SearchMoves from \"../components/Pages/SearchMoves\";\r\nimport TypeCombination from \"../components/Pages/TypeCombination\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/search\">\r\n            <SearchPokemons />\r\n          </Route>\r\n          <Route exact path=\"/moves\">\r\n            <SearchMoves />\r\n          </Route>\r\n          <Route exact path=\"/combination\">\r\n            <TypeCombination />\r\n          </Route>\r\n          <Route exact path=\"/pokedex\">\r\n            <Pokedex />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Landing />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { AppRouter } from \"./routers/AppRouter\";\r\n\r\nconst App = () => {\r\n  return <AppRouter />;\r\n};\r\n\r\nexport default App;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  colors: {\r\n    grass: \"#47CFAF\",\r\n    fire: \"#FB6D6C\",\r\n    water: \"#74BDFD\",\r\n    dragon: \"#8774FF\",\r\n    normal: \"#BDBDAE\",\r\n    bug: \"#C1D11F\",\r\n    poison: \"#AA5DA1\",\r\n    electric: \"#FEE63C\",\r\n    ground: \"#d3b54a\",\r\n    psychic: \"#F562B1\",\r\n    fighting: \"#A75545\",\r\n    fairy: \"#FAADFF\",\r\n    rock: \"#CEBD72\",\r\n    ghost: \"#7A76D8\",\r\n    ice: \"#96F1FF\",\r\n    steel: \"#C4C2DB\",\r\n    flying: \"#7AA1FF\",\r\n    dark: \"#8A6653\",\r\n\r\n    primary: \"#ff0050\",\r\n    secondary: \"#2667ff\",\r\n  },\r\n  shadows: {\r\n    outline: \"0\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider resetCSS theme={theme}>\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}