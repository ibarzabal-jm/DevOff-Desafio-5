{"version":3,"sources":["api/getMoveByName.js","data/dataTypeWeaknesses.js","api/getWeaknesses.js","api/getPokeInfoByID.js","components/PokemonDrawer/PokeInfoPanels/About.js","components/PokemonDrawer/PokeInfoPanels/BaseStats.js","components/PokemonDrawer/PokeInfoPanels/Description.js","components/PokemonDrawer/PokeInfoPanels/Moves.js","components/PokemonDrawer/PokeInfo.js","hooks/useFetchPokeInfo.js","components/PokemonDrawer/PokemonDrawer.js","components/PokemonThumbnail.js","api/settingsURL.js","api/getMiniData.js","api/api.js","components/UI/GoHomeButton.js","components/Pages/Pokedex.js","hooks/useFetchPokedex.js","components/SearchPokemon/AddPokemon.js","components/Pages/SearchPokemons.js","components/UI/NavButtons.js","components/Pages/Landing.js","components/SearchMoves/AddMoves.js","components/SearchMoves/MoveCard.js","components/Pages/SearchMoves.js","components/TypesCombination/Results.js","components/TypesCombination/TypeButton.js","components/TypesCombination/CombinationContainer.js","components/Pages/TypeCombination.js","components/PokemonQuiz/Quiz.js","components/PokemonQuiz/SelectLevel.js","components/Pages/PokemonQuiz.js","hooks/useFetchGetPokemonID.js","routers/AppRouter.js","components/UI/Navbar.js","components/UI/Copyright.js","components/UI/Footer.js","App.js","theme.js","index.js"],"names":["getMoveByName","moveName","a","moveURL","fetch","resp","json","accuracy","damage_class","name","priority","description","flavor_text_entries","effect_entries","effect_chance","pp","power","target","type","dataClass","filter","desc","language","version_group","flavor_text","effect","short_effect","dataTypeWeaknesses","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","getWeaknesses","types","weaknesses","length","data","reduce","combination","Object","entries","typeName","number","acc","key","value","push","concat","getPokeInfoByID","id","abilitiesData","abilities","height","moves","species","statsData","stats","weight","typesData","map","movesFilter","version_group_details","find","Promise","all","move","movesData","getSpeciesData","url","speciesData","ability","image","obj","item","stat","base_stat","totalStats","sum","eggsData","egg_groups","gender","gender_rate","genera","generation","hatch","hatch_counter","eggs","egg","gen","genus","version","About","male","female","spacing","as","width","color","paddingY","textTransform","fontWeight","size","textAlign","isInline","alignItems","FaMars","w","h","FaVenus","BaseStats","renderWeaks","valueColor","title","colorScheme","max","weak","getWeaks","background","borderRadius","paddingX","marginX","getResist","Description","variant","genDesc","index","align","Moves","justifyContent","bg","rounded","PokeInfo","pokemon","isMounted","useRef","useState","loading","state","setState","useEffect","current","then","pokeData","useFetchPokeInfo","_selected","borderBottom","thickness","speed","emptyColor","PokemonDrawer","onClose","isOpen","placement","overflowY","backgroundColor","padding","direction","fontSize","justify","ArrowBack","onClick","cursor","FaHeart","toString","padStart","alignSelf","marginBottom","maxWidth","src","zIndex","className","marginTop","paddingTop","PokemonThumbnail","drawer","setDrawer","alt","URL_POKEMON","getMiniData","params","res","sprites","other","front_default","api","page","response","results","GoHomeButton","componentPathName","actualPathName","useLocation","pathname","history","useHistory","aria-label","base","md","Pokedex","setPage","pokemons","error","newPokemons","useFetchPokedex","sm","paddingBottom","gap","columns","div","animate","custom","initial","variants","hidden","opacity","y","visible","transition","delay","_hover","bgGradient","display","AddPokemon","setPokemons","inputValue","setInputValue","setError","setLoading","handleSubmit","e","preventDefault","nameSearch","replace","toLowerCase","catch","onSubmit","children","Search","placeholder","isInvalid","errorBorderColor","onChange","event","textColor","propType","PropTypes","func","isRequired","SearchPokemons","alignContent","margin","mt","NavButtons","bgColor","route","navButton","ReachLink","boxShadow","overflow","to","marginRight","window","open","Landing","AddMoves","setMoves","MoveCard","SearchMoves","ResultsCombination","firstType","secondType","setCombination","justifyItems","wrap","TypeButton","selectedType","changeSelectedType","mr","ml","CombinationContainer","setFirstType","setSecondType","handleChangeFirstType","handleChangeSecondType","Results","TypeCombinationPage","Quiz","nextPokemon","status","setStatus","inputName","setInputName","counter","setCounter","c","draggable","style","imageRendering","p","SelectLevel","setGeneration","bgClip","min","PokemonQuiz","getRandomNumber","Math","floor","random","setRandom","useFetchGetPokemonID","idRandom","AppRouter","exact","path","TypeCombination","Navbar","Copyright","textcolor","position","Date","getFullYear","Footer","App","templateColumns","templateRows","backgroundImage","overflowX","maxW","marginY","extendTheme","colors","primary","secondary","shadows","outline","ReactDOM","render","StrictMode","resetCSS","theme","document","getElementById"],"mappings":"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","file":"static/js/main.a8b7686b.chunk.js","sourcesContent":["export const getMoveByName = async (moveName) => {\r\n  const moveURL = `https://pokeapi.co/api/v2/move/${moveName}/`;\r\n\r\n  const resp = await fetch(moveURL);\r\n\r\n  const {\r\n    accuracy,\r\n    damage_class,\r\n    name,\r\n    priority,\r\n    flavor_text_entries: description,\r\n    effect_entries,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    target,\r\n    type,\r\n  } = await resp.json();\r\n\r\n  const dataClass = damage_class.name;\r\n\r\n  return {\r\n    accuracy,\r\n    dataClass,\r\n    name,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"x-y\") ||\r\n        (desc.language.name === \"en\" &&\r\n          desc.version_group.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version_group.name === \"sword\")\r\n    )[0]?.flavor_text,\r\n    effect: effect_entries[0].short_effect,\r\n    effect_chance,\r\n    pp,\r\n    power,\r\n    priority,\r\n    target: target.name,\r\n    type: type.name,\r\n  };\r\n};\r\n","export const dataTypeWeaknesses = {\r\n  bug: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dark: {\r\n    bug: 2,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0.5,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  dragon: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 2,\r\n    electric: 0.5,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  electric: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  fairy: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 0,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  fighting: {\r\n    bug: 0.5,\r\n    dark: 0.5,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 2,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 2,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  fire: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 0.5,\r\n    water: 2,\r\n  },\r\n  flying: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  ghost: {\r\n    bug: 0.5,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 0,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  grass: {\r\n    bug: 2,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0.5,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 2,\r\n    flying: 2,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 0.5,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 2,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 0.5,\r\n  },\r\n  ground: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 0,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 2,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 0.5,\r\n    steel: 1,\r\n    water: 2,\r\n  },\r\n  ice: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 2,\r\n    steel: 2,\r\n    water: 1,\r\n  },\r\n  normal: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 0,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  poison: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 0.5,\r\n    psychic: 2,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  psychic: {\r\n    bug: 2,\r\n    dark: 2,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 0.5,\r\n    fire: 1,\r\n    flying: 1,\r\n    ghost: 2,\r\n    grass: 1,\r\n    ground: 1,\r\n    ice: 1,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 0.5,\r\n    rock: 1,\r\n    steel: 1,\r\n    water: 1,\r\n  },\r\n  rock: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 1,\r\n    fairy: 1,\r\n    fighting: 2,\r\n    fire: 0.5,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 2,\r\n    ice: 1,\r\n    normal: 0.5,\r\n    poison: 0.5,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 2,\r\n    water: 2,\r\n  },\r\n  steel: {\r\n    bug: 0.5,\r\n    dark: 1,\r\n    dragon: 0.5,\r\n    electric: 1,\r\n    fairy: 0.5,\r\n    fighting: 2,\r\n    fire: 2,\r\n    flying: 0.5,\r\n    ghost: 1,\r\n    grass: 0.5,\r\n    ground: 2,\r\n    ice: 0.5,\r\n    normal: 0.5,\r\n    poison: 0,\r\n    psychic: 0.5,\r\n    rock: 0.5,\r\n    steel: 0.5,\r\n    water: 1,\r\n  },\r\n  water: {\r\n    bug: 1,\r\n    dark: 1,\r\n    dragon: 1,\r\n    electric: 2,\r\n    fairy: 1,\r\n    fighting: 1,\r\n    fire: 0.5,\r\n    flying: 1,\r\n    ghost: 1,\r\n    grass: 2,\r\n    ground: 1,\r\n    ice: 0.5,\r\n    normal: 1,\r\n    poison: 1,\r\n    psychic: 1,\r\n    rock: 1,\r\n    steel: 0.5,\r\n    water: 0.5,\r\n  },\r\n};\r\n","import { dataTypeWeaknesses as data } from \"../data/dataTypeWeaknesses\";\r\n\r\nexport const getWeaknesses = (types) => {\r\n  let weaknesses = {};\r\n\r\n  if (types.length === 1) {\r\n    weaknesses = data[types];\r\n  } else {\r\n    weaknesses = types.reduce((combination, type) => {\r\n      for (const [typeName, number] of Object.entries(data[type])) {\r\n        if (!combination[typeName]) {\r\n          combination[typeName] = 1;\r\n        }\r\n        combination[typeName] *= number;\r\n      }\r\n\r\n      return combination;\r\n    }, {});\r\n  }\r\n\r\n  //  Recibo\r\n  // weaknesses = {\r\n  //   bug: 1,\r\n  //   dragon: 1,\r\n  //   fire: 2,\r\n  //   water: 3,\r\n  // };\r\n\r\n  const invertido = Object.entries(weaknesses).reduce((acc, [key, value]) => {\r\n    if (acc[value]) {\r\n      acc[value].push(key);\r\n      return acc;\r\n    } else {\r\n      return { ...acc, [value]: [].concat(key) };\r\n    }\r\n  }, {});\r\n\r\n  return invertido;\r\n};\r\n","import { getMoveByName } from \"./getMoveByName\";\r\nimport { getWeaknesses } from \"./getWeaknesses\";\r\n\r\nexport const getPokeInfoByID = async (id) => {\r\n  const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n  const {\r\n    abilities: abilitiesData,\r\n    height,\r\n    moves,\r\n    name,\r\n    species,\r\n    stats: statsData,\r\n    types,\r\n    weight,\r\n  } = await resp.json();\r\n\r\n  const typesData = types.map(({ type }) => type.name);\r\n\r\n  const movesFilter = moves.filter(({ version_group_details }) =>\r\n    version_group_details.find(\r\n      ({ version_group }) => version_group.name === \"ultra-sun-ultra-moon\"\r\n    )\r\n  );\r\n\r\n  const movesData = await Promise.all(\r\n    movesFilter.map(({ move }) => getMoveByName(move.name))\r\n  );\r\n\r\n  const speciesData = await getSpeciesData(species.url);\r\n\r\n  return {\r\n    ...speciesData,\r\n    abilities: abilitiesData.map(({ ability }) => ability.name),\r\n    height: height / 10,\r\n    id,\r\n    image: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\r\n    moves: movesData,\r\n    name,\r\n    stats: statsData.reduce(\r\n      (obj, item) => ({ ...obj, [item.stat.name]: item.base_stat }),\r\n      {}\r\n    ),\r\n    totalStats: statsData.reduce((sum, value) => sum + value.base_stat, 0),\r\n    types: typesData,\r\n    weaknesses: getWeaknesses(typesData),\r\n    weight: weight / 10,\r\n  };\r\n};\r\n\r\nconst getSpeciesData = async (url) => {\r\n  const resp = await fetch(url);\r\n  const {\r\n    egg_groups: eggsData,\r\n    gender_rate: gender,\r\n    genera,\r\n    generation,\r\n    flavor_text_entries: description,\r\n    hatch_counter: hatch,\r\n  } = await resp.json();\r\n\r\n  return {\r\n    eggs: eggsData.map((egg) => egg.name),\r\n    gen: generation.name,\r\n    gender,\r\n    genera: genera.find((genus) => genus.language.name === \"en\").genus,\r\n    description: description.filter(\r\n      (desc) =>\r\n        (desc.language.name === \"en\" && desc.version.name === \"heartgold\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"emerald\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"firered\") ||\r\n        (desc.language.name === \"en\" && desc.version.name === \"sword\")\r\n    ),\r\n    hatch,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Text, Stack, Heading, Box, Icon } from \"@chakra-ui/react\";\r\nimport { FaVenus, FaMars } from \"react-icons/fa\";\r\n\r\nconst About = ({\r\n  abilities,\r\n  eggs,\r\n  gen,\r\n  genera,\r\n  gender,\r\n  hatch,\r\n  height,\r\n  weight,\r\n}) => {\r\n  const male = ((8 - gender) * 100) / 8;\r\n  const female = (gender * 100) / 8;\r\n\r\n  return (\r\n    <Stack spacing={3}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Species\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {genera}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Height\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {` ${height} m`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              weight\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"60%\" fontWeight=\"bold\">\r\n              {`${weight} kg`}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              abilities\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {abilities.map((ability) => `${ability} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              first appearance\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gen}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Breeding\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Gender\r\n            </Text>\r\n            <Stack\r\n              as=\"td\"\r\n              isInline\r\n              paddingY={1}\r\n              spacing={2}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {gender < 0 ? (\r\n                <Text>Null</Text>\r\n              ) : (\r\n                <>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaMars} color=\"blue.500\" w={6} h={6} />\r\n                    <Text>{male}%</Text>\r\n                  </Stack>\r\n                  <Stack isInline alignItems=\"center\">\r\n                    <Icon as={FaVenus} color=\"pink.500\" w={6} h={6} />\r\n                    <Text>{female}%</Text>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Stack>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Egg Groups\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {eggs.map((egg) => `${egg} `)}\r\n            </Text>\r\n          </tr>\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Hatch counter\r\n            </Text>\r\n            <Text\r\n              as=\"td\"\r\n              paddingY={1}\r\n              width=\"60%\"\r\n              fontWeight=\"bold\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              {`${(hatch + 1) * 255} steps`}\r\n            </Text>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Text, Progress, Stack, Heading, Box, Badge } from \"@chakra-ui/react\";\r\n\r\nconst BaseStats = ({ stats, weaknesses, totalStats }) => {\r\n  const getWeaks = (weaknesses) => {\r\n    const weaks = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak > 1\r\n    );\r\n    return weaks;\r\n  };\r\n\r\n  const getResist = (weaknesses) => {\r\n    const resist = Object.entries(weaknesses).filter(\r\n      ([weak, types]) => weak < 1\r\n    );\r\n    return resist;\r\n  };\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case \"4\":\r\n        return \"Very Weak x4\";\r\n      case \"2\":\r\n        return \"Weak x2\";\r\n      case \"0.5\":\r\n        return \"Not Effective x1/2\";\r\n      case \"0.25\":\r\n        return \"Strong Against x1/4\";\r\n      case \"0\":\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  const valueColor = (value) => {\r\n    if (value <= 50) {\r\n      return \"red\";\r\n    } else {\r\n      if (value <= 100) {\r\n        return \"yellow\";\r\n      } else {\r\n        return \"green\";\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={4}>\r\n      <Box as=\"table\" width=\"100%\">\r\n        <tbody>\r\n          {Object.entries(stats).map(([title, value]) => (\r\n            <tr key={title}>\r\n              <Text\r\n                as=\"td\"\r\n                color=\"gray.500\"\r\n                paddingY={1}\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n              >\r\n                {title}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={1} width=\"15%\">\r\n                {value}\r\n              </Text>\r\n              <Box as=\"td\" paddingY={1} width=\"45%\">\r\n                <Progress\r\n                  colorScheme={valueColor(value)}\r\n                  size=\"xs\"\r\n                  value={value}\r\n                  max={200}\r\n                />\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <Text\r\n              as=\"td\"\r\n              color=\"gray.500\"\r\n              paddingY={1}\r\n              width=\"40%\"\r\n              textTransform=\"capitalize\"\r\n            >\r\n              Total\r\n            </Text>\r\n            <Text as=\"td\" paddingY={1} width=\"15%\">\r\n              {totalStats}\r\n            </Text>\r\n            <Box as=\"td\" paddingY={1} width=\"45%\">\r\n              <Progress\r\n                colorScheme={totalStats >= 400 ? \"green\" : \"red\"}\r\n                size=\"xs\"\r\n                value={totalStats}\r\n                max={750}\r\n              />\r\n            </Box>\r\n          </tr>\r\n        </tbody>\r\n      </Box>\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Weaknesses\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getWeaks(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n\r\n      <Heading size=\"md\" textAlign=\"start\">\r\n        Resistance\r\n      </Heading>\r\n      <Box as=\"table\">\r\n        <tbody>\r\n          {getResist(weaknesses).map(([weak, types]) => (\r\n            <tr key={weak}>\r\n              <Text as=\"td\" width=\"35%\">\r\n                {renderWeaks(weak)}\r\n              </Text>\r\n              <Box as=\"td\" width=\"65%\">\r\n                {types.map((type) => (\r\n                  <Badge\r\n                    key={type}\r\n                    background={type}\r\n                    borderRadius={9999}\r\n                    paddingX={2}\r\n                    marginX={1}\r\n                  >\r\n                    {type}\r\n                  </Badge>\r\n                ))}\r\n              </Box>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default BaseStats;\r\n","import React from \"react\";\r\nimport { Text, Stack, Table, Tbody, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Description = ({ description }) => {\r\n  return (\r\n    <Stack>\r\n      <Table variant=\"striped\" colorScheme=\"gray\" width=\"100%\">\r\n        <Tbody>\r\n          {description.map((genDesc, index) => (\r\n            <Tr key={index}>\r\n              <Text\r\n                as=\"td\"\r\n                paddingY={4}\r\n                align=\"center\"\r\n                width=\"40%\"\r\n                textTransform=\"capitalize\"\r\n                fontWeight=\"bold\"\r\n              >\r\n                {genDesc.version.name}\r\n              </Text>\r\n              <Text as=\"td\" paddingY={4} align=\"justify\">\r\n                {genDesc.flavor_text}\r\n              </Text>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { Badge, Box, Table, Tbody, Text, Tr } from \"@chakra-ui/react\";\r\n\r\nconst Moves = ({ moves }) => {\r\n  return (\r\n    <Table variant=\"striped\" colorScheme=\"gray\" w=\"100%\">\r\n      <thead align=\"center\">\r\n        <tr>\r\n          <th>name</th>\r\n          <th>power</th>\r\n          <th>type</th>\r\n          <th>accuracy</th>\r\n          <th>class</th>\r\n        </tr>\r\n      </thead>\r\n      <Tbody>\r\n        {moves.map((move) => (\r\n          <Tr key={move.name}>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.name}\r\n            </Text>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.power ? move.power : `-`}\r\n            </Text>\r\n            <Box as=\"td\" align=\"center\" justifyContent=\"center\">\r\n              <Badge bg={move.type} rounded={999} textAlign=\"center\">\r\n                {move.type}\r\n              </Badge>\r\n            </Box>\r\n            <Text align=\"center\" as=\"td\">\r\n              {move.accuracy ? move.accuracy : `-`}\r\n            </Text>\r\n            <Text align=\"center\" textTransform=\"capitalize\" as=\"td\">\r\n              {move.dataClass}\r\n            </Text>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Moves;\r\n","import React from \"react\";\r\nimport {\r\n  TabList,\r\n  Tabs,\r\n  Tab,\r\n  TabPanel,\r\n  TabPanels,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useFetchPokeInfo } from \"../../hooks/useFetchPokeInfo\";\r\n\r\nimport About from \"./PokeInfoPanels/About\";\r\nimport BaseStats from \"./PokeInfoPanels/BaseStats\";\r\nimport Description from \"./PokeInfoPanels/Description\";\r\nimport Moves from \"./PokeInfoPanels/Moves\";\r\n\r\nconst PokeInfo = ({ pokemon: { types, id } }) => {\r\n  const { data, loading } = useFetchPokeInfo(id);\r\n\r\n  return (\r\n    <Tabs variant=\"unstyled\" align=\"center\">\r\n      <TabList>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          About\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Base Stats\r\n        </Tab>\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Description\r\n        </Tab>\r\n\r\n        <Tab _selected={{ color: types[0], borderBottom: \"2px solid\" }}>\r\n          Moves\r\n        </Tab>\r\n      </TabList>\r\n      {loading ? (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"gray.200\"\r\n          color={types[0]}\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <TabPanels align=\"center\">\r\n          <TabPanel>\r\n            <About\r\n              abilities={data.abilities}\r\n              eggs={data.eggs}\r\n              gen={data.gen}\r\n              genera={data.genera}\r\n              gender={data.gender}\r\n              hatch={data.hatch}\r\n              height={data.height}\r\n              weaknesses={data.weaknesses}\r\n              weight={data.weight}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <BaseStats\r\n              stats={data.stats}\r\n              totalStats={data.totalStats}\r\n              weaknesses={data.weaknesses}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Description description={data.description} />\r\n          </TabPanel>\r\n\r\n          <TabPanel paddingX={2}>\r\n            {data.moves.length > 0 ? (\r\n              <Moves moves={data.moves} />\r\n            ) : (\r\n              <Text color=\"crimson\" align=\"center\">\r\n                No data from PokeApi\r\n              </Text>\r\n            )}\r\n          </TabPanel>\r\n        </TabPanels>\r\n      )}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PokeInfo;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { getPokeInfoByID } from \"../api/getPokeInfoByID\";\r\n\r\nexport const useFetchPokeInfo = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPokeInfoByID(id).then((pokeData) => {\r\n      if (isMounted.current) {\r\n        setState({\r\n          data: pokeData,\r\n          loading: false,\r\n        });\r\n      }\r\n    });\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Text,\r\n  Stack,\r\n  Heading,\r\n  Image,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport PokeInfo from \"./PokeInfo\";\r\n\r\nconst PokemonDrawer = ({ onClose, pokemon }) => {\r\n  return (\r\n    <Drawer isOpen placement=\"right\" onClose={onClose} size=\"lg\">\r\n      <DrawerOverlay>\r\n        <DrawerContent overflowY=\"auto\">\r\n          <Stack\r\n            backgroundColor={`${pokemon.types[0]}`}\r\n            color=\"white\"\r\n            padding={6}\r\n            spacing={6}\r\n          >\r\n            <Stack direction=\"row\" fontSize=\"2xl\" justify=\"space-between\">\r\n              <ArrowBackIcon onClick={onClose} cursor=\"pointer\" />\r\n              <Icon as={FaHeart} w={6} h={6} />\r\n            </Stack>\r\n            <Stack direction=\"row\" color=\"white\">\r\n              <Stack width=\"100%\">\r\n                <Stack direction=\"row\" align=\"baseline\" justify=\"space-between\">\r\n                  <Heading textTransform=\"capitalize\">{pokemon.name}</Heading>\r\n                  <Text fontWeight={600}>\r\n                    #{pokemon.id.toString().padStart(3, \"0\")}\r\n                  </Text>\r\n                </Stack>\r\n                <Stack direction=\"row\">\r\n                  {pokemon.types.map((type) => (\r\n                    <Text\r\n                      key={type}\r\n                      paddingX={2}\r\n                      paddingY={1}\r\n                      backgroundColor=\"rgba(255,255,255,0.2)\"\r\n                      borderRadius={9999}\r\n                      width=\"fit-content\"\r\n                      textTransform=\"capitalize\"\r\n                    >\r\n                      {type}\r\n                    </Text>\r\n                  ))}\r\n                </Stack>\r\n\r\n                <Image\r\n                  alignSelf=\"center\"\r\n                  height={256}\r\n                  marginBottom={-3}\r\n                  maxWidth={256}\r\n                  src={pokemon.image}\r\n                  width=\"100%\"\r\n                  zIndex={20}\r\n                  className=\"animate__animated animate__shakeX\"\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            backgroundColor=\"white\"\r\n            borderRadius={24}\r\n            marginTop={-16}\r\n            padding={6}\r\n            paddingTop={12}\r\n            zIndex={10}\r\n          >\r\n            <PokeInfo pokemon={pokemon} />\r\n          </Stack>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PokemonDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, Stack, Text, Image } from \"@chakra-ui/react\";\r\nimport PokemonDrawer from \"./PokemonDrawer/PokemonDrawer\";\r\n\r\nconst PokemonThumbnail = ({ pokemon }) => {\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  return (\r\n    <Stack\r\n      color=\"white\"\r\n      backgroundColor={`${pokemon.types[0]}`}\r\n      borderRadius={12}\r\n      padding={2}\r\n      onClick={() => setDrawer(true)}\r\n      cursor=\"pointer\"\r\n    >\r\n      <Stack direction=\"row\" align=\"baseline\" justifyContent=\"space-between\">\r\n        <Heading textTransform=\"capitalize\" fontSize=\"lg\">\r\n          {pokemon.name}\r\n        </Heading>\r\n        <Text>#{pokemon.id.toString().padStart(3, \"0\")}</Text>\r\n      </Stack>\r\n      <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Stack>\r\n          {pokemon.types.map((type) => (\r\n            <Text\r\n              key={type}\r\n              paddingX={2}\r\n              paddingY={1}\r\n              backgroundColor=\"rgba(255,255,255,0.2)\"\r\n              borderRadius={9999}\r\n              width=\"fit-content\"\r\n            >\r\n              {type}\r\n            </Text>\r\n          ))}\r\n        </Stack>\r\n        <Image\r\n          maxWidth=\"100px\"\r\n          width={20}\r\n          alt={pokemon.name}\r\n          src={pokemon.image}\r\n        ></Image>\r\n      </Stack>\r\n      {drawer && (\r\n        <PokemonDrawer pokemon={pokemon} onClose={() => setDrawer(false)} />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonThumbnail;\r\n","export const URL_POKEMON = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\nexport const PAGE_SIZE = 10;\r\n","import { URL_POKEMON } from \"./settingsURL\";\r\n\r\n// params = name or id\r\nexport const getMiniData = async (params) => {\r\n  let url = `${URL_POKEMON}/${params}`;\r\n\r\n  return await fetch(url)\r\n    .then((res) => res.json())\r\n    .then(({ id, types, sprites, name }) => {\r\n      return {\r\n        name,\r\n        image: sprites.other[\"official-artwork\"].front_default,\r\n        id,\r\n        types: types.map(({ type }) => type.name),\r\n      };\r\n    });\r\n};\r\n","import { URL_POKEMON, PAGE_SIZE } from \"./settingsURL\";\r\nimport { getPokeInfoByID } from \"./getPokeInfoByID\";\r\nimport { getMiniData } from \"./getMiniData\";\r\n\r\nexport const api = {\r\n  list: (page) => {\r\n    return fetch(\r\n      `${URL_POKEMON}/?offset=${PAGE_SIZE * page}}&limit=${PAGE_SIZE}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) =>\r\n        Promise.all(\r\n          response.results.map((pokemon) => getMiniData(pokemon.name))\r\n        )\r\n      );\r\n  },\r\n  miniData: (key) => {\r\n    return getMiniData(key);\r\n  },\r\n  fullData: (id) => {\r\n    return getPokeInfoByID(id);\r\n  },\r\n};\r\n\r\n/* list: (page) => {\r\n  return Promise.all(\r\n    new Array(PAGE_SIZE + 1)\r\n      .fill(true)\r\n      .map((_, index) => index)\r\n      .slice(1)\r\n      .map((id) => getMiniData(PAGE_SIZE * page + id))\r\n  );\r\n}, */\r\n","import React from \"react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst GoHomeButton = ({ componentPathName }) => {\r\n  const { pathname: actualPathName } = useLocation();\r\n  const history = useHistory();\r\n  return (\r\n    componentPathName === actualPathName && (\r\n      <ArrowBackIcon\r\n        alignSelf=\"start\"\r\n        aria-label=\"go home\"\r\n        as=\"button\"\r\n        cursor=\"pointer\"\r\n        height={{ base: 6, md: 8 }}\r\n        width={{ base: 6, md: 8 }}\r\n        onClick={() => {\r\n          history.push(\"/home\");\r\n        }}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default GoHomeButton;\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SimpleGrid, Heading, Stack, Button, Spinner } from \"@chakra-ui/react\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport { useFetchPokedex } from \"../../hooks/useFetchPokedex\";\r\nimport GoHomeButton from \"../UI/GoHomeButton\";\r\n\r\nconst Pokedex = () => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  const pagesGenerations = [\r\n    { name: \"I\", page: 0 },\r\n    { name: \"II\", page: 15 },\r\n    { name: \"III\", page: 25 },\r\n    { name: \"IV\", page: 38 },\r\n    { name: \"V\", page: 49 },\r\n    { name: \"VI\", page: 65 },\r\n    { name: \"VII\", page: 72 },\r\n    { name: \"VIII\", page: 81 },\r\n    // { name: \"Variants\", page: 89 },\r\n    // { name: \"Megas\", page: 93 },\r\n    // { name: \"Gmax\", page: 108 },\r\n  ];\r\n\r\n  const { pokemons, loading } = useFetchPokedex(page);\r\n\r\n  return (\r\n    <Stack\r\n      align=\"center\"\r\n      bg=\"gray.200\"\r\n      paddingX={{ base: 0, sm: 1, md: 4 }}\r\n      paddingY={{ base: 0, md: 3 }}\r\n      rounded={20}\r\n      spacing={2}\r\n      paddingBottom={2}\r\n    >\r\n      <GoHomeButton componentPathName=\"/pokedex\" />\r\n      <Heading fontSize=\"4xl\" alignSelf=\"flex-start\">\r\n        Pokedex\r\n      </Heading>\r\n\r\n      {loading ? (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.5s\"\r\n          emptyColor=\"gray.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      ) : (\r\n        <SimpleGrid gap={3} columns={2} w=\"100%\">\r\n          {pokemons?.map((pokemon, index) => (\r\n            <motion.div\r\n              animate=\"visible\"\r\n              key={pokemon.name}\r\n              custom={index}\r\n              initial=\"hidden\"\r\n              variants={{\r\n                hidden: { opacity: 0, y: 150 },\r\n                visible: (index) => ({\r\n                  opacity: 1,\r\n                  y: 0,\r\n                  transition: {\r\n                    delay: index * 0.05,\r\n                  },\r\n                }),\r\n              }}\r\n            >\r\n              <PokemonThumbnail pokemon={pokemon} />\r\n            </motion.div>\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n      <Stack isInline justify=\"center\" alignItems=\"center\">\r\n        {page > 0 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={() => setPage(page - 1)}\r\n          >\r\n            Prev Page\r\n          </Button>\r\n        )}\r\n        {pagesGenerations.map(({ name, page }) => (\r\n          <Button\r\n            display={{ base: \"none\", md: \"inline-block\" }}\r\n            key={name}\r\n            size=\"md\"\r\n            onClick={() => setPage(page)}\r\n            bg=\"secondary\"\r\n            color=\"white\"\r\n            _hover={{ background: \"crimson\" }}\r\n          >\r\n            {name}\r\n          </Button>\r\n        ))}\r\n        {page < 111 && (\r\n          <Button\r\n            bg=\"primary\"\r\n            color=\"white\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={() => setPage(page + 1)}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchPokedex = (page) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({\r\n    pokemons: [],\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ pokemons: [], loading: true, error: null });\r\n    api.list(page).then((newPokemons) => {\r\n      if (isMounted.current)\r\n        setState({\r\n          pokemons: newPokemons,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [page]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Stack,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { api } from \"../../api/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddPokemon = ({ setPokemons }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const nameSearch = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    await api\r\n      .miniData(nameSearch)\r\n      .then((pokemon) => {\r\n        setLoading(false);\r\n        setPokemons((pokemons) => [pokemon, ...pokemons]);\r\n        setInputValue(\"\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setError(`${nameSearch} not found`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Stack width=\"100%\">\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Pokémon by name or number\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={(event) => setInputValue(event.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          alignSelf=\"center\"\r\n          thickness=\"4px\"\r\n          speed=\"0.65s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nAddPokemon.propType = {\r\n  setPokemons: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\nimport { AddPokemon } from \"../SearchPokemon/AddPokemon\";\r\n\r\nimport PokemonThumbnail from \"../PokemonThumbnail\";\r\nimport GoHomeButton from \"../UI/GoHomeButton\";\r\n\r\nconst SearchPokemons = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      margin={{ base: 0, sm: 1, md: 4 }}\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <GoHomeButton componentPathName={\"/search\"} />\r\n\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        What Pokémon are you looking for?\r\n      </Heading>\r\n      <AddPokemon setPokemons={setPokemons} />\r\n      {pokemons.length > 0 && (\r\n        <SimpleGrid\r\n          columns={2}\r\n          gap={2}\r\n          bg=\"gray.200\"\r\n          borderRadius={20}\r\n          padding={2}\r\n        >\r\n          {pokemons.map((pokemon, id) => (\r\n            <PokemonThumbnail key={id} pokemon={pokemon} />\r\n          ))}\r\n        </SimpleGrid>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchPokemons;\r\n","import React from \"react\";\r\nimport { Stack, SimpleGrid, Text, Image } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst NavButtons = () => {\r\n  const navButtonsArray = [\r\n    {\r\n      name: \"Pokédex\",\r\n      bgColor: \"grass\",\r\n      route: \"/pokedex\",\r\n    },\r\n    {\r\n      name: \"Search Moves\",\r\n      bgColor: \"fire\",\r\n      route: \"/moves\",\r\n    },\r\n    {\r\n      name: \"Search Pokémon\",\r\n      bgColor: \"water\",\r\n      route: \"/search\",\r\n    },\r\n    {\r\n      name: \"Who's that Pokémon?\",\r\n      bgColor: \"ground\",\r\n      route: \"/quiz\",\r\n    },\r\n    {\r\n      name: \"Types Weaks?\",\r\n      bgColor: \"poison\",\r\n      route: \"/combination\",\r\n    },\r\n  ];\r\n  return (\r\n    <SimpleGrid bg=\"#fff\" columns={2} gap={3} paddingX={4}>\r\n      {navButtonsArray.map((navButton) => (\r\n        <Stack\r\n          align=\"center\"\r\n          as={ReachLink}\r\n          bg={navButton.bgColor}\r\n          borderRadius={20}\r\n          boxShadow=\"0px 5px  3px #ccc\"\r\n          height={16}\r\n          isInline\r\n          justifyContent=\"space-between\"\r\n          key={navButton.name}\r\n          overflow=\"hidden\"\r\n          padding={3}\r\n          _hover={{ opacity: 0.8 }}\r\n          to={navButton.route}\r\n        >\r\n          <Text color=\"white\">{navButton.name}</Text>\r\n          <Image\r\n            alt=\"pokeball\"\r\n            marginRight={-7}\r\n            opacity=\"0.2\"\r\n            src=\"../assets/ui/pokeball.svg\"\r\n            width={20}\r\n          />\r\n        </Stack>\r\n      ))}\r\n\r\n      <Stack\r\n        align=\"center\"\r\n        bg=\"fighting\"\r\n        borderRadius={20}\r\n        boxShadow=\"0px 5px  3px #ccc\"\r\n        height={16}\r\n        overflow=\"hidden\"\r\n        isInline\r\n        justifyContent=\"space-between\"\r\n        padding={3}\r\n        _hover={{ opacity: 0.8 }}\r\n        cursor=\"pointer\"\r\n        onClick={() =>\r\n          window.open(\"https://juanmaportfolio.netlify.app/\", \"_blank\")\r\n        }\r\n      >\r\n        <Text color=\"white\">About Me</Text>\r\n        <Image\r\n          alt=\"pokeball\"\r\n          marginRight={-7}\r\n          opacity={0.2}\r\n          src=\"../assets/ui/pokeball.svg\"\r\n          width={20}\r\n        />\r\n      </Stack>\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport SearchPokemons from \"./SearchPokemons\";\r\nimport NavButtons from \"../UI/NavButtons\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Stack alignItems=\"stretch\" bg=\"#fff\" rounded={30}>\r\n      <SearchPokemons />\r\n      <NavButtons />\r\n      <Pokedex />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { getMoveByName } from \"../../api/getMoveByName\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddMoves = ({ setMoves }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    const moveName = inputValue.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    if (moveName.length > 1) {\r\n      await getMoveByName(moveName)\r\n        .then((move) => {\r\n          setLoading(false);\r\n          setMoves((moves) => [move, ...moves]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setError(`${inputValue} not found.`);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n      setError(\"Move name to short\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup variant=\"filled\">\r\n          <InputLeftElement\r\n            children={<SearchIcon color=\"black\" />}\r\n            onClick={handleSubmit}\r\n            cursor=\"pointer\"\r\n          />\r\n          <Input\r\n            placeholder=\"Search Move (example: Ember, Thunder, Rain-Dance, Swords-Dance etc)\"\r\n            type=\"text\"\r\n            isInvalid={error}\r\n            errorBorderColor=\"crimson\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n      </form>\r\n      {error && <Text textColor=\"crimson\">{error}</Text>}\r\n      {loading && (\r\n        <Spinner\r\n          thickness=\"4px\"\r\n          speed=\"0.85s\"\r\n          emptyColor=\"blue.200\"\r\n          color=\"black\"\r\n          size=\"xl\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMoves;\r\n\r\nAddMoves.propType = {\r\n  setMoves: PropTypes.func.isRequired,\r\n};\r\n","import { Heading, Image, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst MoveCard = ({ move }) => {\r\n  const {\r\n    accuracy,\r\n    dataClass,\r\n    description,\r\n    name,\r\n    pp,\r\n    power,\r\n    priority,\r\n    effect_chance,\r\n    effect,\r\n    type,\r\n  } = move;\r\n  return (\r\n    <Stack\r\n      bg={type}\r\n      borderRadius={12}\r\n      padding={3}\r\n      spacing={6}\r\n      marginBottom={{ base: 4, md: 0 }}\r\n    >\r\n      <Stack isInline justify=\"space-between\" alignItems=\"center\">\r\n        <Heading color=\"white\" textTransform=\"capitalize\" fontSize=\"xl\">\r\n          {name}\r\n        </Heading>\r\n        <Stack isInline>\r\n          <Image\r\n            width={7}\r\n            alt={dataClass}\r\n            filter=\"brightness(0) invert(1)\"\r\n            src={`./assets/moveClass/${dataClass}.png`}\r\n          ></Image>\r\n          <Image\r\n            width={7}\r\n            alt={type}\r\n            src={`./assets/pokemonTypes/${type}.png`}\r\n          ></Image>\r\n        </Stack>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Description:\r\n        </Heading>\r\n        <Text>{description}</Text>\r\n      </Stack>\r\n      <Stack>\r\n        <Heading textTransform=\"capitalize\" fontSize=\"md\">\r\n          Effect:\r\n        </Heading>\r\n        <Text>{effect.replace(\"$effect_chance\", effect_chance)}</Text>\r\n      </Stack>\r\n      <Stack\r\n        isInline\r\n        alignItems=\"baseline\"\r\n        justifyContent=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Power\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{power ? power : \"-\"}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            accuracy\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">\r\n            {accuracy ? `${accuracy}%` : \"-\"}\r\n          </Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"upperCase\" fontWeight=\"bold\">\r\n            pp\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{pp}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            priority\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{priority}</Text>\r\n        </Stack>\r\n        <Stack justify=\"center\" textAlign=\"center\">\r\n          <Text textTransform=\"capitalize\" fontWeight=\"bold\">\r\n            Category\r\n          </Text>\r\n          <Text textTransform=\"capitalize\">{dataClass}</Text>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MoveCard;\r\n","import React, { useState } from \"react\";\r\nimport { Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nimport AddMoves from \"../SearchMoves/AddMoves\";\r\nimport MoveCard from \"../SearchMoves/MoveCard\";\r\nimport GoHomeButton from \"../UI/GoHomeButton\";\r\n\r\nconst SearchMoves = () => {\r\n  const [moves, setMoves] = useState([]);\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      margin={{ base: 0, sm: 1, md: 4 }}\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <GoHomeButton componentPathName=\"/moves\" />\r\n      <Heading>What move are you looking for?</Heading>\r\n      <AddMoves setMoves={setMoves} />\r\n      <SimpleGrid columns={{ base: 1, md: 2 }} gap={3}>\r\n        {moves.map((move, index) => (\r\n          <MoveCard move={move} key={index} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SearchMoves;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Stack, Flex, Text, Badge, Heading } from \"@chakra-ui/react\";\r\nimport { getWeaknesses } from \"../../api/getWeaknesses\";\r\n\r\nconst ResultsCombination = ({ firstType, secondType }) => {\r\n  const values = [4, 2, 1, 0.5, 0.25, 0];\r\n  const [combination, setCombination] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (secondType === null || firstType === secondType) {\r\n      setCombination(getWeaknesses([firstType]));\r\n    } else {\r\n      setCombination(getWeaknesses([firstType, secondType]));\r\n    }\r\n  }, [firstType, secondType]);\r\n\r\n  const renderWeaks = (value) => {\r\n    switch (value) {\r\n      case 4:\r\n        return \"Very Weak x4\";\r\n      case 2:\r\n        return \"Weak x2\";\r\n      case 1:\r\n        return \"Normal x1\";\r\n      case 0.5:\r\n        return \"Not Effective x1/2\";\r\n      case 0.25:\r\n        return \"Strong Against x1/4\";\r\n      case 0:\r\n        return \"Immune x0 \";\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={4} marginBottom={{ base: 2, md: 0 }}>\r\n      <Heading textAlign=\"center\">Weaks Combination:</Heading>\r\n\r\n      <Stack\r\n        isInline\r\n        justify=\"center\"\r\n        alignItems=\"baseline\"\r\n        textTransform=\"capitalize\"\r\n        fontSize=\"lg\"\r\n        fontWeight=\"bold\"\r\n      >\r\n        <Flex\r\n          align=\"center\"\r\n          justifyContent=\"center\"\r\n          bg={firstType}\r\n          width={20}\r\n          rounded={9999}\r\n          height={20}\r\n        >\r\n          <Text>{firstType}</Text>\r\n        </Flex>\r\n        {secondType && (\r\n          <>\r\n            <Flex justifyContent=\"center\">\r\n              <Text fontSize=\"2em\">+</Text>\r\n            </Flex>\r\n            <Flex\r\n              align=\"center\"\r\n              bg={secondType}\r\n              height={20}\r\n              justifyContent=\"center\"\r\n              rounded={9999}\r\n              width={20}\r\n            >\r\n              <Text>{secondType}</Text>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Stack>\r\n\r\n      <Flex direction=\"column\">\r\n        {values.map(\r\n          (value) =>\r\n            combination[value] && (\r\n              <Stack\r\n                alignItems=\"center\"\r\n                justifyItems=\"center\"\r\n                key={value}\r\n                spacing={0}\r\n              >\r\n                <Text textAlign=\"center\" fontSize=\"md\" fontWeight=\"bold\">\r\n                  {renderWeaks(value)}\r\n                </Text>\r\n                <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n                  {combination[value].map((type) => (\r\n                    <Badge\r\n                      bg={type}\r\n                      key={type}\r\n                      margin={1}\r\n                      rounded={999}\r\n                      textAlign=\"center\"\r\n                      w=\"100px\"\r\n                    >\r\n                      <Text\r\n                        fontSize=\"sm\"\r\n                        textTransform=\"capitalize\"\r\n                        fontWeight=\"bold\"\r\n                      >\r\n                        {type}\r\n                      </Text>\r\n                    </Badge>\r\n                  ))}\r\n                </Flex>\r\n              </Stack>\r\n            )\r\n        )}\r\n      </Flex>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ResultsCombination;\r\n","import React from \"react\";\r\nimport { Image, Tag, TagLabel } from \"@chakra-ui/react\";\r\n\r\nconst TypeButton = ({ type, selectedType, changeSelectedType }) => {\r\n  return (\r\n    <Tag\r\n      as=\"button\"\r\n      bg={type !== null ? type : \"grey\"}\r\n      cursor=\"pointer\"\r\n      margin={1}\r\n      rounded={999}\r\n      value={type}\r\n      w=\"90px\"\r\n      onClick={() => changeSelectedType(type)}\r\n    >\r\n      <Image\r\n        mr={3}\r\n        ml={-1}\r\n        src=\"../assets/ui/pokeball.svg\"\r\n        opacity={type !== selectedType ? \"0.1\" : \"1\"}\r\n        width={4}\r\n      />\r\n      <TagLabel textTransform=\"capitalize\" fontWeight=\"bold\">\r\n        {type === null ? \"None\" : type}\r\n      </TagLabel>\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default TypeButton;\r\n","import React, { useState } from \"react\";\r\nimport { Stack, Heading, Flex } from \"@chakra-ui/react\";\r\nimport Results from \"./Results\";\r\nimport TypeButton from \"./TypeButton\";\r\n\r\nconst CombinationContainer = () => {\r\n  const types = [\r\n    \"bug\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"electric\",\r\n    \"fairy\",\r\n    \"fighting\",\r\n    \"fire\",\r\n    \"flying\",\r\n    \"ghost\",\r\n    \"grass\",\r\n    \"ground\",\r\n    \"ice\",\r\n    \"normal\",\r\n    \"poison\",\r\n    \"psychic\",\r\n    \"rock\",\r\n    \"steel\",\r\n    \"water\",\r\n  ];\r\n\r\n  const [firstType, setFirstType] = useState(\"bug\");\r\n  const [secondType, setSecondType] = useState(null);\r\n\r\n  const handleChangeFirstType = (type) => {\r\n    if (type !== secondType) {\r\n      setFirstType(type);\r\n    } else {\r\n      setFirstType(type);\r\n      setSecondType(null);\r\n    }\r\n  };\r\n\r\n  const handleChangeSecondType = (type) => {\r\n    if (type !== firstType) {\r\n      setSecondType(type);\r\n    } else {\r\n      setFirstType(type);\r\n      setSecondType(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      bg=\"gray.100\"\r\n      borderRadius={20}\r\n      align=\"center\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      spacing={2}\r\n      paddingY={2}\r\n    >\r\n      <Stack direction={{ base: \"column\", md: \"row\" }} spacing={2}>\r\n        <Stack>\r\n          <Heading textAlign=\"center\">Choose First</Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <TypeButton\r\n                changeSelectedType={handleChangeFirstType}\r\n                key={type}\r\n                selectedType={firstType}\r\n                type={type}\r\n              />\r\n            ))}\r\n          </Flex>\r\n        </Stack>\r\n\r\n        <Stack>\r\n          <Heading textAlign=\"center\">Choose Second</Heading>\r\n          <Flex direction=\"row\" wrap=\"wrap\" justifyContent=\"center\">\r\n            {types.map((type) => (\r\n              <TypeButton\r\n                changeSelectedType={handleChangeSecondType}\r\n                key={type}\r\n                selectedType={secondType}\r\n                type={type}\r\n              />\r\n            ))}\r\n            <TypeButton\r\n              changeSelectedType={handleChangeSecondType}\r\n              type={null}\r\n              key={\"null\"}\r\n              selectedType={secondType}\r\n            />\r\n          </Flex>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <Results firstType={firstType} secondType={secondType} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default CombinationContainer;\r\n","import React from \"react\";\r\nimport { Heading, Stack } from \"@chakra-ui/react\";\r\nimport GoHomeButton from \"../UI/GoHomeButton\";\r\nimport CombinationContainer from \"../TypesCombination/CombinationContainer\";\r\n\r\nconst TypeCombinationPage = () => {\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      margin={{ base: 0, sm: 1, md: 4 }}\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <GoHomeButton componentPathName=\"/combination\" />\r\n\r\n      <Stack spacing={0}>\r\n        <Heading>Pokémon Type Calculator</Heading>\r\n        <Heading size=\"sm\" as=\"h6\" fontWeight=\"normal\" color=\"gray.500\">\r\n          Choose Types and Calculate Weaknesses\r\n        </Heading>\r\n      </Stack>\r\n      <CombinationContainer />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default TypeCombinationPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Stack,\r\n  Image,\r\n  Input,\r\n  Text,\r\n  Heading,\r\n  Box,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Quiz = ({ pokemon, nextPokemon }) => {\r\n  const [status, setStatus] = useState(\"GUESSING\");\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const name = inputName.replace(/ /g, \"-\").toLowerCase();\r\n    setCounter((c) => c + 1);\r\n    setStatus(name === pokemon.name ? \"SUCCESS\" : \"FAIL\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(\"GUESSING\");\r\n    setInputName(\"\");\r\n    setCounter(0);\r\n  }, [pokemon]);\r\n\r\n  return (\r\n    <Stack justify=\"center\">\r\n      <Image\r\n        alignSelf=\"center\"\r\n        alt=\"pokemon\"\r\n        className={status === \"SUCCESS\" && \"animate__animated animate__shakeX\"}\r\n        height={350}\r\n        draggable=\"false\"\r\n        style={{\r\n          imageRendering: `${status === \"SUCCESS\" ? \"auto\" : \"pixelated\"}`,\r\n          filter: `brightness(${status === \"SUCCESS\" ? 1 : 0})`,\r\n          transition: `${status === \"SUCCESS\" ? \"filter 0.7s\" : \"fliter 0s\"}`,\r\n        }}\r\n        src={pokemon.image}\r\n        width={350}\r\n      />\r\n      {status === \"SUCCESS\" ? (\r\n        <Stack>\r\n          <Heading textTransform=\"capitalize\" size=\"4xl\" textAlign=\"center\">\r\n            {pokemon.name}\r\n          </Heading>\r\n          <Text textAlign=\"center\">{counter} Attempts</Text>\r\n          <Box\r\n            as=\"button\"\r\n            p={2}\r\n            color=\"white\"\r\n            fontWeight=\"bold\"\r\n            borderRadius=\"md\"\r\n            bgGradient=\"linear(to-r, teal.500,green.500)\"\r\n            _hover={{\r\n              bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n            }}\r\n            onClick={nextPokemon}\r\n          >\r\n            Next Pokemon\r\n          </Box>\r\n        </Stack>\r\n      ) : (\r\n        <Stack>\r\n          <form onSubmit={handleSubmit}>\r\n            <Input\r\n              variant=\"filled\"\r\n              textAlign=\"center\"\r\n              placeholder=\"Write the answer\"\r\n              type=\"text\"\r\n              isInvalid={status === \"FAIL\"}\r\n              errorBorderColor=\"crimson\"\r\n              value={inputName}\r\n              onChange={(event) => setInputName(event.target.value)}\r\n            />\r\n            {status === \"FAIL\" && (\r\n              <Text color=\"primary\" textAlign=\"center\">\r\n                Wrong Answer\r\n              </Text>\r\n            )}\r\n          </form>\r\n          <Stack isInline>\r\n            <Button\r\n              p={2}\r\n              color=\"white\"\r\n              fontWeight=\"bold\"\r\n              borderRadius=\"md\"\r\n              bgGradient=\"linear(to-r, red.400,red.600)\"\r\n              _hover={{\r\n                bgGradient: \"linear(to-r, red.500, yellow.500)\",\r\n              }}\r\n              onClick={nextPokemon}\r\n              width=\"50%\"\r\n            >\r\n              Next\r\n            </Button>\r\n            <Button\r\n              p={2}\r\n              color=\"white\"\r\n              fontWeight=\"bold\"\r\n              borderRadius=\"md\"\r\n              bgGradient=\"linear(to-r, teal.500,green.500)\"\r\n              _hover={{\r\n                bgGradient: \"linear(to-r,  teal.500,teal.700)\",\r\n              }}\r\n              onClick={handleSubmit}\r\n              width=\"50%\"\r\n            >\r\n              Try\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport { Button, Heading, SimpleGrid, Stack } from \"@chakra-ui/react\";\r\n\r\nconst SelectLevel = ({ setGeneration, generation }) => {\r\n  const pagesGenerations = [\r\n    { name: \"I\", min: 1, max: 151 },\r\n    { name: \"II\", min: 152, max: 251 },\r\n    { name: \"III\", min: 252, max: 386 },\r\n    { name: \"IV\", min: 387, max: 494 },\r\n    { name: \"V\", min: 495, max: 649 },\r\n    { name: \"VI\", min: 650, max: 721 },\r\n    { name: \"VII\", min: 722, max: 809 },\r\n    { name: \"VIII\", min: 810, max: 897 },\r\n    { name: \"All Gens\", min: 1, max: 897 },\r\n  ];\r\n\r\n  return (\r\n    <Stack bg=\"gray.200\" padding={3} rounded={22}>\r\n      <Heading\r\n        textAlign=\"center\"\r\n        fontWeight=\"extrabold\"\r\n        bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n      >\r\n        Select Generation\r\n      </Heading>\r\n      <SimpleGrid\r\n        columns={3}\r\n        gap={3}\r\n        borderRadius={20}\r\n        bg=\"gray.200\"\r\n        padding={2}\r\n      >\r\n        {pagesGenerations.map((gen) => (\r\n          <Button\r\n            key={gen.name}\r\n            size=\"md\"\r\n            bgGradient={\r\n              gen.name !== generation.name\r\n                ? \"linear-gradient(to-r, #3a7bd5, #3a6073)\"\r\n                : \"linear-gradient(to-r, crimson, crimson)\"\r\n            }\r\n            color=\"white\"\r\n            _hover={{ bgGradient: \"linear(to-r, red.500, orange.500)\" }}\r\n            onClick={() => setGeneration(gen)}\r\n          >\r\n            {gen.name}\r\n          </Button>\r\n        ))}\r\n      </SimpleGrid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SelectLevel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Heading, Stack, Spinner } from \"@chakra-ui/react\";\r\nimport { useFetchGetPokemonID } from \"../../hooks/useFetchGetPokemonID\";\r\nimport Quiz from \"../PokemonQuiz/Quiz\";\r\nimport SelectLevel from \"../PokemonQuiz/SelectLevel\";\r\nimport GoHomeButton from \"../UI/GoHomeButton\";\r\n\r\nconst PokemonQuiz = () => {\r\n  const getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const [random, setRandom] = useState(null);\r\n  const [generation, setGeneration] = useState({ name: \"I\", min: 1, max: 151 });\r\n  const { pokemon, loading } = useFetchGetPokemonID(random);\r\n\r\n  useEffect(() => {\r\n    const idRandom = getRandomNumber(generation.min, generation.max);\r\n    setRandom(idRandom);\r\n  }, [generation]);\r\n\r\n  return (\r\n    <Stack\r\n      alignContent=\"center\"\r\n      bg=\"white\"\r\n      margin={{ base: 0, sm: 1, md: 4 }}\r\n      padding={{ base: 0, md: 4 }}\r\n      rounded={30}\r\n      spacing={3}\r\n    >\r\n      <GoHomeButton componentPathName=\"/quiz\" />\r\n\r\n      <Heading textAlign=\"center\" mt={4}>\r\n        Who's that Pokémon?\r\n      </Heading>\r\n      {loading ? (\r\n        <Stack alignItems=\"center\">\r\n          <Spinner\r\n            thickness=\"4px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"blue.500\"\r\n            size=\"xl\"\r\n            textAlign=\"center\"\r\n          />\r\n        </Stack>\r\n      ) : (\r\n        <Quiz\r\n          pokemon={pokemon}\r\n          nextPokemon={() =>\r\n            setRandom(getRandomNumber(generation.min, generation.max))\r\n          }\r\n        />\r\n      )}\r\n      <SelectLevel setGeneration={setGeneration} generation={generation} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default PokemonQuiz;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const useFetchGetPokemonID = (id) => {\r\n  const isMounted = useRef(true);\r\n  const [state, setState] = useState({ pokemon: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id !== null) {\r\n      setState({ pokemon: null, loading: true });\r\n      api.miniData(id).then((pokeData) => {\r\n        if (isMounted.current)\r\n          setState({\r\n            pokemon: pokeData,\r\n            loading: false,\r\n          });\r\n      });\r\n    }\r\n  }, [id]);\r\n  return state;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Landing from \"../components/Pages/Landing\";\r\nimport Pokedex from \"../components/Pages/Pokedex\";\r\nimport SearchPokemons from \"../components/Pages/SearchPokemons\";\r\nimport SearchMoves from \"../components/Pages/SearchMoves\";\r\nimport TypeCombination from \"../components/Pages/TypeCombination\";\r\n\r\nimport PokemonQuiz from \"../components/Pages/PokemonQuiz\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/search\">\r\n        <SearchPokemons />\r\n      </Route>\r\n      <Route exact path=\"/quiz\">\r\n        <PokemonQuiz />\r\n      </Route>\r\n      <Route exact path=\"/moves\">\r\n        <SearchMoves />\r\n      </Route>\r\n      <Route exact path=\"/combination\">\r\n        <TypeCombination />\r\n      </Route>\r\n      <Route exact path=\"/pokedex\">\r\n        <Pokedex />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Landing />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Stack } from \"@chakra-ui/react\";\r\nimport { Link as ReachLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Stack\r\n      as=\"nav\"\r\n      isInline\r\n      alignItems=\"center\"\r\n      height={12}\r\n      justifyContent={{ base: \"center\", md: \"space-between\" }}\r\n      bg=\"gray.900\"\r\n      zIndex={200}\r\n    >\r\n      <Stack isInline>\r\n        <Button colorScheme=\"gray.50\" variant=\"solid\" as={ReachLink} to=\"/home\">\r\n          PokedexApp\r\n        </Button>\r\n      </Stack>\r\n      <Stack isInline mr={2} display={{ base: \"none\", md: \"inline-flex\" }}>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"grass\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/pokedex\"\r\n        >\r\n          Pokedex\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"fire\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/moves\"\r\n        >\r\n          Moves\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"water\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/search\"\r\n        >\r\n          Find Pokemon\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"ground\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/quiz\"\r\n        >\r\n          Who's that Pokemon?\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          color=\"white\"\r\n          bg=\"poison\"\r\n          _hover={{ color: \"black\", opacity: 0.8 }}\r\n          as={ReachLink}\r\n          to=\"/combination\"\r\n        >\r\n          Types Weaks\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst Copyright = ({ textcolor, position }) => {\r\n  return (\r\n    <Text\r\n      cursor=\"pointer\"\r\n      onClick={() => window.open(`https://juanmaportfolio.netlify.app/`)}\r\n      textAlign=\"center\"\r\n      textColor=\"white\"\r\n    >\r\n      PokdexApp Copyright © Juan Manuel Ibarzabal Salles{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React from \"react\";\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Copyright from \"./Copyright\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Stack\r\n      textAlign=\"center\"\r\n      justify=\"center\"\r\n      bg=\"black\"\r\n      paddingY={4}\r\n      as=\"footer\"\r\n    >\r\n      <Copyright />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Grid } from \"@chakra-ui/react\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport Navbar from \"./components/UI/Navbar\";\r\nimport Footer from \"./components/UI/Footer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Grid\r\n      height=\"100vh\"\r\n      templateColumns=\"1fr\"\r\n      templateRows=\"auto 1fr auto\"\r\n      width=\"100vw\"\r\n    >\r\n      <Navbar />\r\n      <Grid\r\n        backgroundImage={{\r\n          base: \"none\",\r\n          md: \"url(/assets/ui/background.png)\",\r\n        }}\r\n        justifyItems=\"center\"\r\n        overflowY=\"auto\"\r\n        overflowX=\"hidden\"\r\n      >\r\n        <Grid maxW=\"680px\" w=\"100%\" marginY={{ base: 0, sm: 2, md: 4 }}>\r\n          <AppRouter />\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  colors: {\r\n    grass: \"#47CFAF\",\r\n    fire: \"#FB6D6C\",\r\n    water: \"#74BDFD\",\r\n    dragon: \"#8774FF\",\r\n    normal: \"#BDBDAE\",\r\n    bug: \"#C1D11F\",\r\n    poison: \"#AA5DA1\",\r\n    electric: \"#FEE63C\",\r\n    ground: \"#d3b54a\",\r\n    psychic: \"#F562B1\",\r\n    fighting: \"#B1746D\",\r\n    fairy: \"#FAADFF\",\r\n    rock: \"#CEBD72\",\r\n    ghost: \"#7A76D8\",\r\n    ice: \"#96F1FF\",\r\n    steel: \"#C4C2DB\",\r\n    flying: \"#7AA1FF\",\r\n    dark: \"#8A6653\",\r\n\r\n    primary: \"#ff0050\",\r\n    secondary: \"#2667ff\",\r\n  },\r\n  shadows: {\r\n    outline: \"0\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport \"./theme.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider resetCSS theme={theme}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}